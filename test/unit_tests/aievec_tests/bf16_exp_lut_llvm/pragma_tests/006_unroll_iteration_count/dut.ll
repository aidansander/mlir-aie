; ModuleID = 'dut.cc'
source_filename = "dut.cc"
target datalayout = "e-m:e-p:20:32-i1:8:32-i8:8:32-i16:16:32-i32:32:32-f32:32:32-i64:32-f64:32-a:0:32-n32"
target triple = "aie2"

@exp_ilut_ab = external dso_local global [512 x i16], align 32
@exp_ilut_cd = external dso_local global [512 x i16], align 32
@exp_flut_ab = external dso_local global [512 x i16], align 32
@exp_flut_cd = external dso_local global [512 x i16], align 32
@m_inv_lut = external dso_local local_unnamed_addr global [128 x i8], align 32

; Function Attrs: alwaysinline mustprogress nofree nounwind willreturn memory(read)
define dso_local noundef <8 x i64> @_Z10getExpBf16Dv16_u6__bf16(<16 x bfloat> noundef %0) local_unnamed_addr #0 {
  %2 = tail call noundef <16 x i32> @llvm.aie2.v16int32()
  %3 = tail call noundef <16 x i32> @llvm.aie2.vbroadcast32.I512(i32 1023)
  %4 = tail call noundef <16 x i32> @llvm.aie2.vbroadcast32.I512(i32 0)
  %5 = tail call noundef <16 x bfloat> @llvm.aie2.v16bfloat16()
  %6 = tail call noundef <8 x i64> @llvm.aie2.v16accfloat()
  %7 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %0, i32 8)
  %8 = tail call noundef <32 x i16> @llvm.aie2.v32int16()
  %9 = bitcast <32 x i16> %8 to <16 x i32>
  %10 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %7, <16 x i32> %9, i32 2)
  %11 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %10, i32 0)
  %12 = bitcast <8 x i32> %11 to <16 x i16>
  %13 = tail call noundef <32 x bfloat> @llvm.aie2.v32bfloat16()
  %14 = tail call noundef <16 x i64> @llvm.aie2.v16acc64()
  %15 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %12, i32 0, i32 0)
  %16 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %15, i32 6, i32 1)
  %17 = zext i20 ptrtoint (ptr @exp_ilut_ab to i20) to i32
  %18 = tail call noundef <16 x i32> @llvm.aie2.vbroadcast32.I512(i32 %17)
  %19 = zext i20 ptrtoint (ptr @exp_ilut_cd to i20) to i32
  %20 = tail call noundef <16 x i32> @llvm.aie2.vbroadcast32.I512(i32 %19)
  %21 = tail call noundef <16 x i32> @llvm.aie2.vsel32(<16 x i32> %18, <16 x i32> %20, i32 52428)
  %22 = add <16 x i32> %21, %16
  %23 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %22, i32 0)
  %24 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %23), !noalias !2
  %25 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %24, i32 0)
  %26 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %23), !noalias !2
  %27 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %25, <8 x i32> %26, i32 1)
  %28 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %22, i32 1)
  %29 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %28), !noalias !2
  %30 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %29, i32 0)
  %31 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %28), !noalias !2
  %32 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %30, <8 x i32> %31, i32 1)
  %33 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %27, <16 x i32> %32, i32 24)
  %34 = bitcast <16 x i32> %33 to <32 x bfloat>
  %35 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %34, i32 0)
  %36 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %15, i32 -2, i32 1)
  %37 = and <16 x i32> %36, %3
  %38 = zext i20 ptrtoint (ptr @exp_flut_ab to i20) to i32
  %39 = tail call noundef <16 x i32> @llvm.aie2.vbroadcast32.I512(i32 %38)
  %40 = zext i20 ptrtoint (ptr @exp_flut_cd to i20) to i32
  %41 = tail call noundef <16 x i32> @llvm.aie2.vbroadcast32.I512(i32 %40)
  %42 = tail call noundef <16 x i32> @llvm.aie2.vsel32(<16 x i32> %39, <16 x i32> %41, i32 52428)
  %43 = add <16 x i32> %42, %37
  %44 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %43, i32 0)
  %45 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %44), !noalias !7
  %46 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %45, i32 0)
  %47 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %44), !noalias !7
  %48 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %46, <8 x i32> %47, i32 1)
  %49 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %43, i32 1)
  %50 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %49), !noalias !7
  %51 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %50, i32 0)
  %52 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %49), !noalias !7
  %53 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %51, <8 x i32> %52, i32 1)
  %54 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %48, <16 x i32> %53, i32 24)
  %55 = bitcast <16 x i32> %54 to <32 x bfloat>
  %56 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %55, i32 0)
  %57 = tail call noundef <32 x bfloat> @llvm.aie2.vbroadcast16.bf512(bfloat 0xR0000)
  %58 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %57, i32 0)
  %59 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %35, i32 0)
  %60 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %59, <16 x bfloat> %58, i32 1)
  %61 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %56, i32 0)
  %62 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %61, <16 x bfloat> %58, i32 1)
  %63 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %60, <32 x bfloat> %62, i32 60)
  ret <8 x i64> %63
}

; Function Attrs: alwaysinline mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: none, inaccessiblemem: none)
define dso_local noundef bfloat @_Z10getInvBf16f(float noundef %0) local_unnamed_addr #1 {
  %2 = bitcast float %0 to i32
  %3 = add i32 %2, 32768
  %4 = lshr i32 %3, 23
  %5 = lshr i32 %3, 16
  %6 = and i32 %5, 127
  %7 = icmp eq i32 %6, 0
  %8 = zext i1 %7 to i32
  %9 = and i32 %4, 255
  %10 = sub nsw i32 %8, %9
  %11 = shl nsw i32 %10, 7
  %12 = add nsw i32 %11, 32384
  %13 = trunc i32 %6 to i20
  %14 = getelementptr inbounds [128 x i8], ptr @m_inv_lut, i20 0, i20 %13
  %15 = load i8, ptr %14, align 1, !tbaa !12
  %16 = zext i8 %15 to i32
  %17 = add nsw i32 %12, %16
  %18 = trunc i32 %17 to i16
  %19 = bitcast i16 %18 to bfloat
  ret bfloat %19
}

; Function Attrs: mustprogress nofree nounwind memory(read, argmem: readwrite)
define dso_local void @dut(ptr noalias nocapture readonly %0, ptr noalias nocapture writeonly %1) local_unnamed_addr #2 {
  %3 = tail call noundef <16 x i32> @llvm.aie2.v16int32()
  %4 = tail call noundef <16 x i32> @llvm.aie2.vbroadcast32.I512(i32 1023)
  %5 = tail call noundef <16 x i32> @llvm.aie2.vbroadcast32.I512(i32 0)
  %6 = tail call noundef <16 x bfloat> @llvm.aie2.v16bfloat16()
  %7 = tail call noundef <8 x i64> @llvm.aie2.v16accfloat()
  %8 = zext i20 ptrtoint (ptr @exp_ilut_ab to i20) to i32
  %9 = zext i20 ptrtoint (ptr @exp_ilut_cd to i20) to i32
  %10 = zext i20 ptrtoint (ptr @exp_flut_ab to i20) to i32
  %11 = zext i20 ptrtoint (ptr @exp_flut_cd to i20) to i32
  %12 = load <16 x bfloat>, ptr %0, align 32, !tbaa !12
  %13 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %12, i32 8)
  %14 = tail call noundef <32 x i16> @llvm.aie2.v32int16()
  %15 = bitcast <32 x i16> %14 to <16 x i32>
  %16 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %13, <16 x i32> %15, i32 2)
  %17 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %16, i32 0)
  %18 = bitcast <8 x i32> %17 to <16 x i16>
  %19 = tail call noundef <32 x bfloat> @llvm.aie2.v32bfloat16()
  %20 = tail call noundef <16 x i64> @llvm.aie2.v16acc64()
  %21 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %18, i32 0, i32 0)
  %22 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %21, i32 6, i32 1)
  %23 = tail call noundef <16 x i32> @llvm.aie2.vbroadcast32.I512(i32 %8)
  %24 = tail call noundef <16 x i32> @llvm.aie2.vbroadcast32.I512(i32 %9)
  %25 = tail call noundef <16 x i32> @llvm.aie2.vsel32(<16 x i32> %23, <16 x i32> %24, i32 52428)
  %26 = add <16 x i32> %25, %22
  %27 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %26, i32 0)
  %28 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %27), !noalias !15
  %29 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %28, i32 0)
  %30 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %27), !noalias !15
  %31 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %29, <8 x i32> %30, i32 1)
  %32 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %26, i32 1)
  %33 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %32), !noalias !15
  %34 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %33, i32 0)
  %35 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %32), !noalias !15
  %36 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %34, <8 x i32> %35, i32 1)
  %37 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %31, <16 x i32> %36, i32 24)
  %38 = bitcast <16 x i32> %37 to <32 x bfloat>
  %39 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %38, i32 0)
  %40 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %21, i32 -2, i32 1)
  %41 = and <16 x i32> %40, %4
  %42 = tail call noundef <16 x i32> @llvm.aie2.vbroadcast32.I512(i32 %10)
  %43 = tail call noundef <16 x i32> @llvm.aie2.vbroadcast32.I512(i32 %11)
  %44 = tail call noundef <16 x i32> @llvm.aie2.vsel32(<16 x i32> %42, <16 x i32> %43, i32 52428)
  %45 = add <16 x i32> %44, %41
  %46 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %45, i32 0)
  %47 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %46), !noalias !20
  %48 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %47, i32 0)
  %49 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %46), !noalias !20
  %50 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %48, <8 x i32> %49, i32 1)
  %51 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %45, i32 1)
  %52 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %51), !noalias !20
  %53 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %52, i32 0)
  %54 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %51), !noalias !20
  %55 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %53, <8 x i32> %54, i32 1)
  %56 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %50, <16 x i32> %55, i32 24)
  %57 = bitcast <16 x i32> %56 to <32 x bfloat>
  %58 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %57, i32 0)
  %59 = tail call noundef <32 x bfloat> @llvm.aie2.vbroadcast16.bf512(bfloat 0xR0000)
  %60 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %59, i32 0)
  %61 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %39, i32 0)
  %62 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %61, <16 x bfloat> %60, i32 1)
  %63 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %58, i32 0)
  %64 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %63, <16 x bfloat> %60, i32 1)
  %65 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %62, <32 x bfloat> %64, i32 60)
  %66 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %65)
  store <16 x bfloat> %66, ptr %1, align 32, !tbaa !12
  %67 = getelementptr inbounds bfloat, ptr %0, i20 16
  %68 = load <16 x bfloat>, ptr %67, align 32, !tbaa !12
  %69 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %68, i32 8)
  %70 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %69, <16 x i32> %15, i32 2)
  %71 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %70, i32 0)
  %72 = bitcast <8 x i32> %71 to <16 x i16>
  %73 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %72, i32 0, i32 0)
  %74 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %73, i32 6, i32 1)
  %75 = add <16 x i32> %25, %74
  %76 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %75, i32 0)
  %77 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %76), !noalias !15
  %78 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %77, i32 0)
  %79 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %76), !noalias !15
  %80 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %78, <8 x i32> %79, i32 1)
  %81 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %75, i32 1)
  %82 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %81), !noalias !15
  %83 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %82, i32 0)
  %84 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %81), !noalias !15
  %85 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %83, <8 x i32> %84, i32 1)
  %86 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %80, <16 x i32> %85, i32 24)
  %87 = bitcast <16 x i32> %86 to <32 x bfloat>
  %88 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %87, i32 0)
  %89 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %73, i32 -2, i32 1)
  %90 = and <16 x i32> %89, %4
  %91 = add <16 x i32> %44, %90
  %92 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %91, i32 0)
  %93 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %92), !noalias !20
  %94 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %93, i32 0)
  %95 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %92), !noalias !20
  %96 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %94, <8 x i32> %95, i32 1)
  %97 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %91, i32 1)
  %98 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %97), !noalias !20
  %99 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %98, i32 0)
  %100 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %97), !noalias !20
  %101 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %99, <8 x i32> %100, i32 1)
  %102 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %96, <16 x i32> %101, i32 24)
  %103 = bitcast <16 x i32> %102 to <32 x bfloat>
  %104 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %103, i32 0)
  %105 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %88, i32 0)
  %106 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %105, <16 x bfloat> %60, i32 1)
  %107 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %104, i32 0)
  %108 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %107, <16 x bfloat> %60, i32 1)
  %109 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %106, <32 x bfloat> %108, i32 60)
  %110 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %109)
  %111 = getelementptr inbounds bfloat, ptr %1, i20 16
  store <16 x bfloat> %110, ptr %111, align 32, !tbaa !12
  %112 = getelementptr inbounds bfloat, ptr %0, i20 32
  %113 = load <16 x bfloat>, ptr %112, align 32, !tbaa !12
  %114 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %113, i32 8)
  %115 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %114, <16 x i32> %15, i32 2)
  %116 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %115, i32 0)
  %117 = bitcast <8 x i32> %116 to <16 x i16>
  %118 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %117, i32 0, i32 0)
  %119 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %118, i32 6, i32 1)
  %120 = add <16 x i32> %25, %119
  %121 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %120, i32 0)
  %122 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %121), !noalias !15
  %123 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %122, i32 0)
  %124 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %121), !noalias !15
  %125 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %123, <8 x i32> %124, i32 1)
  %126 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %120, i32 1)
  %127 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %126), !noalias !15
  %128 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %127, i32 0)
  %129 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %126), !noalias !15
  %130 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %128, <8 x i32> %129, i32 1)
  %131 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %125, <16 x i32> %130, i32 24)
  %132 = bitcast <16 x i32> %131 to <32 x bfloat>
  %133 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %132, i32 0)
  %134 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %118, i32 -2, i32 1)
  %135 = and <16 x i32> %134, %4
  %136 = add <16 x i32> %44, %135
  %137 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %136, i32 0)
  %138 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %137), !noalias !20
  %139 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %138, i32 0)
  %140 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %137), !noalias !20
  %141 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %139, <8 x i32> %140, i32 1)
  %142 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %136, i32 1)
  %143 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %142), !noalias !20
  %144 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %143, i32 0)
  %145 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %142), !noalias !20
  %146 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %144, <8 x i32> %145, i32 1)
  %147 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %141, <16 x i32> %146, i32 24)
  %148 = bitcast <16 x i32> %147 to <32 x bfloat>
  %149 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %148, i32 0)
  %150 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %133, i32 0)
  %151 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %150, <16 x bfloat> %60, i32 1)
  %152 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %149, i32 0)
  %153 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %152, <16 x bfloat> %60, i32 1)
  %154 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %151, <32 x bfloat> %153, i32 60)
  %155 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %154)
  %156 = getelementptr inbounds bfloat, ptr %1, i20 32
  store <16 x bfloat> %155, ptr %156, align 32, !tbaa !12
  %157 = getelementptr inbounds bfloat, ptr %0, i20 48
  %158 = load <16 x bfloat>, ptr %157, align 32, !tbaa !12
  %159 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %158, i32 8)
  %160 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %159, <16 x i32> %15, i32 2)
  %161 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %160, i32 0)
  %162 = bitcast <8 x i32> %161 to <16 x i16>
  %163 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %162, i32 0, i32 0)
  %164 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %163, i32 6, i32 1)
  %165 = add <16 x i32> %25, %164
  %166 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %165, i32 0)
  %167 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %166), !noalias !15
  %168 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %167, i32 0)
  %169 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %166), !noalias !15
  %170 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %168, <8 x i32> %169, i32 1)
  %171 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %165, i32 1)
  %172 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %171), !noalias !15
  %173 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %172, i32 0)
  %174 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %171), !noalias !15
  %175 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %173, <8 x i32> %174, i32 1)
  %176 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %170, <16 x i32> %175, i32 24)
  %177 = bitcast <16 x i32> %176 to <32 x bfloat>
  %178 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %177, i32 0)
  %179 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %163, i32 -2, i32 1)
  %180 = and <16 x i32> %179, %4
  %181 = add <16 x i32> %44, %180
  %182 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %181, i32 0)
  %183 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %182), !noalias !20
  %184 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %183, i32 0)
  %185 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %182), !noalias !20
  %186 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %184, <8 x i32> %185, i32 1)
  %187 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %181, i32 1)
  %188 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %187), !noalias !20
  %189 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %188, i32 0)
  %190 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %187), !noalias !20
  %191 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %189, <8 x i32> %190, i32 1)
  %192 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %186, <16 x i32> %191, i32 24)
  %193 = bitcast <16 x i32> %192 to <32 x bfloat>
  %194 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %193, i32 0)
  %195 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %178, i32 0)
  %196 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %195, <16 x bfloat> %60, i32 1)
  %197 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %194, i32 0)
  %198 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %197, <16 x bfloat> %60, i32 1)
  %199 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %196, <32 x bfloat> %198, i32 60)
  %200 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %199)
  %201 = getelementptr inbounds bfloat, ptr %1, i20 48
  store <16 x bfloat> %200, ptr %201, align 32, !tbaa !12
  %202 = getelementptr inbounds bfloat, ptr %0, i20 64
  %203 = load <16 x bfloat>, ptr %202, align 32, !tbaa !12
  %204 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %203, i32 8)
  %205 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %204, <16 x i32> %15, i32 2)
  %206 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %205, i32 0)
  %207 = bitcast <8 x i32> %206 to <16 x i16>
  %208 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %207, i32 0, i32 0)
  %209 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %208, i32 6, i32 1)
  %210 = add <16 x i32> %25, %209
  %211 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %210, i32 0)
  %212 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %211), !noalias !15
  %213 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %212, i32 0)
  %214 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %211), !noalias !15
  %215 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %213, <8 x i32> %214, i32 1)
  %216 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %210, i32 1)
  %217 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %216), !noalias !15
  %218 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %217, i32 0)
  %219 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %216), !noalias !15
  %220 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %218, <8 x i32> %219, i32 1)
  %221 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %215, <16 x i32> %220, i32 24)
  %222 = bitcast <16 x i32> %221 to <32 x bfloat>
  %223 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %222, i32 0)
  %224 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %208, i32 -2, i32 1)
  %225 = and <16 x i32> %224, %4
  %226 = add <16 x i32> %44, %225
  %227 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %226, i32 0)
  %228 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %227), !noalias !20
  %229 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %228, i32 0)
  %230 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %227), !noalias !20
  %231 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %229, <8 x i32> %230, i32 1)
  %232 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %226, i32 1)
  %233 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %232), !noalias !20
  %234 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %233, i32 0)
  %235 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %232), !noalias !20
  %236 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %234, <8 x i32> %235, i32 1)
  %237 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %231, <16 x i32> %236, i32 24)
  %238 = bitcast <16 x i32> %237 to <32 x bfloat>
  %239 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %238, i32 0)
  %240 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %223, i32 0)
  %241 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %240, <16 x bfloat> %60, i32 1)
  %242 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %239, i32 0)
  %243 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %242, <16 x bfloat> %60, i32 1)
  %244 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %241, <32 x bfloat> %243, i32 60)
  %245 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %244)
  %246 = getelementptr inbounds bfloat, ptr %1, i20 64
  store <16 x bfloat> %245, ptr %246, align 32, !tbaa !12
  %247 = getelementptr inbounds bfloat, ptr %0, i20 80
  %248 = load <16 x bfloat>, ptr %247, align 32, !tbaa !12
  %249 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %248, i32 8)
  %250 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %249, <16 x i32> %15, i32 2)
  %251 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %250, i32 0)
  %252 = bitcast <8 x i32> %251 to <16 x i16>
  %253 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %252, i32 0, i32 0)
  %254 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %253, i32 6, i32 1)
  %255 = add <16 x i32> %25, %254
  %256 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %255, i32 0)
  %257 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %256), !noalias !15
  %258 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %257, i32 0)
  %259 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %256), !noalias !15
  %260 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %258, <8 x i32> %259, i32 1)
  %261 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %255, i32 1)
  %262 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %261), !noalias !15
  %263 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %262, i32 0)
  %264 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %261), !noalias !15
  %265 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %263, <8 x i32> %264, i32 1)
  %266 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %260, <16 x i32> %265, i32 24)
  %267 = bitcast <16 x i32> %266 to <32 x bfloat>
  %268 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %267, i32 0)
  %269 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %253, i32 -2, i32 1)
  %270 = and <16 x i32> %269, %4
  %271 = add <16 x i32> %44, %270
  %272 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %271, i32 0)
  %273 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %272), !noalias !20
  %274 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %273, i32 0)
  %275 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %272), !noalias !20
  %276 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %274, <8 x i32> %275, i32 1)
  %277 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %271, i32 1)
  %278 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %277), !noalias !20
  %279 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %278, i32 0)
  %280 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %277), !noalias !20
  %281 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %279, <8 x i32> %280, i32 1)
  %282 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %276, <16 x i32> %281, i32 24)
  %283 = bitcast <16 x i32> %282 to <32 x bfloat>
  %284 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %283, i32 0)
  %285 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %268, i32 0)
  %286 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %285, <16 x bfloat> %60, i32 1)
  %287 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %284, i32 0)
  %288 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %287, <16 x bfloat> %60, i32 1)
  %289 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %286, <32 x bfloat> %288, i32 60)
  %290 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %289)
  %291 = getelementptr inbounds bfloat, ptr %1, i20 80
  store <16 x bfloat> %290, ptr %291, align 32, !tbaa !12
  %292 = getelementptr inbounds bfloat, ptr %0, i20 96
  %293 = load <16 x bfloat>, ptr %292, align 32, !tbaa !12
  %294 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %293, i32 8)
  %295 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %294, <16 x i32> %15, i32 2)
  %296 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %295, i32 0)
  %297 = bitcast <8 x i32> %296 to <16 x i16>
  %298 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %297, i32 0, i32 0)
  %299 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %298, i32 6, i32 1)
  %300 = add <16 x i32> %25, %299
  %301 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %300, i32 0)
  %302 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %301), !noalias !15
  %303 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %302, i32 0)
  %304 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %301), !noalias !15
  %305 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %303, <8 x i32> %304, i32 1)
  %306 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %300, i32 1)
  %307 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %306), !noalias !15
  %308 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %307, i32 0)
  %309 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %306), !noalias !15
  %310 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %308, <8 x i32> %309, i32 1)
  %311 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %305, <16 x i32> %310, i32 24)
  %312 = bitcast <16 x i32> %311 to <32 x bfloat>
  %313 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %312, i32 0)
  %314 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %298, i32 -2, i32 1)
  %315 = and <16 x i32> %314, %4
  %316 = add <16 x i32> %44, %315
  %317 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %316, i32 0)
  %318 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %317), !noalias !20
  %319 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %318, i32 0)
  %320 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %317), !noalias !20
  %321 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %319, <8 x i32> %320, i32 1)
  %322 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %316, i32 1)
  %323 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %322), !noalias !20
  %324 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %323, i32 0)
  %325 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %322), !noalias !20
  %326 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %324, <8 x i32> %325, i32 1)
  %327 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %321, <16 x i32> %326, i32 24)
  %328 = bitcast <16 x i32> %327 to <32 x bfloat>
  %329 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %328, i32 0)
  %330 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %313, i32 0)
  %331 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %330, <16 x bfloat> %60, i32 1)
  %332 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %329, i32 0)
  %333 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %332, <16 x bfloat> %60, i32 1)
  %334 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %331, <32 x bfloat> %333, i32 60)
  %335 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %334)
  %336 = getelementptr inbounds bfloat, ptr %1, i20 96
  store <16 x bfloat> %335, ptr %336, align 32, !tbaa !12
  %337 = getelementptr inbounds bfloat, ptr %0, i20 112
  %338 = load <16 x bfloat>, ptr %337, align 32, !tbaa !12
  %339 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %338, i32 8)
  %340 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %339, <16 x i32> %15, i32 2)
  %341 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %340, i32 0)
  %342 = bitcast <8 x i32> %341 to <16 x i16>
  %343 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %342, i32 0, i32 0)
  %344 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %343, i32 6, i32 1)
  %345 = add <16 x i32> %25, %344
  %346 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %345, i32 0)
  %347 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %346), !noalias !15
  %348 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %347, i32 0)
  %349 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %346), !noalias !15
  %350 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %348, <8 x i32> %349, i32 1)
  %351 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %345, i32 1)
  %352 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %351), !noalias !15
  %353 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %352, i32 0)
  %354 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %351), !noalias !15
  %355 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %353, <8 x i32> %354, i32 1)
  %356 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %350, <16 x i32> %355, i32 24)
  %357 = bitcast <16 x i32> %356 to <32 x bfloat>
  %358 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %357, i32 0)
  %359 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %343, i32 -2, i32 1)
  %360 = and <16 x i32> %359, %4
  %361 = add <16 x i32> %44, %360
  %362 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %361, i32 0)
  %363 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %362), !noalias !20
  %364 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %363, i32 0)
  %365 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %362), !noalias !20
  %366 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %364, <8 x i32> %365, i32 1)
  %367 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %361, i32 1)
  %368 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %367), !noalias !20
  %369 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %368, i32 0)
  %370 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %367), !noalias !20
  %371 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %369, <8 x i32> %370, i32 1)
  %372 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %366, <16 x i32> %371, i32 24)
  %373 = bitcast <16 x i32> %372 to <32 x bfloat>
  %374 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %373, i32 0)
  %375 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %358, i32 0)
  %376 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %375, <16 x bfloat> %60, i32 1)
  %377 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %374, i32 0)
  %378 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %377, <16 x bfloat> %60, i32 1)
  %379 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %376, <32 x bfloat> %378, i32 60)
  %380 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %379)
  %381 = getelementptr inbounds bfloat, ptr %1, i20 112
  store <16 x bfloat> %380, ptr %381, align 32, !tbaa !12
  %382 = getelementptr inbounds bfloat, ptr %0, i20 128
  %383 = load <16 x bfloat>, ptr %382, align 32, !tbaa !12
  %384 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %383, i32 8)
  %385 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %384, <16 x i32> %15, i32 2)
  %386 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %385, i32 0)
  %387 = bitcast <8 x i32> %386 to <16 x i16>
  %388 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %387, i32 0, i32 0)
  %389 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %388, i32 6, i32 1)
  %390 = add <16 x i32> %25, %389
  %391 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %390, i32 0)
  %392 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %391), !noalias !15
  %393 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %392, i32 0)
  %394 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %391), !noalias !15
  %395 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %393, <8 x i32> %394, i32 1)
  %396 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %390, i32 1)
  %397 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %396), !noalias !15
  %398 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %397, i32 0)
  %399 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %396), !noalias !15
  %400 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %398, <8 x i32> %399, i32 1)
  %401 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %395, <16 x i32> %400, i32 24)
  %402 = bitcast <16 x i32> %401 to <32 x bfloat>
  %403 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %402, i32 0)
  %404 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %388, i32 -2, i32 1)
  %405 = and <16 x i32> %404, %4
  %406 = add <16 x i32> %44, %405
  %407 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %406, i32 0)
  %408 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %407), !noalias !20
  %409 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %408, i32 0)
  %410 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %407), !noalias !20
  %411 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %409, <8 x i32> %410, i32 1)
  %412 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %406, i32 1)
  %413 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %412), !noalias !20
  %414 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %413, i32 0)
  %415 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %412), !noalias !20
  %416 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %414, <8 x i32> %415, i32 1)
  %417 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %411, <16 x i32> %416, i32 24)
  %418 = bitcast <16 x i32> %417 to <32 x bfloat>
  %419 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %418, i32 0)
  %420 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %403, i32 0)
  %421 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %420, <16 x bfloat> %60, i32 1)
  %422 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %419, i32 0)
  %423 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %422, <16 x bfloat> %60, i32 1)
  %424 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %421, <32 x bfloat> %423, i32 60)
  %425 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %424)
  %426 = getelementptr inbounds bfloat, ptr %1, i20 128
  store <16 x bfloat> %425, ptr %426, align 32, !tbaa !12
  %427 = getelementptr inbounds bfloat, ptr %0, i20 144
  %428 = load <16 x bfloat>, ptr %427, align 32, !tbaa !12
  %429 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %428, i32 8)
  %430 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %429, <16 x i32> %15, i32 2)
  %431 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %430, i32 0)
  %432 = bitcast <8 x i32> %431 to <16 x i16>
  %433 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %432, i32 0, i32 0)
  %434 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %433, i32 6, i32 1)
  %435 = add <16 x i32> %25, %434
  %436 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %435, i32 0)
  %437 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %436), !noalias !15
  %438 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %437, i32 0)
  %439 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %436), !noalias !15
  %440 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %438, <8 x i32> %439, i32 1)
  %441 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %435, i32 1)
  %442 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %441), !noalias !15
  %443 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %442, i32 0)
  %444 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %441), !noalias !15
  %445 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %443, <8 x i32> %444, i32 1)
  %446 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %440, <16 x i32> %445, i32 24)
  %447 = bitcast <16 x i32> %446 to <32 x bfloat>
  %448 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %447, i32 0)
  %449 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %433, i32 -2, i32 1)
  %450 = and <16 x i32> %449, %4
  %451 = add <16 x i32> %44, %450
  %452 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %451, i32 0)
  %453 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %452), !noalias !20
  %454 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %453, i32 0)
  %455 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %452), !noalias !20
  %456 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %454, <8 x i32> %455, i32 1)
  %457 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %451, i32 1)
  %458 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %457), !noalias !20
  %459 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %458, i32 0)
  %460 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %457), !noalias !20
  %461 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %459, <8 x i32> %460, i32 1)
  %462 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %456, <16 x i32> %461, i32 24)
  %463 = bitcast <16 x i32> %462 to <32 x bfloat>
  %464 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %463, i32 0)
  %465 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %448, i32 0)
  %466 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %465, <16 x bfloat> %60, i32 1)
  %467 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %464, i32 0)
  %468 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %467, <16 x bfloat> %60, i32 1)
  %469 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %466, <32 x bfloat> %468, i32 60)
  %470 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %469)
  %471 = getelementptr inbounds bfloat, ptr %1, i20 144
  store <16 x bfloat> %470, ptr %471, align 32, !tbaa !12
  %472 = getelementptr inbounds bfloat, ptr %0, i20 160
  %473 = load <16 x bfloat>, ptr %472, align 32, !tbaa !12
  %474 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %473, i32 8)
  %475 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %474, <16 x i32> %15, i32 2)
  %476 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %475, i32 0)
  %477 = bitcast <8 x i32> %476 to <16 x i16>
  %478 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %477, i32 0, i32 0)
  %479 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %478, i32 6, i32 1)
  %480 = add <16 x i32> %25, %479
  %481 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %480, i32 0)
  %482 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %481), !noalias !15
  %483 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %482, i32 0)
  %484 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %481), !noalias !15
  %485 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %483, <8 x i32> %484, i32 1)
  %486 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %480, i32 1)
  %487 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %486), !noalias !15
  %488 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %487, i32 0)
  %489 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %486), !noalias !15
  %490 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %488, <8 x i32> %489, i32 1)
  %491 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %485, <16 x i32> %490, i32 24)
  %492 = bitcast <16 x i32> %491 to <32 x bfloat>
  %493 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %492, i32 0)
  %494 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %478, i32 -2, i32 1)
  %495 = and <16 x i32> %494, %4
  %496 = add <16 x i32> %44, %495
  %497 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %496, i32 0)
  %498 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %497), !noalias !20
  %499 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %498, i32 0)
  %500 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %497), !noalias !20
  %501 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %499, <8 x i32> %500, i32 1)
  %502 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %496, i32 1)
  %503 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %502), !noalias !20
  %504 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %503, i32 0)
  %505 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %502), !noalias !20
  %506 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %504, <8 x i32> %505, i32 1)
  %507 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %501, <16 x i32> %506, i32 24)
  %508 = bitcast <16 x i32> %507 to <32 x bfloat>
  %509 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %508, i32 0)
  %510 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %493, i32 0)
  %511 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %510, <16 x bfloat> %60, i32 1)
  %512 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %509, i32 0)
  %513 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %512, <16 x bfloat> %60, i32 1)
  %514 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %511, <32 x bfloat> %513, i32 60)
  %515 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %514)
  %516 = getelementptr inbounds bfloat, ptr %1, i20 160
  store <16 x bfloat> %515, ptr %516, align 32, !tbaa !12
  %517 = getelementptr inbounds bfloat, ptr %0, i20 176
  %518 = load <16 x bfloat>, ptr %517, align 32, !tbaa !12
  %519 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %518, i32 8)
  %520 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %519, <16 x i32> %15, i32 2)
  %521 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %520, i32 0)
  %522 = bitcast <8 x i32> %521 to <16 x i16>
  %523 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %522, i32 0, i32 0)
  %524 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %523, i32 6, i32 1)
  %525 = add <16 x i32> %25, %524
  %526 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %525, i32 0)
  %527 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %526), !noalias !15
  %528 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %527, i32 0)
  %529 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %526), !noalias !15
  %530 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %528, <8 x i32> %529, i32 1)
  %531 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %525, i32 1)
  %532 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %531), !noalias !15
  %533 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %532, i32 0)
  %534 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %531), !noalias !15
  %535 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %533, <8 x i32> %534, i32 1)
  %536 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %530, <16 x i32> %535, i32 24)
  %537 = bitcast <16 x i32> %536 to <32 x bfloat>
  %538 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %537, i32 0)
  %539 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %523, i32 -2, i32 1)
  %540 = and <16 x i32> %539, %4
  %541 = add <16 x i32> %44, %540
  %542 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %541, i32 0)
  %543 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %542), !noalias !20
  %544 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %543, i32 0)
  %545 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %542), !noalias !20
  %546 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %544, <8 x i32> %545, i32 1)
  %547 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %541, i32 1)
  %548 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %547), !noalias !20
  %549 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %548, i32 0)
  %550 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %547), !noalias !20
  %551 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %549, <8 x i32> %550, i32 1)
  %552 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %546, <16 x i32> %551, i32 24)
  %553 = bitcast <16 x i32> %552 to <32 x bfloat>
  %554 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %553, i32 0)
  %555 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %538, i32 0)
  %556 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %555, <16 x bfloat> %60, i32 1)
  %557 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %554, i32 0)
  %558 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %557, <16 x bfloat> %60, i32 1)
  %559 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %556, <32 x bfloat> %558, i32 60)
  %560 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %559)
  %561 = getelementptr inbounds bfloat, ptr %1, i20 176
  store <16 x bfloat> %560, ptr %561, align 32, !tbaa !12
  %562 = getelementptr inbounds bfloat, ptr %0, i20 192
  %563 = load <16 x bfloat>, ptr %562, align 32, !tbaa !12
  %564 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %563, i32 8)
  %565 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %564, <16 x i32> %15, i32 2)
  %566 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %565, i32 0)
  %567 = bitcast <8 x i32> %566 to <16 x i16>
  %568 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %567, i32 0, i32 0)
  %569 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %568, i32 6, i32 1)
  %570 = add <16 x i32> %25, %569
  %571 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %570, i32 0)
  %572 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %571), !noalias !15
  %573 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %572, i32 0)
  %574 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %571), !noalias !15
  %575 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %573, <8 x i32> %574, i32 1)
  %576 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %570, i32 1)
  %577 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %576), !noalias !15
  %578 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %577, i32 0)
  %579 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %576), !noalias !15
  %580 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %578, <8 x i32> %579, i32 1)
  %581 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %575, <16 x i32> %580, i32 24)
  %582 = bitcast <16 x i32> %581 to <32 x bfloat>
  %583 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %582, i32 0)
  %584 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %568, i32 -2, i32 1)
  %585 = and <16 x i32> %584, %4
  %586 = add <16 x i32> %44, %585
  %587 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %586, i32 0)
  %588 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %587), !noalias !20
  %589 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %588, i32 0)
  %590 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %587), !noalias !20
  %591 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %589, <8 x i32> %590, i32 1)
  %592 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %586, i32 1)
  %593 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %592), !noalias !20
  %594 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %593, i32 0)
  %595 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %592), !noalias !20
  %596 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %594, <8 x i32> %595, i32 1)
  %597 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %591, <16 x i32> %596, i32 24)
  %598 = bitcast <16 x i32> %597 to <32 x bfloat>
  %599 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %598, i32 0)
  %600 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %583, i32 0)
  %601 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %600, <16 x bfloat> %60, i32 1)
  %602 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %599, i32 0)
  %603 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %602, <16 x bfloat> %60, i32 1)
  %604 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %601, <32 x bfloat> %603, i32 60)
  %605 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %604)
  %606 = getelementptr inbounds bfloat, ptr %1, i20 192
  store <16 x bfloat> %605, ptr %606, align 32, !tbaa !12
  %607 = getelementptr inbounds bfloat, ptr %0, i20 208
  %608 = load <16 x bfloat>, ptr %607, align 32, !tbaa !12
  %609 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %608, i32 8)
  %610 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %609, <16 x i32> %15, i32 2)
  %611 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %610, i32 0)
  %612 = bitcast <8 x i32> %611 to <16 x i16>
  %613 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %612, i32 0, i32 0)
  %614 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %613, i32 6, i32 1)
  %615 = add <16 x i32> %25, %614
  %616 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %615, i32 0)
  %617 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %616), !noalias !15
  %618 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %617, i32 0)
  %619 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %616), !noalias !15
  %620 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %618, <8 x i32> %619, i32 1)
  %621 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %615, i32 1)
  %622 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %621), !noalias !15
  %623 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %622, i32 0)
  %624 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %621), !noalias !15
  %625 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %623, <8 x i32> %624, i32 1)
  %626 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %620, <16 x i32> %625, i32 24)
  %627 = bitcast <16 x i32> %626 to <32 x bfloat>
  %628 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %627, i32 0)
  %629 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %613, i32 -2, i32 1)
  %630 = and <16 x i32> %629, %4
  %631 = add <16 x i32> %44, %630
  %632 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %631, i32 0)
  %633 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %632), !noalias !20
  %634 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %633, i32 0)
  %635 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %632), !noalias !20
  %636 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %634, <8 x i32> %635, i32 1)
  %637 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %631, i32 1)
  %638 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %637), !noalias !20
  %639 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %638, i32 0)
  %640 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %637), !noalias !20
  %641 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %639, <8 x i32> %640, i32 1)
  %642 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %636, <16 x i32> %641, i32 24)
  %643 = bitcast <16 x i32> %642 to <32 x bfloat>
  %644 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %643, i32 0)
  %645 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %628, i32 0)
  %646 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %645, <16 x bfloat> %60, i32 1)
  %647 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %644, i32 0)
  %648 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %647, <16 x bfloat> %60, i32 1)
  %649 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %646, <32 x bfloat> %648, i32 60)
  %650 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %649)
  %651 = getelementptr inbounds bfloat, ptr %1, i20 208
  store <16 x bfloat> %650, ptr %651, align 32, !tbaa !12
  %652 = getelementptr inbounds bfloat, ptr %0, i20 224
  %653 = load <16 x bfloat>, ptr %652, align 32, !tbaa !12
  %654 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %653, i32 8)
  %655 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %654, <16 x i32> %15, i32 2)
  %656 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %655, i32 0)
  %657 = bitcast <8 x i32> %656 to <16 x i16>
  %658 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %657, i32 0, i32 0)
  %659 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %658, i32 6, i32 1)
  %660 = add <16 x i32> %25, %659
  %661 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %660, i32 0)
  %662 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %661), !noalias !15
  %663 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %662, i32 0)
  %664 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %661), !noalias !15
  %665 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %663, <8 x i32> %664, i32 1)
  %666 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %660, i32 1)
  %667 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %666), !noalias !15
  %668 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %667, i32 0)
  %669 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %666), !noalias !15
  %670 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %668, <8 x i32> %669, i32 1)
  %671 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %665, <16 x i32> %670, i32 24)
  %672 = bitcast <16 x i32> %671 to <32 x bfloat>
  %673 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %672, i32 0)
  %674 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %658, i32 -2, i32 1)
  %675 = and <16 x i32> %674, %4
  %676 = add <16 x i32> %44, %675
  %677 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %676, i32 0)
  %678 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %677), !noalias !20
  %679 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %678, i32 0)
  %680 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %677), !noalias !20
  %681 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %679, <8 x i32> %680, i32 1)
  %682 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %676, i32 1)
  %683 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %682), !noalias !20
  %684 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %683, i32 0)
  %685 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %682), !noalias !20
  %686 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %684, <8 x i32> %685, i32 1)
  %687 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %681, <16 x i32> %686, i32 24)
  %688 = bitcast <16 x i32> %687 to <32 x bfloat>
  %689 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %688, i32 0)
  %690 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %673, i32 0)
  %691 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %690, <16 x bfloat> %60, i32 1)
  %692 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %689, i32 0)
  %693 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %692, <16 x bfloat> %60, i32 1)
  %694 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %691, <32 x bfloat> %693, i32 60)
  %695 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %694)
  %696 = getelementptr inbounds bfloat, ptr %1, i20 224
  store <16 x bfloat> %695, ptr %696, align 32, !tbaa !12
  %697 = getelementptr inbounds bfloat, ptr %0, i20 240
  %698 = load <16 x bfloat>, ptr %697, align 32, !tbaa !12
  %699 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %698, i32 8)
  %700 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %699, <16 x i32> %15, i32 2)
  %701 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %700, i32 0)
  %702 = bitcast <8 x i32> %701 to <16 x i16>
  %703 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %702, i32 0, i32 0)
  %704 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %703, i32 6, i32 1)
  %705 = add <16 x i32> %25, %704
  %706 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %705, i32 0)
  %707 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %706), !noalias !15
  %708 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %707, i32 0)
  %709 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %706), !noalias !15
  %710 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %708, <8 x i32> %709, i32 1)
  %711 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %705, i32 1)
  %712 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %711), !noalias !15
  %713 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %712, i32 0)
  %714 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %711), !noalias !15
  %715 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %713, <8 x i32> %714, i32 1)
  %716 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %710, <16 x i32> %715, i32 24)
  %717 = bitcast <16 x i32> %716 to <32 x bfloat>
  %718 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %717, i32 0)
  %719 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %703, i32 -2, i32 1)
  %720 = and <16 x i32> %719, %4
  %721 = add <16 x i32> %44, %720
  %722 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %721, i32 0)
  %723 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %722), !noalias !20
  %724 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %723, i32 0)
  %725 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %722), !noalias !20
  %726 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %724, <8 x i32> %725, i32 1)
  %727 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %721, i32 1)
  %728 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %727), !noalias !20
  %729 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %728, i32 0)
  %730 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %727), !noalias !20
  %731 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %729, <8 x i32> %730, i32 1)
  %732 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %726, <16 x i32> %731, i32 24)
  %733 = bitcast <16 x i32> %732 to <32 x bfloat>
  %734 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %733, i32 0)
  %735 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %718, i32 0)
  %736 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %735, <16 x bfloat> %60, i32 1)
  %737 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %734, i32 0)
  %738 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %737, <16 x bfloat> %60, i32 1)
  %739 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %736, <32 x bfloat> %738, i32 60)
  %740 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %739)
  %741 = getelementptr inbounds bfloat, ptr %1, i20 240
  store <16 x bfloat> %740, ptr %741, align 32, !tbaa !12
  %742 = getelementptr inbounds bfloat, ptr %0, i20 256
  %743 = load <16 x bfloat>, ptr %742, align 32, !tbaa !12
  %744 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %743, i32 8)
  %745 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %744, <16 x i32> %15, i32 2)
  %746 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %745, i32 0)
  %747 = bitcast <8 x i32> %746 to <16 x i16>
  %748 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %747, i32 0, i32 0)
  %749 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %748, i32 6, i32 1)
  %750 = add <16 x i32> %25, %749
  %751 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %750, i32 0)
  %752 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %751), !noalias !15
  %753 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %752, i32 0)
  %754 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %751), !noalias !15
  %755 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %753, <8 x i32> %754, i32 1)
  %756 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %750, i32 1)
  %757 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %756), !noalias !15
  %758 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %757, i32 0)
  %759 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %756), !noalias !15
  %760 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %758, <8 x i32> %759, i32 1)
  %761 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %755, <16 x i32> %760, i32 24)
  %762 = bitcast <16 x i32> %761 to <32 x bfloat>
  %763 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %762, i32 0)
  %764 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %748, i32 -2, i32 1)
  %765 = and <16 x i32> %764, %4
  %766 = add <16 x i32> %44, %765
  %767 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %766, i32 0)
  %768 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %767), !noalias !20
  %769 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %768, i32 0)
  %770 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %767), !noalias !20
  %771 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %769, <8 x i32> %770, i32 1)
  %772 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %766, i32 1)
  %773 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %772), !noalias !20
  %774 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %773, i32 0)
  %775 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %772), !noalias !20
  %776 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %774, <8 x i32> %775, i32 1)
  %777 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %771, <16 x i32> %776, i32 24)
  %778 = bitcast <16 x i32> %777 to <32 x bfloat>
  %779 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %778, i32 0)
  %780 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %763, i32 0)
  %781 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %780, <16 x bfloat> %60, i32 1)
  %782 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %779, i32 0)
  %783 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %782, <16 x bfloat> %60, i32 1)
  %784 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %781, <32 x bfloat> %783, i32 60)
  %785 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %784)
  %786 = getelementptr inbounds bfloat, ptr %1, i20 256
  store <16 x bfloat> %785, ptr %786, align 32, !tbaa !12
  %787 = getelementptr inbounds bfloat, ptr %0, i20 272
  %788 = load <16 x bfloat>, ptr %787, align 32, !tbaa !12
  %789 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %788, i32 8)
  %790 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %789, <16 x i32> %15, i32 2)
  %791 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %790, i32 0)
  %792 = bitcast <8 x i32> %791 to <16 x i16>
  %793 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %792, i32 0, i32 0)
  %794 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %793, i32 6, i32 1)
  %795 = add <16 x i32> %25, %794
  %796 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %795, i32 0)
  %797 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %796), !noalias !15
  %798 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %797, i32 0)
  %799 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %796), !noalias !15
  %800 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %798, <8 x i32> %799, i32 1)
  %801 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %795, i32 1)
  %802 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %801), !noalias !15
  %803 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %802, i32 0)
  %804 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %801), !noalias !15
  %805 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %803, <8 x i32> %804, i32 1)
  %806 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %800, <16 x i32> %805, i32 24)
  %807 = bitcast <16 x i32> %806 to <32 x bfloat>
  %808 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %807, i32 0)
  %809 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %793, i32 -2, i32 1)
  %810 = and <16 x i32> %809, %4
  %811 = add <16 x i32> %44, %810
  %812 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %811, i32 0)
  %813 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %812), !noalias !20
  %814 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %813, i32 0)
  %815 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %812), !noalias !20
  %816 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %814, <8 x i32> %815, i32 1)
  %817 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %811, i32 1)
  %818 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %817), !noalias !20
  %819 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %818, i32 0)
  %820 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %817), !noalias !20
  %821 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %819, <8 x i32> %820, i32 1)
  %822 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %816, <16 x i32> %821, i32 24)
  %823 = bitcast <16 x i32> %822 to <32 x bfloat>
  %824 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %823, i32 0)
  %825 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %808, i32 0)
  %826 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %825, <16 x bfloat> %60, i32 1)
  %827 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %824, i32 0)
  %828 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %827, <16 x bfloat> %60, i32 1)
  %829 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %826, <32 x bfloat> %828, i32 60)
  %830 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %829)
  %831 = getelementptr inbounds bfloat, ptr %1, i20 272
  store <16 x bfloat> %830, ptr %831, align 32, !tbaa !12
  %832 = getelementptr inbounds bfloat, ptr %0, i20 288
  %833 = load <16 x bfloat>, ptr %832, align 32, !tbaa !12
  %834 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %833, i32 8)
  %835 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %834, <16 x i32> %15, i32 2)
  %836 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %835, i32 0)
  %837 = bitcast <8 x i32> %836 to <16 x i16>
  %838 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %837, i32 0, i32 0)
  %839 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %838, i32 6, i32 1)
  %840 = add <16 x i32> %25, %839
  %841 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %840, i32 0)
  %842 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %841), !noalias !15
  %843 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %842, i32 0)
  %844 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %841), !noalias !15
  %845 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %843, <8 x i32> %844, i32 1)
  %846 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %840, i32 1)
  %847 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %846), !noalias !15
  %848 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %847, i32 0)
  %849 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %846), !noalias !15
  %850 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %848, <8 x i32> %849, i32 1)
  %851 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %845, <16 x i32> %850, i32 24)
  %852 = bitcast <16 x i32> %851 to <32 x bfloat>
  %853 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %852, i32 0)
  %854 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %838, i32 -2, i32 1)
  %855 = and <16 x i32> %854, %4
  %856 = add <16 x i32> %44, %855
  %857 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %856, i32 0)
  %858 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %857), !noalias !20
  %859 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %858, i32 0)
  %860 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %857), !noalias !20
  %861 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %859, <8 x i32> %860, i32 1)
  %862 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %856, i32 1)
  %863 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %862), !noalias !20
  %864 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %863, i32 0)
  %865 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %862), !noalias !20
  %866 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %864, <8 x i32> %865, i32 1)
  %867 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %861, <16 x i32> %866, i32 24)
  %868 = bitcast <16 x i32> %867 to <32 x bfloat>
  %869 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %868, i32 0)
  %870 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %853, i32 0)
  %871 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %870, <16 x bfloat> %60, i32 1)
  %872 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %869, i32 0)
  %873 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %872, <16 x bfloat> %60, i32 1)
  %874 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %871, <32 x bfloat> %873, i32 60)
  %875 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %874)
  %876 = getelementptr inbounds bfloat, ptr %1, i20 288
  store <16 x bfloat> %875, ptr %876, align 32, !tbaa !12
  %877 = getelementptr inbounds bfloat, ptr %0, i20 304
  %878 = load <16 x bfloat>, ptr %877, align 32, !tbaa !12
  %879 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %878, i32 8)
  %880 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %879, <16 x i32> %15, i32 2)
  %881 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %880, i32 0)
  %882 = bitcast <8 x i32> %881 to <16 x i16>
  %883 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %882, i32 0, i32 0)
  %884 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %883, i32 6, i32 1)
  %885 = add <16 x i32> %25, %884
  %886 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %885, i32 0)
  %887 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %886), !noalias !15
  %888 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %887, i32 0)
  %889 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %886), !noalias !15
  %890 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %888, <8 x i32> %889, i32 1)
  %891 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %885, i32 1)
  %892 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %891), !noalias !15
  %893 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %892, i32 0)
  %894 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %891), !noalias !15
  %895 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %893, <8 x i32> %894, i32 1)
  %896 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %890, <16 x i32> %895, i32 24)
  %897 = bitcast <16 x i32> %896 to <32 x bfloat>
  %898 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %897, i32 0)
  %899 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %883, i32 -2, i32 1)
  %900 = and <16 x i32> %899, %4
  %901 = add <16 x i32> %44, %900
  %902 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %901, i32 0)
  %903 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %902), !noalias !20
  %904 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %903, i32 0)
  %905 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %902), !noalias !20
  %906 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %904, <8 x i32> %905, i32 1)
  %907 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %901, i32 1)
  %908 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %907), !noalias !20
  %909 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %908, i32 0)
  %910 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %907), !noalias !20
  %911 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %909, <8 x i32> %910, i32 1)
  %912 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %906, <16 x i32> %911, i32 24)
  %913 = bitcast <16 x i32> %912 to <32 x bfloat>
  %914 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %913, i32 0)
  %915 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %898, i32 0)
  %916 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %915, <16 x bfloat> %60, i32 1)
  %917 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %914, i32 0)
  %918 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %917, <16 x bfloat> %60, i32 1)
  %919 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %916, <32 x bfloat> %918, i32 60)
  %920 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %919)
  %921 = getelementptr inbounds bfloat, ptr %1, i20 304
  store <16 x bfloat> %920, ptr %921, align 32, !tbaa !12
  %922 = getelementptr inbounds bfloat, ptr %0, i20 320
  %923 = load <16 x bfloat>, ptr %922, align 32, !tbaa !12
  %924 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %923, i32 8)
  %925 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %924, <16 x i32> %15, i32 2)
  %926 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %925, i32 0)
  %927 = bitcast <8 x i32> %926 to <16 x i16>
  %928 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %927, i32 0, i32 0)
  %929 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %928, i32 6, i32 1)
  %930 = add <16 x i32> %25, %929
  %931 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %930, i32 0)
  %932 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %931), !noalias !15
  %933 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %932, i32 0)
  %934 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %931), !noalias !15
  %935 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %933, <8 x i32> %934, i32 1)
  %936 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %930, i32 1)
  %937 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %936), !noalias !15
  %938 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %937, i32 0)
  %939 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %936), !noalias !15
  %940 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %938, <8 x i32> %939, i32 1)
  %941 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %935, <16 x i32> %940, i32 24)
  %942 = bitcast <16 x i32> %941 to <32 x bfloat>
  %943 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %942, i32 0)
  %944 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %928, i32 -2, i32 1)
  %945 = and <16 x i32> %944, %4
  %946 = add <16 x i32> %44, %945
  %947 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %946, i32 0)
  %948 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %947), !noalias !20
  %949 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %948, i32 0)
  %950 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %947), !noalias !20
  %951 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %949, <8 x i32> %950, i32 1)
  %952 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %946, i32 1)
  %953 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %952), !noalias !20
  %954 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %953, i32 0)
  %955 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %952), !noalias !20
  %956 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %954, <8 x i32> %955, i32 1)
  %957 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %951, <16 x i32> %956, i32 24)
  %958 = bitcast <16 x i32> %957 to <32 x bfloat>
  %959 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %958, i32 0)
  %960 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %943, i32 0)
  %961 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %960, <16 x bfloat> %60, i32 1)
  %962 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %959, i32 0)
  %963 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %962, <16 x bfloat> %60, i32 1)
  %964 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %961, <32 x bfloat> %963, i32 60)
  %965 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %964)
  %966 = getelementptr inbounds bfloat, ptr %1, i20 320
  store <16 x bfloat> %965, ptr %966, align 32, !tbaa !12
  %967 = getelementptr inbounds bfloat, ptr %0, i20 336
  %968 = load <16 x bfloat>, ptr %967, align 32, !tbaa !12
  %969 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %968, i32 8)
  %970 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %969, <16 x i32> %15, i32 2)
  %971 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %970, i32 0)
  %972 = bitcast <8 x i32> %971 to <16 x i16>
  %973 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %972, i32 0, i32 0)
  %974 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %973, i32 6, i32 1)
  %975 = add <16 x i32> %25, %974
  %976 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %975, i32 0)
  %977 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %976), !noalias !15
  %978 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %977, i32 0)
  %979 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %976), !noalias !15
  %980 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %978, <8 x i32> %979, i32 1)
  %981 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %975, i32 1)
  %982 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %981), !noalias !15
  %983 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %982, i32 0)
  %984 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %981), !noalias !15
  %985 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %983, <8 x i32> %984, i32 1)
  %986 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %980, <16 x i32> %985, i32 24)
  %987 = bitcast <16 x i32> %986 to <32 x bfloat>
  %988 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %987, i32 0)
  %989 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %973, i32 -2, i32 1)
  %990 = and <16 x i32> %989, %4
  %991 = add <16 x i32> %44, %990
  %992 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %991, i32 0)
  %993 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %992), !noalias !20
  %994 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %993, i32 0)
  %995 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %992), !noalias !20
  %996 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %994, <8 x i32> %995, i32 1)
  %997 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %991, i32 1)
  %998 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %997), !noalias !20
  %999 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %998, i32 0)
  %1000 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %997), !noalias !20
  %1001 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %999, <8 x i32> %1000, i32 1)
  %1002 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %996, <16 x i32> %1001, i32 24)
  %1003 = bitcast <16 x i32> %1002 to <32 x bfloat>
  %1004 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1003, i32 0)
  %1005 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %988, i32 0)
  %1006 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1005, <16 x bfloat> %60, i32 1)
  %1007 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1004, i32 0)
  %1008 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1007, <16 x bfloat> %60, i32 1)
  %1009 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1006, <32 x bfloat> %1008, i32 60)
  %1010 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %1009)
  %1011 = getelementptr inbounds bfloat, ptr %1, i20 336
  store <16 x bfloat> %1010, ptr %1011, align 32, !tbaa !12
  %1012 = getelementptr inbounds bfloat, ptr %0, i20 352
  %1013 = load <16 x bfloat>, ptr %1012, align 32, !tbaa !12
  %1014 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %1013, i32 8)
  %1015 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1014, <16 x i32> %15, i32 2)
  %1016 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1015, i32 0)
  %1017 = bitcast <8 x i32> %1016 to <16 x i16>
  %1018 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %1017, i32 0, i32 0)
  %1019 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1018, i32 6, i32 1)
  %1020 = add <16 x i32> %25, %1019
  %1021 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1020, i32 0)
  %1022 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1021), !noalias !15
  %1023 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1022, i32 0)
  %1024 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1021), !noalias !15
  %1025 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1023, <8 x i32> %1024, i32 1)
  %1026 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1020, i32 1)
  %1027 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1026), !noalias !15
  %1028 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1027, i32 0)
  %1029 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1026), !noalias !15
  %1030 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1028, <8 x i32> %1029, i32 1)
  %1031 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1025, <16 x i32> %1030, i32 24)
  %1032 = bitcast <16 x i32> %1031 to <32 x bfloat>
  %1033 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1032, i32 0)
  %1034 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1018, i32 -2, i32 1)
  %1035 = and <16 x i32> %1034, %4
  %1036 = add <16 x i32> %44, %1035
  %1037 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1036, i32 0)
  %1038 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1037), !noalias !20
  %1039 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1038, i32 0)
  %1040 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1037), !noalias !20
  %1041 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1039, <8 x i32> %1040, i32 1)
  %1042 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1036, i32 1)
  %1043 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1042), !noalias !20
  %1044 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1043, i32 0)
  %1045 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1042), !noalias !20
  %1046 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1044, <8 x i32> %1045, i32 1)
  %1047 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1041, <16 x i32> %1046, i32 24)
  %1048 = bitcast <16 x i32> %1047 to <32 x bfloat>
  %1049 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1048, i32 0)
  %1050 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1033, i32 0)
  %1051 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1050, <16 x bfloat> %60, i32 1)
  %1052 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1049, i32 0)
  %1053 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1052, <16 x bfloat> %60, i32 1)
  %1054 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1051, <32 x bfloat> %1053, i32 60)
  %1055 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %1054)
  %1056 = getelementptr inbounds bfloat, ptr %1, i20 352
  store <16 x bfloat> %1055, ptr %1056, align 32, !tbaa !12
  %1057 = getelementptr inbounds bfloat, ptr %0, i20 368
  %1058 = load <16 x bfloat>, ptr %1057, align 32, !tbaa !12
  %1059 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %1058, i32 8)
  %1060 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1059, <16 x i32> %15, i32 2)
  %1061 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1060, i32 0)
  %1062 = bitcast <8 x i32> %1061 to <16 x i16>
  %1063 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %1062, i32 0, i32 0)
  %1064 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1063, i32 6, i32 1)
  %1065 = add <16 x i32> %25, %1064
  %1066 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1065, i32 0)
  %1067 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1066), !noalias !15
  %1068 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1067, i32 0)
  %1069 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1066), !noalias !15
  %1070 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1068, <8 x i32> %1069, i32 1)
  %1071 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1065, i32 1)
  %1072 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1071), !noalias !15
  %1073 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1072, i32 0)
  %1074 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1071), !noalias !15
  %1075 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1073, <8 x i32> %1074, i32 1)
  %1076 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1070, <16 x i32> %1075, i32 24)
  %1077 = bitcast <16 x i32> %1076 to <32 x bfloat>
  %1078 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1077, i32 0)
  %1079 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1063, i32 -2, i32 1)
  %1080 = and <16 x i32> %1079, %4
  %1081 = add <16 x i32> %44, %1080
  %1082 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1081, i32 0)
  %1083 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1082), !noalias !20
  %1084 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1083, i32 0)
  %1085 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1082), !noalias !20
  %1086 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1084, <8 x i32> %1085, i32 1)
  %1087 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1081, i32 1)
  %1088 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1087), !noalias !20
  %1089 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1088, i32 0)
  %1090 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1087), !noalias !20
  %1091 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1089, <8 x i32> %1090, i32 1)
  %1092 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1086, <16 x i32> %1091, i32 24)
  %1093 = bitcast <16 x i32> %1092 to <32 x bfloat>
  %1094 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1093, i32 0)
  %1095 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1078, i32 0)
  %1096 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1095, <16 x bfloat> %60, i32 1)
  %1097 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1094, i32 0)
  %1098 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1097, <16 x bfloat> %60, i32 1)
  %1099 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1096, <32 x bfloat> %1098, i32 60)
  %1100 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %1099)
  %1101 = getelementptr inbounds bfloat, ptr %1, i20 368
  store <16 x bfloat> %1100, ptr %1101, align 32, !tbaa !12
  %1102 = getelementptr inbounds bfloat, ptr %0, i20 384
  %1103 = load <16 x bfloat>, ptr %1102, align 32, !tbaa !12
  %1104 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %1103, i32 8)
  %1105 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1104, <16 x i32> %15, i32 2)
  %1106 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1105, i32 0)
  %1107 = bitcast <8 x i32> %1106 to <16 x i16>
  %1108 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %1107, i32 0, i32 0)
  %1109 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1108, i32 6, i32 1)
  %1110 = add <16 x i32> %25, %1109
  %1111 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1110, i32 0)
  %1112 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1111), !noalias !15
  %1113 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1112, i32 0)
  %1114 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1111), !noalias !15
  %1115 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1113, <8 x i32> %1114, i32 1)
  %1116 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1110, i32 1)
  %1117 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1116), !noalias !15
  %1118 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1117, i32 0)
  %1119 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1116), !noalias !15
  %1120 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1118, <8 x i32> %1119, i32 1)
  %1121 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1115, <16 x i32> %1120, i32 24)
  %1122 = bitcast <16 x i32> %1121 to <32 x bfloat>
  %1123 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1122, i32 0)
  %1124 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1108, i32 -2, i32 1)
  %1125 = and <16 x i32> %1124, %4
  %1126 = add <16 x i32> %44, %1125
  %1127 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1126, i32 0)
  %1128 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1127), !noalias !20
  %1129 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1128, i32 0)
  %1130 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1127), !noalias !20
  %1131 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1129, <8 x i32> %1130, i32 1)
  %1132 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1126, i32 1)
  %1133 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1132), !noalias !20
  %1134 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1133, i32 0)
  %1135 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1132), !noalias !20
  %1136 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1134, <8 x i32> %1135, i32 1)
  %1137 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1131, <16 x i32> %1136, i32 24)
  %1138 = bitcast <16 x i32> %1137 to <32 x bfloat>
  %1139 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1138, i32 0)
  %1140 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1123, i32 0)
  %1141 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1140, <16 x bfloat> %60, i32 1)
  %1142 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1139, i32 0)
  %1143 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1142, <16 x bfloat> %60, i32 1)
  %1144 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1141, <32 x bfloat> %1143, i32 60)
  %1145 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %1144)
  %1146 = getelementptr inbounds bfloat, ptr %1, i20 384
  store <16 x bfloat> %1145, ptr %1146, align 32, !tbaa !12
  %1147 = getelementptr inbounds bfloat, ptr %0, i20 400
  %1148 = load <16 x bfloat>, ptr %1147, align 32, !tbaa !12
  %1149 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %1148, i32 8)
  %1150 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1149, <16 x i32> %15, i32 2)
  %1151 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1150, i32 0)
  %1152 = bitcast <8 x i32> %1151 to <16 x i16>
  %1153 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %1152, i32 0, i32 0)
  %1154 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1153, i32 6, i32 1)
  %1155 = add <16 x i32> %25, %1154
  %1156 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1155, i32 0)
  %1157 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1156), !noalias !15
  %1158 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1157, i32 0)
  %1159 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1156), !noalias !15
  %1160 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1158, <8 x i32> %1159, i32 1)
  %1161 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1155, i32 1)
  %1162 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1161), !noalias !15
  %1163 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1162, i32 0)
  %1164 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1161), !noalias !15
  %1165 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1163, <8 x i32> %1164, i32 1)
  %1166 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1160, <16 x i32> %1165, i32 24)
  %1167 = bitcast <16 x i32> %1166 to <32 x bfloat>
  %1168 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1167, i32 0)
  %1169 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1153, i32 -2, i32 1)
  %1170 = and <16 x i32> %1169, %4
  %1171 = add <16 x i32> %44, %1170
  %1172 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1171, i32 0)
  %1173 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1172), !noalias !20
  %1174 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1173, i32 0)
  %1175 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1172), !noalias !20
  %1176 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1174, <8 x i32> %1175, i32 1)
  %1177 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1171, i32 1)
  %1178 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1177), !noalias !20
  %1179 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1178, i32 0)
  %1180 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1177), !noalias !20
  %1181 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1179, <8 x i32> %1180, i32 1)
  %1182 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1176, <16 x i32> %1181, i32 24)
  %1183 = bitcast <16 x i32> %1182 to <32 x bfloat>
  %1184 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1183, i32 0)
  %1185 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1168, i32 0)
  %1186 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1185, <16 x bfloat> %60, i32 1)
  %1187 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1184, i32 0)
  %1188 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1187, <16 x bfloat> %60, i32 1)
  %1189 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1186, <32 x bfloat> %1188, i32 60)
  %1190 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %1189)
  %1191 = getelementptr inbounds bfloat, ptr %1, i20 400
  store <16 x bfloat> %1190, ptr %1191, align 32, !tbaa !12
  %1192 = getelementptr inbounds bfloat, ptr %0, i20 416
  %1193 = load <16 x bfloat>, ptr %1192, align 32, !tbaa !12
  %1194 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %1193, i32 8)
  %1195 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1194, <16 x i32> %15, i32 2)
  %1196 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1195, i32 0)
  %1197 = bitcast <8 x i32> %1196 to <16 x i16>
  %1198 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %1197, i32 0, i32 0)
  %1199 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1198, i32 6, i32 1)
  %1200 = add <16 x i32> %25, %1199
  %1201 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1200, i32 0)
  %1202 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1201), !noalias !15
  %1203 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1202, i32 0)
  %1204 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1201), !noalias !15
  %1205 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1203, <8 x i32> %1204, i32 1)
  %1206 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1200, i32 1)
  %1207 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1206), !noalias !15
  %1208 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1207, i32 0)
  %1209 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1206), !noalias !15
  %1210 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1208, <8 x i32> %1209, i32 1)
  %1211 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1205, <16 x i32> %1210, i32 24)
  %1212 = bitcast <16 x i32> %1211 to <32 x bfloat>
  %1213 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1212, i32 0)
  %1214 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1198, i32 -2, i32 1)
  %1215 = and <16 x i32> %1214, %4
  %1216 = add <16 x i32> %44, %1215
  %1217 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1216, i32 0)
  %1218 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1217), !noalias !20
  %1219 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1218, i32 0)
  %1220 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1217), !noalias !20
  %1221 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1219, <8 x i32> %1220, i32 1)
  %1222 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1216, i32 1)
  %1223 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1222), !noalias !20
  %1224 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1223, i32 0)
  %1225 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1222), !noalias !20
  %1226 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1224, <8 x i32> %1225, i32 1)
  %1227 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1221, <16 x i32> %1226, i32 24)
  %1228 = bitcast <16 x i32> %1227 to <32 x bfloat>
  %1229 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1228, i32 0)
  %1230 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1213, i32 0)
  %1231 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1230, <16 x bfloat> %60, i32 1)
  %1232 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1229, i32 0)
  %1233 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1232, <16 x bfloat> %60, i32 1)
  %1234 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1231, <32 x bfloat> %1233, i32 60)
  %1235 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %1234)
  %1236 = getelementptr inbounds bfloat, ptr %1, i20 416
  store <16 x bfloat> %1235, ptr %1236, align 32, !tbaa !12
  %1237 = getelementptr inbounds bfloat, ptr %0, i20 432
  %1238 = load <16 x bfloat>, ptr %1237, align 32, !tbaa !12
  %1239 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %1238, i32 8)
  %1240 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1239, <16 x i32> %15, i32 2)
  %1241 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1240, i32 0)
  %1242 = bitcast <8 x i32> %1241 to <16 x i16>
  %1243 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %1242, i32 0, i32 0)
  %1244 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1243, i32 6, i32 1)
  %1245 = add <16 x i32> %25, %1244
  %1246 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1245, i32 0)
  %1247 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1246), !noalias !15
  %1248 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1247, i32 0)
  %1249 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1246), !noalias !15
  %1250 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1248, <8 x i32> %1249, i32 1)
  %1251 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1245, i32 1)
  %1252 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1251), !noalias !15
  %1253 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1252, i32 0)
  %1254 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1251), !noalias !15
  %1255 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1253, <8 x i32> %1254, i32 1)
  %1256 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1250, <16 x i32> %1255, i32 24)
  %1257 = bitcast <16 x i32> %1256 to <32 x bfloat>
  %1258 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1257, i32 0)
  %1259 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1243, i32 -2, i32 1)
  %1260 = and <16 x i32> %1259, %4
  %1261 = add <16 x i32> %44, %1260
  %1262 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1261, i32 0)
  %1263 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1262), !noalias !20
  %1264 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1263, i32 0)
  %1265 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1262), !noalias !20
  %1266 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1264, <8 x i32> %1265, i32 1)
  %1267 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1261, i32 1)
  %1268 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1267), !noalias !20
  %1269 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1268, i32 0)
  %1270 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1267), !noalias !20
  %1271 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1269, <8 x i32> %1270, i32 1)
  %1272 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1266, <16 x i32> %1271, i32 24)
  %1273 = bitcast <16 x i32> %1272 to <32 x bfloat>
  %1274 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1273, i32 0)
  %1275 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1258, i32 0)
  %1276 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1275, <16 x bfloat> %60, i32 1)
  %1277 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1274, i32 0)
  %1278 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1277, <16 x bfloat> %60, i32 1)
  %1279 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1276, <32 x bfloat> %1278, i32 60)
  %1280 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %1279)
  %1281 = getelementptr inbounds bfloat, ptr %1, i20 432
  store <16 x bfloat> %1280, ptr %1281, align 32, !tbaa !12
  %1282 = getelementptr inbounds bfloat, ptr %0, i20 448
  %1283 = load <16 x bfloat>, ptr %1282, align 32, !tbaa !12
  %1284 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %1283, i32 8)
  %1285 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1284, <16 x i32> %15, i32 2)
  %1286 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1285, i32 0)
  %1287 = bitcast <8 x i32> %1286 to <16 x i16>
  %1288 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %1287, i32 0, i32 0)
  %1289 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1288, i32 6, i32 1)
  %1290 = add <16 x i32> %25, %1289
  %1291 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1290, i32 0)
  %1292 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1291), !noalias !15
  %1293 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1292, i32 0)
  %1294 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1291), !noalias !15
  %1295 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1293, <8 x i32> %1294, i32 1)
  %1296 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1290, i32 1)
  %1297 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1296), !noalias !15
  %1298 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1297, i32 0)
  %1299 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1296), !noalias !15
  %1300 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1298, <8 x i32> %1299, i32 1)
  %1301 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1295, <16 x i32> %1300, i32 24)
  %1302 = bitcast <16 x i32> %1301 to <32 x bfloat>
  %1303 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1302, i32 0)
  %1304 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1288, i32 -2, i32 1)
  %1305 = and <16 x i32> %1304, %4
  %1306 = add <16 x i32> %44, %1305
  %1307 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1306, i32 0)
  %1308 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1307), !noalias !20
  %1309 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1308, i32 0)
  %1310 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1307), !noalias !20
  %1311 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1309, <8 x i32> %1310, i32 1)
  %1312 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1306, i32 1)
  %1313 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1312), !noalias !20
  %1314 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1313, i32 0)
  %1315 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1312), !noalias !20
  %1316 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1314, <8 x i32> %1315, i32 1)
  %1317 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1311, <16 x i32> %1316, i32 24)
  %1318 = bitcast <16 x i32> %1317 to <32 x bfloat>
  %1319 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1318, i32 0)
  %1320 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1303, i32 0)
  %1321 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1320, <16 x bfloat> %60, i32 1)
  %1322 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1319, i32 0)
  %1323 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1322, <16 x bfloat> %60, i32 1)
  %1324 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1321, <32 x bfloat> %1323, i32 60)
  %1325 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %1324)
  %1326 = getelementptr inbounds bfloat, ptr %1, i20 448
  store <16 x bfloat> %1325, ptr %1326, align 32, !tbaa !12
  %1327 = getelementptr inbounds bfloat, ptr %0, i20 464
  %1328 = load <16 x bfloat>, ptr %1327, align 32, !tbaa !12
  %1329 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %1328, i32 8)
  %1330 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1329, <16 x i32> %15, i32 2)
  %1331 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1330, i32 0)
  %1332 = bitcast <8 x i32> %1331 to <16 x i16>
  %1333 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %1332, i32 0, i32 0)
  %1334 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1333, i32 6, i32 1)
  %1335 = add <16 x i32> %25, %1334
  %1336 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1335, i32 0)
  %1337 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1336), !noalias !15
  %1338 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1337, i32 0)
  %1339 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1336), !noalias !15
  %1340 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1338, <8 x i32> %1339, i32 1)
  %1341 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1335, i32 1)
  %1342 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1341), !noalias !15
  %1343 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1342, i32 0)
  %1344 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1341), !noalias !15
  %1345 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1343, <8 x i32> %1344, i32 1)
  %1346 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1340, <16 x i32> %1345, i32 24)
  %1347 = bitcast <16 x i32> %1346 to <32 x bfloat>
  %1348 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1347, i32 0)
  %1349 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1333, i32 -2, i32 1)
  %1350 = and <16 x i32> %1349, %4
  %1351 = add <16 x i32> %44, %1350
  %1352 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1351, i32 0)
  %1353 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1352), !noalias !20
  %1354 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1353, i32 0)
  %1355 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1352), !noalias !20
  %1356 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1354, <8 x i32> %1355, i32 1)
  %1357 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1351, i32 1)
  %1358 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1357), !noalias !20
  %1359 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1358, i32 0)
  %1360 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1357), !noalias !20
  %1361 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1359, <8 x i32> %1360, i32 1)
  %1362 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1356, <16 x i32> %1361, i32 24)
  %1363 = bitcast <16 x i32> %1362 to <32 x bfloat>
  %1364 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1363, i32 0)
  %1365 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1348, i32 0)
  %1366 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1365, <16 x bfloat> %60, i32 1)
  %1367 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1364, i32 0)
  %1368 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1367, <16 x bfloat> %60, i32 1)
  %1369 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1366, <32 x bfloat> %1368, i32 60)
  %1370 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %1369)
  %1371 = getelementptr inbounds bfloat, ptr %1, i20 464
  store <16 x bfloat> %1370, ptr %1371, align 32, !tbaa !12
  %1372 = getelementptr inbounds bfloat, ptr %0, i20 480
  %1373 = load <16 x bfloat>, ptr %1372, align 32, !tbaa !12
  %1374 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %1373, i32 8)
  %1375 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1374, <16 x i32> %15, i32 2)
  %1376 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1375, i32 0)
  %1377 = bitcast <8 x i32> %1376 to <16 x i16>
  %1378 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %1377, i32 0, i32 0)
  %1379 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1378, i32 6, i32 1)
  %1380 = add <16 x i32> %25, %1379
  %1381 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1380, i32 0)
  %1382 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1381), !noalias !15
  %1383 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1382, i32 0)
  %1384 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1381), !noalias !15
  %1385 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1383, <8 x i32> %1384, i32 1)
  %1386 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1380, i32 1)
  %1387 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1386), !noalias !15
  %1388 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1387, i32 0)
  %1389 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1386), !noalias !15
  %1390 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1388, <8 x i32> %1389, i32 1)
  %1391 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1385, <16 x i32> %1390, i32 24)
  %1392 = bitcast <16 x i32> %1391 to <32 x bfloat>
  %1393 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1392, i32 0)
  %1394 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1378, i32 -2, i32 1)
  %1395 = and <16 x i32> %1394, %4
  %1396 = add <16 x i32> %44, %1395
  %1397 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1396, i32 0)
  %1398 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1397), !noalias !20
  %1399 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1398, i32 0)
  %1400 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1397), !noalias !20
  %1401 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1399, <8 x i32> %1400, i32 1)
  %1402 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1396, i32 1)
  %1403 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1402), !noalias !20
  %1404 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1403, i32 0)
  %1405 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1402), !noalias !20
  %1406 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1404, <8 x i32> %1405, i32 1)
  %1407 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1401, <16 x i32> %1406, i32 24)
  %1408 = bitcast <16 x i32> %1407 to <32 x bfloat>
  %1409 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1408, i32 0)
  %1410 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1393, i32 0)
  %1411 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1410, <16 x bfloat> %60, i32 1)
  %1412 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1409, i32 0)
  %1413 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1412, <16 x bfloat> %60, i32 1)
  %1414 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1411, <32 x bfloat> %1413, i32 60)
  %1415 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %1414)
  %1416 = getelementptr inbounds bfloat, ptr %1, i20 480
  store <16 x bfloat> %1415, ptr %1416, align 32, !tbaa !12
  %1417 = getelementptr inbounds bfloat, ptr %0, i20 496
  %1418 = load <16 x bfloat>, ptr %1417, align 32, !tbaa !12
  %1419 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %1418, i32 8)
  %1420 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1419, <16 x i32> %15, i32 2)
  %1421 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1420, i32 0)
  %1422 = bitcast <8 x i32> %1421 to <16 x i16>
  %1423 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %1422, i32 0, i32 0)
  %1424 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1423, i32 6, i32 1)
  %1425 = add <16 x i32> %25, %1424
  %1426 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1425, i32 0)
  %1427 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1426), !noalias !15
  %1428 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1427, i32 0)
  %1429 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1426), !noalias !15
  %1430 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1428, <8 x i32> %1429, i32 1)
  %1431 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1425, i32 1)
  %1432 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1431), !noalias !15
  %1433 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1432, i32 0)
  %1434 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1431), !noalias !15
  %1435 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1433, <8 x i32> %1434, i32 1)
  %1436 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1430, <16 x i32> %1435, i32 24)
  %1437 = bitcast <16 x i32> %1436 to <32 x bfloat>
  %1438 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1437, i32 0)
  %1439 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1423, i32 -2, i32 1)
  %1440 = and <16 x i32> %1439, %4
  %1441 = add <16 x i32> %44, %1440
  %1442 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1441, i32 0)
  %1443 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1442), !noalias !20
  %1444 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1443, i32 0)
  %1445 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1442), !noalias !20
  %1446 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1444, <8 x i32> %1445, i32 1)
  %1447 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1441, i32 1)
  %1448 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1447), !noalias !20
  %1449 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1448, i32 0)
  %1450 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1447), !noalias !20
  %1451 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1449, <8 x i32> %1450, i32 1)
  %1452 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1446, <16 x i32> %1451, i32 24)
  %1453 = bitcast <16 x i32> %1452 to <32 x bfloat>
  %1454 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1453, i32 0)
  %1455 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1438, i32 0)
  %1456 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1455, <16 x bfloat> %60, i32 1)
  %1457 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1454, i32 0)
  %1458 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1457, <16 x bfloat> %60, i32 1)
  %1459 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1456, <32 x bfloat> %1458, i32 60)
  %1460 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %1459)
  %1461 = getelementptr inbounds bfloat, ptr %1, i20 496
  store <16 x bfloat> %1460, ptr %1461, align 32, !tbaa !12
  %1462 = getelementptr inbounds bfloat, ptr %0, i20 512
  %1463 = load <16 x bfloat>, ptr %1462, align 32, !tbaa !12
  %1464 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %1463, i32 8)
  %1465 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1464, <16 x i32> %15, i32 2)
  %1466 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1465, i32 0)
  %1467 = bitcast <8 x i32> %1466 to <16 x i16>
  %1468 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %1467, i32 0, i32 0)
  %1469 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1468, i32 6, i32 1)
  %1470 = add <16 x i32> %25, %1469
  %1471 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1470, i32 0)
  %1472 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1471), !noalias !15
  %1473 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1472, i32 0)
  %1474 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1471), !noalias !15
  %1475 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1473, <8 x i32> %1474, i32 1)
  %1476 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1470, i32 1)
  %1477 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1476), !noalias !15
  %1478 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1477, i32 0)
  %1479 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1476), !noalias !15
  %1480 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1478, <8 x i32> %1479, i32 1)
  %1481 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1475, <16 x i32> %1480, i32 24)
  %1482 = bitcast <16 x i32> %1481 to <32 x bfloat>
  %1483 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1482, i32 0)
  %1484 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1468, i32 -2, i32 1)
  %1485 = and <16 x i32> %1484, %4
  %1486 = add <16 x i32> %44, %1485
  %1487 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1486, i32 0)
  %1488 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1487), !noalias !20
  %1489 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1488, i32 0)
  %1490 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1487), !noalias !20
  %1491 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1489, <8 x i32> %1490, i32 1)
  %1492 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1486, i32 1)
  %1493 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1492), !noalias !20
  %1494 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1493, i32 0)
  %1495 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1492), !noalias !20
  %1496 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1494, <8 x i32> %1495, i32 1)
  %1497 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1491, <16 x i32> %1496, i32 24)
  %1498 = bitcast <16 x i32> %1497 to <32 x bfloat>
  %1499 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1498, i32 0)
  %1500 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1483, i32 0)
  %1501 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1500, <16 x bfloat> %60, i32 1)
  %1502 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1499, i32 0)
  %1503 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1502, <16 x bfloat> %60, i32 1)
  %1504 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1501, <32 x bfloat> %1503, i32 60)
  %1505 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %1504)
  %1506 = getelementptr inbounds bfloat, ptr %1, i20 512
  store <16 x bfloat> %1505, ptr %1506, align 32, !tbaa !12
  %1507 = getelementptr inbounds bfloat, ptr %0, i20 528
  %1508 = load <16 x bfloat>, ptr %1507, align 32, !tbaa !12
  %1509 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %1508, i32 8)
  %1510 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1509, <16 x i32> %15, i32 2)
  %1511 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1510, i32 0)
  %1512 = bitcast <8 x i32> %1511 to <16 x i16>
  %1513 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %1512, i32 0, i32 0)
  %1514 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1513, i32 6, i32 1)
  %1515 = add <16 x i32> %25, %1514
  %1516 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1515, i32 0)
  %1517 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1516), !noalias !15
  %1518 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1517, i32 0)
  %1519 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1516), !noalias !15
  %1520 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1518, <8 x i32> %1519, i32 1)
  %1521 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1515, i32 1)
  %1522 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1521), !noalias !15
  %1523 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1522, i32 0)
  %1524 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1521), !noalias !15
  %1525 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1523, <8 x i32> %1524, i32 1)
  %1526 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1520, <16 x i32> %1525, i32 24)
  %1527 = bitcast <16 x i32> %1526 to <32 x bfloat>
  %1528 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1527, i32 0)
  %1529 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1513, i32 -2, i32 1)
  %1530 = and <16 x i32> %1529, %4
  %1531 = add <16 x i32> %44, %1530
  %1532 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1531, i32 0)
  %1533 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1532), !noalias !20
  %1534 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1533, i32 0)
  %1535 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1532), !noalias !20
  %1536 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1534, <8 x i32> %1535, i32 1)
  %1537 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1531, i32 1)
  %1538 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1537), !noalias !20
  %1539 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1538, i32 0)
  %1540 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1537), !noalias !20
  %1541 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1539, <8 x i32> %1540, i32 1)
  %1542 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1536, <16 x i32> %1541, i32 24)
  %1543 = bitcast <16 x i32> %1542 to <32 x bfloat>
  %1544 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1543, i32 0)
  %1545 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1528, i32 0)
  %1546 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1545, <16 x bfloat> %60, i32 1)
  %1547 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1544, i32 0)
  %1548 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1547, <16 x bfloat> %60, i32 1)
  %1549 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1546, <32 x bfloat> %1548, i32 60)
  %1550 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %1549)
  %1551 = getelementptr inbounds bfloat, ptr %1, i20 528
  store <16 x bfloat> %1550, ptr %1551, align 32, !tbaa !12
  %1552 = getelementptr inbounds bfloat, ptr %0, i20 544
  %1553 = load <16 x bfloat>, ptr %1552, align 32, !tbaa !12
  %1554 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %1553, i32 8)
  %1555 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1554, <16 x i32> %15, i32 2)
  %1556 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1555, i32 0)
  %1557 = bitcast <8 x i32> %1556 to <16 x i16>
  %1558 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %1557, i32 0, i32 0)
  %1559 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1558, i32 6, i32 1)
  %1560 = add <16 x i32> %25, %1559
  %1561 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1560, i32 0)
  %1562 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1561), !noalias !15
  %1563 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1562, i32 0)
  %1564 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1561), !noalias !15
  %1565 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1563, <8 x i32> %1564, i32 1)
  %1566 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1560, i32 1)
  %1567 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1566), !noalias !15
  %1568 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1567, i32 0)
  %1569 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1566), !noalias !15
  %1570 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1568, <8 x i32> %1569, i32 1)
  %1571 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1565, <16 x i32> %1570, i32 24)
  %1572 = bitcast <16 x i32> %1571 to <32 x bfloat>
  %1573 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1572, i32 0)
  %1574 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1558, i32 -2, i32 1)
  %1575 = and <16 x i32> %1574, %4
  %1576 = add <16 x i32> %44, %1575
  %1577 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1576, i32 0)
  %1578 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1577), !noalias !20
  %1579 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1578, i32 0)
  %1580 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1577), !noalias !20
  %1581 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1579, <8 x i32> %1580, i32 1)
  %1582 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1576, i32 1)
  %1583 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1582), !noalias !20
  %1584 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1583, i32 0)
  %1585 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1582), !noalias !20
  %1586 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1584, <8 x i32> %1585, i32 1)
  %1587 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1581, <16 x i32> %1586, i32 24)
  %1588 = bitcast <16 x i32> %1587 to <32 x bfloat>
  %1589 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1588, i32 0)
  %1590 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1573, i32 0)
  %1591 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1590, <16 x bfloat> %60, i32 1)
  %1592 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1589, i32 0)
  %1593 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1592, <16 x bfloat> %60, i32 1)
  %1594 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1591, <32 x bfloat> %1593, i32 60)
  %1595 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %1594)
  %1596 = getelementptr inbounds bfloat, ptr %1, i20 544
  store <16 x bfloat> %1595, ptr %1596, align 32, !tbaa !12
  %1597 = getelementptr inbounds bfloat, ptr %0, i20 560
  %1598 = load <16 x bfloat>, ptr %1597, align 32, !tbaa !12
  %1599 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %1598, i32 8)
  %1600 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1599, <16 x i32> %15, i32 2)
  %1601 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1600, i32 0)
  %1602 = bitcast <8 x i32> %1601 to <16 x i16>
  %1603 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %1602, i32 0, i32 0)
  %1604 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1603, i32 6, i32 1)
  %1605 = add <16 x i32> %25, %1604
  %1606 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1605, i32 0)
  %1607 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1606), !noalias !15
  %1608 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1607, i32 0)
  %1609 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1606), !noalias !15
  %1610 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1608, <8 x i32> %1609, i32 1)
  %1611 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1605, i32 1)
  %1612 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1611), !noalias !15
  %1613 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1612, i32 0)
  %1614 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1611), !noalias !15
  %1615 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1613, <8 x i32> %1614, i32 1)
  %1616 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1610, <16 x i32> %1615, i32 24)
  %1617 = bitcast <16 x i32> %1616 to <32 x bfloat>
  %1618 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1617, i32 0)
  %1619 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1603, i32 -2, i32 1)
  %1620 = and <16 x i32> %1619, %4
  %1621 = add <16 x i32> %44, %1620
  %1622 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1621, i32 0)
  %1623 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1622), !noalias !20
  %1624 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1623, i32 0)
  %1625 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1622), !noalias !20
  %1626 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1624, <8 x i32> %1625, i32 1)
  %1627 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1621, i32 1)
  %1628 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1627), !noalias !20
  %1629 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1628, i32 0)
  %1630 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1627), !noalias !20
  %1631 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1629, <8 x i32> %1630, i32 1)
  %1632 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1626, <16 x i32> %1631, i32 24)
  %1633 = bitcast <16 x i32> %1632 to <32 x bfloat>
  %1634 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1633, i32 0)
  %1635 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1618, i32 0)
  %1636 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1635, <16 x bfloat> %60, i32 1)
  %1637 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1634, i32 0)
  %1638 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1637, <16 x bfloat> %60, i32 1)
  %1639 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1636, <32 x bfloat> %1638, i32 60)
  %1640 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %1639)
  %1641 = getelementptr inbounds bfloat, ptr %1, i20 560
  store <16 x bfloat> %1640, ptr %1641, align 32, !tbaa !12
  %1642 = getelementptr inbounds bfloat, ptr %0, i20 576
  %1643 = load <16 x bfloat>, ptr %1642, align 32, !tbaa !12
  %1644 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %1643, i32 8)
  %1645 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1644, <16 x i32> %15, i32 2)
  %1646 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1645, i32 0)
  %1647 = bitcast <8 x i32> %1646 to <16 x i16>
  %1648 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %1647, i32 0, i32 0)
  %1649 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1648, i32 6, i32 1)
  %1650 = add <16 x i32> %25, %1649
  %1651 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1650, i32 0)
  %1652 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1651), !noalias !15
  %1653 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1652, i32 0)
  %1654 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1651), !noalias !15
  %1655 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1653, <8 x i32> %1654, i32 1)
  %1656 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1650, i32 1)
  %1657 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1656), !noalias !15
  %1658 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1657, i32 0)
  %1659 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1656), !noalias !15
  %1660 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1658, <8 x i32> %1659, i32 1)
  %1661 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1655, <16 x i32> %1660, i32 24)
  %1662 = bitcast <16 x i32> %1661 to <32 x bfloat>
  %1663 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1662, i32 0)
  %1664 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1648, i32 -2, i32 1)
  %1665 = and <16 x i32> %1664, %4
  %1666 = add <16 x i32> %44, %1665
  %1667 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1666, i32 0)
  %1668 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1667), !noalias !20
  %1669 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1668, i32 0)
  %1670 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1667), !noalias !20
  %1671 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1669, <8 x i32> %1670, i32 1)
  %1672 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1666, i32 1)
  %1673 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1672), !noalias !20
  %1674 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1673, i32 0)
  %1675 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1672), !noalias !20
  %1676 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1674, <8 x i32> %1675, i32 1)
  %1677 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1671, <16 x i32> %1676, i32 24)
  %1678 = bitcast <16 x i32> %1677 to <32 x bfloat>
  %1679 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1678, i32 0)
  %1680 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1663, i32 0)
  %1681 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1680, <16 x bfloat> %60, i32 1)
  %1682 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1679, i32 0)
  %1683 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1682, <16 x bfloat> %60, i32 1)
  %1684 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1681, <32 x bfloat> %1683, i32 60)
  %1685 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %1684)
  %1686 = getelementptr inbounds bfloat, ptr %1, i20 576
  store <16 x bfloat> %1685, ptr %1686, align 32, !tbaa !12
  %1687 = getelementptr inbounds bfloat, ptr %0, i20 592
  %1688 = load <16 x bfloat>, ptr %1687, align 32, !tbaa !12
  %1689 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %1688, i32 8)
  %1690 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1689, <16 x i32> %15, i32 2)
  %1691 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1690, i32 0)
  %1692 = bitcast <8 x i32> %1691 to <16 x i16>
  %1693 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %1692, i32 0, i32 0)
  %1694 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1693, i32 6, i32 1)
  %1695 = add <16 x i32> %25, %1694
  %1696 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1695, i32 0)
  %1697 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1696), !noalias !15
  %1698 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1697, i32 0)
  %1699 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1696), !noalias !15
  %1700 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1698, <8 x i32> %1699, i32 1)
  %1701 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1695, i32 1)
  %1702 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1701), !noalias !15
  %1703 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1702, i32 0)
  %1704 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1701), !noalias !15
  %1705 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1703, <8 x i32> %1704, i32 1)
  %1706 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1700, <16 x i32> %1705, i32 24)
  %1707 = bitcast <16 x i32> %1706 to <32 x bfloat>
  %1708 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1707, i32 0)
  %1709 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1693, i32 -2, i32 1)
  %1710 = and <16 x i32> %1709, %4
  %1711 = add <16 x i32> %44, %1710
  %1712 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1711, i32 0)
  %1713 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1712), !noalias !20
  %1714 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1713, i32 0)
  %1715 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1712), !noalias !20
  %1716 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1714, <8 x i32> %1715, i32 1)
  %1717 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1711, i32 1)
  %1718 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1717), !noalias !20
  %1719 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1718, i32 0)
  %1720 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1717), !noalias !20
  %1721 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1719, <8 x i32> %1720, i32 1)
  %1722 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1716, <16 x i32> %1721, i32 24)
  %1723 = bitcast <16 x i32> %1722 to <32 x bfloat>
  %1724 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1723, i32 0)
  %1725 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1708, i32 0)
  %1726 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1725, <16 x bfloat> %60, i32 1)
  %1727 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1724, i32 0)
  %1728 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1727, <16 x bfloat> %60, i32 1)
  %1729 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1726, <32 x bfloat> %1728, i32 60)
  %1730 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %1729)
  %1731 = getelementptr inbounds bfloat, ptr %1, i20 592
  store <16 x bfloat> %1730, ptr %1731, align 32, !tbaa !12
  %1732 = getelementptr inbounds bfloat, ptr %0, i20 608
  %1733 = load <16 x bfloat>, ptr %1732, align 32, !tbaa !12
  %1734 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %1733, i32 8)
  %1735 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1734, <16 x i32> %15, i32 2)
  %1736 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1735, i32 0)
  %1737 = bitcast <8 x i32> %1736 to <16 x i16>
  %1738 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %1737, i32 0, i32 0)
  %1739 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1738, i32 6, i32 1)
  %1740 = add <16 x i32> %25, %1739
  %1741 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1740, i32 0)
  %1742 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1741), !noalias !15
  %1743 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1742, i32 0)
  %1744 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1741), !noalias !15
  %1745 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1743, <8 x i32> %1744, i32 1)
  %1746 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1740, i32 1)
  %1747 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1746), !noalias !15
  %1748 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1747, i32 0)
  %1749 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1746), !noalias !15
  %1750 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1748, <8 x i32> %1749, i32 1)
  %1751 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1745, <16 x i32> %1750, i32 24)
  %1752 = bitcast <16 x i32> %1751 to <32 x bfloat>
  %1753 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1752, i32 0)
  %1754 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1738, i32 -2, i32 1)
  %1755 = and <16 x i32> %1754, %4
  %1756 = add <16 x i32> %44, %1755
  %1757 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1756, i32 0)
  %1758 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1757), !noalias !20
  %1759 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1758, i32 0)
  %1760 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1757), !noalias !20
  %1761 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1759, <8 x i32> %1760, i32 1)
  %1762 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1756, i32 1)
  %1763 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1762), !noalias !20
  %1764 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1763, i32 0)
  %1765 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1762), !noalias !20
  %1766 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1764, <8 x i32> %1765, i32 1)
  %1767 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1761, <16 x i32> %1766, i32 24)
  %1768 = bitcast <16 x i32> %1767 to <32 x bfloat>
  %1769 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1768, i32 0)
  %1770 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1753, i32 0)
  %1771 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1770, <16 x bfloat> %60, i32 1)
  %1772 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1769, i32 0)
  %1773 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1772, <16 x bfloat> %60, i32 1)
  %1774 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1771, <32 x bfloat> %1773, i32 60)
  %1775 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %1774)
  %1776 = getelementptr inbounds bfloat, ptr %1, i20 608
  store <16 x bfloat> %1775, ptr %1776, align 32, !tbaa !12
  %1777 = getelementptr inbounds bfloat, ptr %0, i20 624
  %1778 = load <16 x bfloat>, ptr %1777, align 32, !tbaa !12
  %1779 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %1778, i32 8)
  %1780 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1779, <16 x i32> %15, i32 2)
  %1781 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1780, i32 0)
  %1782 = bitcast <8 x i32> %1781 to <16 x i16>
  %1783 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %1782, i32 0, i32 0)
  %1784 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1783, i32 6, i32 1)
  %1785 = add <16 x i32> %25, %1784
  %1786 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1785, i32 0)
  %1787 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1786), !noalias !15
  %1788 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1787, i32 0)
  %1789 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1786), !noalias !15
  %1790 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1788, <8 x i32> %1789, i32 1)
  %1791 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1785, i32 1)
  %1792 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1791), !noalias !15
  %1793 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1792, i32 0)
  %1794 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1791), !noalias !15
  %1795 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1793, <8 x i32> %1794, i32 1)
  %1796 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1790, <16 x i32> %1795, i32 24)
  %1797 = bitcast <16 x i32> %1796 to <32 x bfloat>
  %1798 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1797, i32 0)
  %1799 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1783, i32 -2, i32 1)
  %1800 = and <16 x i32> %1799, %4
  %1801 = add <16 x i32> %44, %1800
  %1802 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1801, i32 0)
  %1803 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1802), !noalias !20
  %1804 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1803, i32 0)
  %1805 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1802), !noalias !20
  %1806 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1804, <8 x i32> %1805, i32 1)
  %1807 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1801, i32 1)
  %1808 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1807), !noalias !20
  %1809 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1808, i32 0)
  %1810 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1807), !noalias !20
  %1811 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1809, <8 x i32> %1810, i32 1)
  %1812 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1806, <16 x i32> %1811, i32 24)
  %1813 = bitcast <16 x i32> %1812 to <32 x bfloat>
  %1814 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1813, i32 0)
  %1815 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1798, i32 0)
  %1816 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1815, <16 x bfloat> %60, i32 1)
  %1817 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1814, i32 0)
  %1818 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1817, <16 x bfloat> %60, i32 1)
  %1819 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1816, <32 x bfloat> %1818, i32 60)
  %1820 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %1819)
  %1821 = getelementptr inbounds bfloat, ptr %1, i20 624
  store <16 x bfloat> %1820, ptr %1821, align 32, !tbaa !12
  %1822 = getelementptr inbounds bfloat, ptr %0, i20 640
  %1823 = load <16 x bfloat>, ptr %1822, align 32, !tbaa !12
  %1824 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %1823, i32 8)
  %1825 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1824, <16 x i32> %15, i32 2)
  %1826 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1825, i32 0)
  %1827 = bitcast <8 x i32> %1826 to <16 x i16>
  %1828 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %1827, i32 0, i32 0)
  %1829 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1828, i32 6, i32 1)
  %1830 = add <16 x i32> %25, %1829
  %1831 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1830, i32 0)
  %1832 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1831), !noalias !15
  %1833 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1832, i32 0)
  %1834 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1831), !noalias !15
  %1835 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1833, <8 x i32> %1834, i32 1)
  %1836 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1830, i32 1)
  %1837 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1836), !noalias !15
  %1838 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1837, i32 0)
  %1839 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1836), !noalias !15
  %1840 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1838, <8 x i32> %1839, i32 1)
  %1841 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1835, <16 x i32> %1840, i32 24)
  %1842 = bitcast <16 x i32> %1841 to <32 x bfloat>
  %1843 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1842, i32 0)
  %1844 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1828, i32 -2, i32 1)
  %1845 = and <16 x i32> %1844, %4
  %1846 = add <16 x i32> %44, %1845
  %1847 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1846, i32 0)
  %1848 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1847), !noalias !20
  %1849 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1848, i32 0)
  %1850 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1847), !noalias !20
  %1851 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1849, <8 x i32> %1850, i32 1)
  %1852 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1846, i32 1)
  %1853 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1852), !noalias !20
  %1854 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1853, i32 0)
  %1855 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1852), !noalias !20
  %1856 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1854, <8 x i32> %1855, i32 1)
  %1857 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1851, <16 x i32> %1856, i32 24)
  %1858 = bitcast <16 x i32> %1857 to <32 x bfloat>
  %1859 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1858, i32 0)
  %1860 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1843, i32 0)
  %1861 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1860, <16 x bfloat> %60, i32 1)
  %1862 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1859, i32 0)
  %1863 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1862, <16 x bfloat> %60, i32 1)
  %1864 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1861, <32 x bfloat> %1863, i32 60)
  %1865 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %1864)
  %1866 = getelementptr inbounds bfloat, ptr %1, i20 640
  store <16 x bfloat> %1865, ptr %1866, align 32, !tbaa !12
  %1867 = getelementptr inbounds bfloat, ptr %0, i20 656
  %1868 = load <16 x bfloat>, ptr %1867, align 32, !tbaa !12
  %1869 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %1868, i32 8)
  %1870 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1869, <16 x i32> %15, i32 2)
  %1871 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1870, i32 0)
  %1872 = bitcast <8 x i32> %1871 to <16 x i16>
  %1873 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %1872, i32 0, i32 0)
  %1874 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1873, i32 6, i32 1)
  %1875 = add <16 x i32> %25, %1874
  %1876 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1875, i32 0)
  %1877 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1876), !noalias !15
  %1878 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1877, i32 0)
  %1879 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1876), !noalias !15
  %1880 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1878, <8 x i32> %1879, i32 1)
  %1881 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1875, i32 1)
  %1882 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1881), !noalias !15
  %1883 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1882, i32 0)
  %1884 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1881), !noalias !15
  %1885 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1883, <8 x i32> %1884, i32 1)
  %1886 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1880, <16 x i32> %1885, i32 24)
  %1887 = bitcast <16 x i32> %1886 to <32 x bfloat>
  %1888 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1887, i32 0)
  %1889 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1873, i32 -2, i32 1)
  %1890 = and <16 x i32> %1889, %4
  %1891 = add <16 x i32> %44, %1890
  %1892 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1891, i32 0)
  %1893 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1892), !noalias !20
  %1894 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1893, i32 0)
  %1895 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1892), !noalias !20
  %1896 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1894, <8 x i32> %1895, i32 1)
  %1897 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1891, i32 1)
  %1898 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1897), !noalias !20
  %1899 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1898, i32 0)
  %1900 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1897), !noalias !20
  %1901 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1899, <8 x i32> %1900, i32 1)
  %1902 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1896, <16 x i32> %1901, i32 24)
  %1903 = bitcast <16 x i32> %1902 to <32 x bfloat>
  %1904 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1903, i32 0)
  %1905 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1888, i32 0)
  %1906 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1905, <16 x bfloat> %60, i32 1)
  %1907 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1904, i32 0)
  %1908 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1907, <16 x bfloat> %60, i32 1)
  %1909 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1906, <32 x bfloat> %1908, i32 60)
  %1910 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %1909)
  %1911 = getelementptr inbounds bfloat, ptr %1, i20 656
  store <16 x bfloat> %1910, ptr %1911, align 32, !tbaa !12
  %1912 = getelementptr inbounds bfloat, ptr %0, i20 672
  %1913 = load <16 x bfloat>, ptr %1912, align 32, !tbaa !12
  %1914 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %1913, i32 8)
  %1915 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1914, <16 x i32> %15, i32 2)
  %1916 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1915, i32 0)
  %1917 = bitcast <8 x i32> %1916 to <16 x i16>
  %1918 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %1917, i32 0, i32 0)
  %1919 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1918, i32 6, i32 1)
  %1920 = add <16 x i32> %25, %1919
  %1921 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1920, i32 0)
  %1922 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1921), !noalias !15
  %1923 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1922, i32 0)
  %1924 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1921), !noalias !15
  %1925 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1923, <8 x i32> %1924, i32 1)
  %1926 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1920, i32 1)
  %1927 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1926), !noalias !15
  %1928 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1927, i32 0)
  %1929 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1926), !noalias !15
  %1930 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1928, <8 x i32> %1929, i32 1)
  %1931 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1925, <16 x i32> %1930, i32 24)
  %1932 = bitcast <16 x i32> %1931 to <32 x bfloat>
  %1933 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1932, i32 0)
  %1934 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1918, i32 -2, i32 1)
  %1935 = and <16 x i32> %1934, %4
  %1936 = add <16 x i32> %44, %1935
  %1937 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1936, i32 0)
  %1938 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1937), !noalias !20
  %1939 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1938, i32 0)
  %1940 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1937), !noalias !20
  %1941 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1939, <8 x i32> %1940, i32 1)
  %1942 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1936, i32 1)
  %1943 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1942), !noalias !20
  %1944 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1943, i32 0)
  %1945 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1942), !noalias !20
  %1946 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1944, <8 x i32> %1945, i32 1)
  %1947 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1941, <16 x i32> %1946, i32 24)
  %1948 = bitcast <16 x i32> %1947 to <32 x bfloat>
  %1949 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1948, i32 0)
  %1950 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1933, i32 0)
  %1951 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1950, <16 x bfloat> %60, i32 1)
  %1952 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1949, i32 0)
  %1953 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1952, <16 x bfloat> %60, i32 1)
  %1954 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1951, <32 x bfloat> %1953, i32 60)
  %1955 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %1954)
  %1956 = getelementptr inbounds bfloat, ptr %1, i20 672
  store <16 x bfloat> %1955, ptr %1956, align 32, !tbaa !12
  %1957 = getelementptr inbounds bfloat, ptr %0, i20 688
  %1958 = load <16 x bfloat>, ptr %1957, align 32, !tbaa !12
  %1959 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %1958, i32 8)
  %1960 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1959, <16 x i32> %15, i32 2)
  %1961 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1960, i32 0)
  %1962 = bitcast <8 x i32> %1961 to <16 x i16>
  %1963 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %1962, i32 0, i32 0)
  %1964 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1963, i32 6, i32 1)
  %1965 = add <16 x i32> %25, %1964
  %1966 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1965, i32 0)
  %1967 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1966), !noalias !15
  %1968 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1967, i32 0)
  %1969 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1966), !noalias !15
  %1970 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1968, <8 x i32> %1969, i32 1)
  %1971 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1965, i32 1)
  %1972 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1971), !noalias !15
  %1973 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1972, i32 0)
  %1974 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1971), !noalias !15
  %1975 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1973, <8 x i32> %1974, i32 1)
  %1976 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1970, <16 x i32> %1975, i32 24)
  %1977 = bitcast <16 x i32> %1976 to <32 x bfloat>
  %1978 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1977, i32 0)
  %1979 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1963, i32 -2, i32 1)
  %1980 = and <16 x i32> %1979, %4
  %1981 = add <16 x i32> %44, %1980
  %1982 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1981, i32 0)
  %1983 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1982), !noalias !20
  %1984 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1983, i32 0)
  %1985 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1982), !noalias !20
  %1986 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1984, <8 x i32> %1985, i32 1)
  %1987 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1981, i32 1)
  %1988 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1987), !noalias !20
  %1989 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1988, i32 0)
  %1990 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1987), !noalias !20
  %1991 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1989, <8 x i32> %1990, i32 1)
  %1992 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1986, <16 x i32> %1991, i32 24)
  %1993 = bitcast <16 x i32> %1992 to <32 x bfloat>
  %1994 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1993, i32 0)
  %1995 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1978, i32 0)
  %1996 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1995, <16 x bfloat> %60, i32 1)
  %1997 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1994, i32 0)
  %1998 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1997, <16 x bfloat> %60, i32 1)
  %1999 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1996, <32 x bfloat> %1998, i32 60)
  %2000 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %1999)
  %2001 = getelementptr inbounds bfloat, ptr %1, i20 688
  store <16 x bfloat> %2000, ptr %2001, align 32, !tbaa !12
  %2002 = getelementptr inbounds bfloat, ptr %0, i20 704
  %2003 = load <16 x bfloat>, ptr %2002, align 32, !tbaa !12
  %2004 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %2003, i32 8)
  %2005 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2004, <16 x i32> %15, i32 2)
  %2006 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2005, i32 0)
  %2007 = bitcast <8 x i32> %2006 to <16 x i16>
  %2008 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %2007, i32 0, i32 0)
  %2009 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2008, i32 6, i32 1)
  %2010 = add <16 x i32> %25, %2009
  %2011 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2010, i32 0)
  %2012 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2011), !noalias !15
  %2013 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2012, i32 0)
  %2014 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2011), !noalias !15
  %2015 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2013, <8 x i32> %2014, i32 1)
  %2016 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2010, i32 1)
  %2017 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2016), !noalias !15
  %2018 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2017, i32 0)
  %2019 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2016), !noalias !15
  %2020 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2018, <8 x i32> %2019, i32 1)
  %2021 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2015, <16 x i32> %2020, i32 24)
  %2022 = bitcast <16 x i32> %2021 to <32 x bfloat>
  %2023 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2022, i32 0)
  %2024 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2008, i32 -2, i32 1)
  %2025 = and <16 x i32> %2024, %4
  %2026 = add <16 x i32> %44, %2025
  %2027 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2026, i32 0)
  %2028 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2027), !noalias !20
  %2029 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2028, i32 0)
  %2030 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2027), !noalias !20
  %2031 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2029, <8 x i32> %2030, i32 1)
  %2032 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2026, i32 1)
  %2033 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2032), !noalias !20
  %2034 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2033, i32 0)
  %2035 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2032), !noalias !20
  %2036 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2034, <8 x i32> %2035, i32 1)
  %2037 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2031, <16 x i32> %2036, i32 24)
  %2038 = bitcast <16 x i32> %2037 to <32 x bfloat>
  %2039 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2038, i32 0)
  %2040 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2023, i32 0)
  %2041 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2040, <16 x bfloat> %60, i32 1)
  %2042 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2039, i32 0)
  %2043 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2042, <16 x bfloat> %60, i32 1)
  %2044 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %2041, <32 x bfloat> %2043, i32 60)
  %2045 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %2044)
  %2046 = getelementptr inbounds bfloat, ptr %1, i20 704
  store <16 x bfloat> %2045, ptr %2046, align 32, !tbaa !12
  %2047 = getelementptr inbounds bfloat, ptr %0, i20 720
  %2048 = load <16 x bfloat>, ptr %2047, align 32, !tbaa !12
  %2049 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %2048, i32 8)
  %2050 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2049, <16 x i32> %15, i32 2)
  %2051 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2050, i32 0)
  %2052 = bitcast <8 x i32> %2051 to <16 x i16>
  %2053 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %2052, i32 0, i32 0)
  %2054 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2053, i32 6, i32 1)
  %2055 = add <16 x i32> %25, %2054
  %2056 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2055, i32 0)
  %2057 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2056), !noalias !15
  %2058 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2057, i32 0)
  %2059 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2056), !noalias !15
  %2060 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2058, <8 x i32> %2059, i32 1)
  %2061 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2055, i32 1)
  %2062 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2061), !noalias !15
  %2063 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2062, i32 0)
  %2064 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2061), !noalias !15
  %2065 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2063, <8 x i32> %2064, i32 1)
  %2066 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2060, <16 x i32> %2065, i32 24)
  %2067 = bitcast <16 x i32> %2066 to <32 x bfloat>
  %2068 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2067, i32 0)
  %2069 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2053, i32 -2, i32 1)
  %2070 = and <16 x i32> %2069, %4
  %2071 = add <16 x i32> %44, %2070
  %2072 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2071, i32 0)
  %2073 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2072), !noalias !20
  %2074 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2073, i32 0)
  %2075 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2072), !noalias !20
  %2076 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2074, <8 x i32> %2075, i32 1)
  %2077 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2071, i32 1)
  %2078 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2077), !noalias !20
  %2079 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2078, i32 0)
  %2080 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2077), !noalias !20
  %2081 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2079, <8 x i32> %2080, i32 1)
  %2082 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2076, <16 x i32> %2081, i32 24)
  %2083 = bitcast <16 x i32> %2082 to <32 x bfloat>
  %2084 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2083, i32 0)
  %2085 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2068, i32 0)
  %2086 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2085, <16 x bfloat> %60, i32 1)
  %2087 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2084, i32 0)
  %2088 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2087, <16 x bfloat> %60, i32 1)
  %2089 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %2086, <32 x bfloat> %2088, i32 60)
  %2090 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %2089)
  %2091 = getelementptr inbounds bfloat, ptr %1, i20 720
  store <16 x bfloat> %2090, ptr %2091, align 32, !tbaa !12
  %2092 = getelementptr inbounds bfloat, ptr %0, i20 736
  %2093 = load <16 x bfloat>, ptr %2092, align 32, !tbaa !12
  %2094 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %2093, i32 8)
  %2095 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2094, <16 x i32> %15, i32 2)
  %2096 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2095, i32 0)
  %2097 = bitcast <8 x i32> %2096 to <16 x i16>
  %2098 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %2097, i32 0, i32 0)
  %2099 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2098, i32 6, i32 1)
  %2100 = add <16 x i32> %25, %2099
  %2101 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2100, i32 0)
  %2102 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2101), !noalias !15
  %2103 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2102, i32 0)
  %2104 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2101), !noalias !15
  %2105 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2103, <8 x i32> %2104, i32 1)
  %2106 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2100, i32 1)
  %2107 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2106), !noalias !15
  %2108 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2107, i32 0)
  %2109 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2106), !noalias !15
  %2110 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2108, <8 x i32> %2109, i32 1)
  %2111 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2105, <16 x i32> %2110, i32 24)
  %2112 = bitcast <16 x i32> %2111 to <32 x bfloat>
  %2113 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2112, i32 0)
  %2114 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2098, i32 -2, i32 1)
  %2115 = and <16 x i32> %2114, %4
  %2116 = add <16 x i32> %44, %2115
  %2117 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2116, i32 0)
  %2118 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2117), !noalias !20
  %2119 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2118, i32 0)
  %2120 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2117), !noalias !20
  %2121 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2119, <8 x i32> %2120, i32 1)
  %2122 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2116, i32 1)
  %2123 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2122), !noalias !20
  %2124 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2123, i32 0)
  %2125 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2122), !noalias !20
  %2126 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2124, <8 x i32> %2125, i32 1)
  %2127 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2121, <16 x i32> %2126, i32 24)
  %2128 = bitcast <16 x i32> %2127 to <32 x bfloat>
  %2129 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2128, i32 0)
  %2130 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2113, i32 0)
  %2131 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2130, <16 x bfloat> %60, i32 1)
  %2132 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2129, i32 0)
  %2133 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2132, <16 x bfloat> %60, i32 1)
  %2134 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %2131, <32 x bfloat> %2133, i32 60)
  %2135 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %2134)
  %2136 = getelementptr inbounds bfloat, ptr %1, i20 736
  store <16 x bfloat> %2135, ptr %2136, align 32, !tbaa !12
  %2137 = getelementptr inbounds bfloat, ptr %0, i20 752
  %2138 = load <16 x bfloat>, ptr %2137, align 32, !tbaa !12
  %2139 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %2138, i32 8)
  %2140 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2139, <16 x i32> %15, i32 2)
  %2141 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2140, i32 0)
  %2142 = bitcast <8 x i32> %2141 to <16 x i16>
  %2143 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %2142, i32 0, i32 0)
  %2144 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2143, i32 6, i32 1)
  %2145 = add <16 x i32> %25, %2144
  %2146 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2145, i32 0)
  %2147 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2146), !noalias !15
  %2148 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2147, i32 0)
  %2149 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2146), !noalias !15
  %2150 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2148, <8 x i32> %2149, i32 1)
  %2151 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2145, i32 1)
  %2152 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2151), !noalias !15
  %2153 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2152, i32 0)
  %2154 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2151), !noalias !15
  %2155 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2153, <8 x i32> %2154, i32 1)
  %2156 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2150, <16 x i32> %2155, i32 24)
  %2157 = bitcast <16 x i32> %2156 to <32 x bfloat>
  %2158 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2157, i32 0)
  %2159 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2143, i32 -2, i32 1)
  %2160 = and <16 x i32> %2159, %4
  %2161 = add <16 x i32> %44, %2160
  %2162 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2161, i32 0)
  %2163 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2162), !noalias !20
  %2164 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2163, i32 0)
  %2165 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2162), !noalias !20
  %2166 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2164, <8 x i32> %2165, i32 1)
  %2167 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2161, i32 1)
  %2168 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2167), !noalias !20
  %2169 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2168, i32 0)
  %2170 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2167), !noalias !20
  %2171 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2169, <8 x i32> %2170, i32 1)
  %2172 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2166, <16 x i32> %2171, i32 24)
  %2173 = bitcast <16 x i32> %2172 to <32 x bfloat>
  %2174 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2173, i32 0)
  %2175 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2158, i32 0)
  %2176 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2175, <16 x bfloat> %60, i32 1)
  %2177 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2174, i32 0)
  %2178 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2177, <16 x bfloat> %60, i32 1)
  %2179 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %2176, <32 x bfloat> %2178, i32 60)
  %2180 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %2179)
  %2181 = getelementptr inbounds bfloat, ptr %1, i20 752
  store <16 x bfloat> %2180, ptr %2181, align 32, !tbaa !12
  %2182 = getelementptr inbounds bfloat, ptr %0, i20 768
  %2183 = load <16 x bfloat>, ptr %2182, align 32, !tbaa !12
  %2184 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %2183, i32 8)
  %2185 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2184, <16 x i32> %15, i32 2)
  %2186 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2185, i32 0)
  %2187 = bitcast <8 x i32> %2186 to <16 x i16>
  %2188 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %2187, i32 0, i32 0)
  %2189 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2188, i32 6, i32 1)
  %2190 = add <16 x i32> %25, %2189
  %2191 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2190, i32 0)
  %2192 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2191), !noalias !15
  %2193 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2192, i32 0)
  %2194 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2191), !noalias !15
  %2195 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2193, <8 x i32> %2194, i32 1)
  %2196 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2190, i32 1)
  %2197 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2196), !noalias !15
  %2198 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2197, i32 0)
  %2199 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2196), !noalias !15
  %2200 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2198, <8 x i32> %2199, i32 1)
  %2201 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2195, <16 x i32> %2200, i32 24)
  %2202 = bitcast <16 x i32> %2201 to <32 x bfloat>
  %2203 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2202, i32 0)
  %2204 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2188, i32 -2, i32 1)
  %2205 = and <16 x i32> %2204, %4
  %2206 = add <16 x i32> %44, %2205
  %2207 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2206, i32 0)
  %2208 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2207), !noalias !20
  %2209 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2208, i32 0)
  %2210 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2207), !noalias !20
  %2211 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2209, <8 x i32> %2210, i32 1)
  %2212 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2206, i32 1)
  %2213 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2212), !noalias !20
  %2214 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2213, i32 0)
  %2215 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2212), !noalias !20
  %2216 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2214, <8 x i32> %2215, i32 1)
  %2217 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2211, <16 x i32> %2216, i32 24)
  %2218 = bitcast <16 x i32> %2217 to <32 x bfloat>
  %2219 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2218, i32 0)
  %2220 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2203, i32 0)
  %2221 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2220, <16 x bfloat> %60, i32 1)
  %2222 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2219, i32 0)
  %2223 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2222, <16 x bfloat> %60, i32 1)
  %2224 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %2221, <32 x bfloat> %2223, i32 60)
  %2225 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %2224)
  %2226 = getelementptr inbounds bfloat, ptr %1, i20 768
  store <16 x bfloat> %2225, ptr %2226, align 32, !tbaa !12
  %2227 = getelementptr inbounds bfloat, ptr %0, i20 784
  %2228 = load <16 x bfloat>, ptr %2227, align 32, !tbaa !12
  %2229 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %2228, i32 8)
  %2230 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2229, <16 x i32> %15, i32 2)
  %2231 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2230, i32 0)
  %2232 = bitcast <8 x i32> %2231 to <16 x i16>
  %2233 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %2232, i32 0, i32 0)
  %2234 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2233, i32 6, i32 1)
  %2235 = add <16 x i32> %25, %2234
  %2236 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2235, i32 0)
  %2237 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2236), !noalias !15
  %2238 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2237, i32 0)
  %2239 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2236), !noalias !15
  %2240 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2238, <8 x i32> %2239, i32 1)
  %2241 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2235, i32 1)
  %2242 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2241), !noalias !15
  %2243 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2242, i32 0)
  %2244 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2241), !noalias !15
  %2245 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2243, <8 x i32> %2244, i32 1)
  %2246 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2240, <16 x i32> %2245, i32 24)
  %2247 = bitcast <16 x i32> %2246 to <32 x bfloat>
  %2248 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2247, i32 0)
  %2249 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2233, i32 -2, i32 1)
  %2250 = and <16 x i32> %2249, %4
  %2251 = add <16 x i32> %44, %2250
  %2252 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2251, i32 0)
  %2253 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2252), !noalias !20
  %2254 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2253, i32 0)
  %2255 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2252), !noalias !20
  %2256 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2254, <8 x i32> %2255, i32 1)
  %2257 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2251, i32 1)
  %2258 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2257), !noalias !20
  %2259 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2258, i32 0)
  %2260 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2257), !noalias !20
  %2261 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2259, <8 x i32> %2260, i32 1)
  %2262 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2256, <16 x i32> %2261, i32 24)
  %2263 = bitcast <16 x i32> %2262 to <32 x bfloat>
  %2264 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2263, i32 0)
  %2265 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2248, i32 0)
  %2266 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2265, <16 x bfloat> %60, i32 1)
  %2267 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2264, i32 0)
  %2268 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2267, <16 x bfloat> %60, i32 1)
  %2269 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %2266, <32 x bfloat> %2268, i32 60)
  %2270 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %2269)
  %2271 = getelementptr inbounds bfloat, ptr %1, i20 784
  store <16 x bfloat> %2270, ptr %2271, align 32, !tbaa !12
  %2272 = getelementptr inbounds bfloat, ptr %0, i20 800
  %2273 = load <16 x bfloat>, ptr %2272, align 32, !tbaa !12
  %2274 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %2273, i32 8)
  %2275 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2274, <16 x i32> %15, i32 2)
  %2276 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2275, i32 0)
  %2277 = bitcast <8 x i32> %2276 to <16 x i16>
  %2278 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %2277, i32 0, i32 0)
  %2279 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2278, i32 6, i32 1)
  %2280 = add <16 x i32> %25, %2279
  %2281 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2280, i32 0)
  %2282 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2281), !noalias !15
  %2283 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2282, i32 0)
  %2284 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2281), !noalias !15
  %2285 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2283, <8 x i32> %2284, i32 1)
  %2286 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2280, i32 1)
  %2287 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2286), !noalias !15
  %2288 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2287, i32 0)
  %2289 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2286), !noalias !15
  %2290 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2288, <8 x i32> %2289, i32 1)
  %2291 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2285, <16 x i32> %2290, i32 24)
  %2292 = bitcast <16 x i32> %2291 to <32 x bfloat>
  %2293 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2292, i32 0)
  %2294 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2278, i32 -2, i32 1)
  %2295 = and <16 x i32> %2294, %4
  %2296 = add <16 x i32> %44, %2295
  %2297 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2296, i32 0)
  %2298 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2297), !noalias !20
  %2299 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2298, i32 0)
  %2300 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2297), !noalias !20
  %2301 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2299, <8 x i32> %2300, i32 1)
  %2302 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2296, i32 1)
  %2303 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2302), !noalias !20
  %2304 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2303, i32 0)
  %2305 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2302), !noalias !20
  %2306 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2304, <8 x i32> %2305, i32 1)
  %2307 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2301, <16 x i32> %2306, i32 24)
  %2308 = bitcast <16 x i32> %2307 to <32 x bfloat>
  %2309 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2308, i32 0)
  %2310 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2293, i32 0)
  %2311 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2310, <16 x bfloat> %60, i32 1)
  %2312 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2309, i32 0)
  %2313 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2312, <16 x bfloat> %60, i32 1)
  %2314 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %2311, <32 x bfloat> %2313, i32 60)
  %2315 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %2314)
  %2316 = getelementptr inbounds bfloat, ptr %1, i20 800
  store <16 x bfloat> %2315, ptr %2316, align 32, !tbaa !12
  %2317 = getelementptr inbounds bfloat, ptr %0, i20 816
  %2318 = load <16 x bfloat>, ptr %2317, align 32, !tbaa !12
  %2319 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %2318, i32 8)
  %2320 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2319, <16 x i32> %15, i32 2)
  %2321 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2320, i32 0)
  %2322 = bitcast <8 x i32> %2321 to <16 x i16>
  %2323 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %2322, i32 0, i32 0)
  %2324 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2323, i32 6, i32 1)
  %2325 = add <16 x i32> %25, %2324
  %2326 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2325, i32 0)
  %2327 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2326), !noalias !15
  %2328 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2327, i32 0)
  %2329 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2326), !noalias !15
  %2330 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2328, <8 x i32> %2329, i32 1)
  %2331 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2325, i32 1)
  %2332 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2331), !noalias !15
  %2333 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2332, i32 0)
  %2334 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2331), !noalias !15
  %2335 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2333, <8 x i32> %2334, i32 1)
  %2336 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2330, <16 x i32> %2335, i32 24)
  %2337 = bitcast <16 x i32> %2336 to <32 x bfloat>
  %2338 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2337, i32 0)
  %2339 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2323, i32 -2, i32 1)
  %2340 = and <16 x i32> %2339, %4
  %2341 = add <16 x i32> %44, %2340
  %2342 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2341, i32 0)
  %2343 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2342), !noalias !20
  %2344 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2343, i32 0)
  %2345 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2342), !noalias !20
  %2346 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2344, <8 x i32> %2345, i32 1)
  %2347 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2341, i32 1)
  %2348 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2347), !noalias !20
  %2349 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2348, i32 0)
  %2350 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2347), !noalias !20
  %2351 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2349, <8 x i32> %2350, i32 1)
  %2352 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2346, <16 x i32> %2351, i32 24)
  %2353 = bitcast <16 x i32> %2352 to <32 x bfloat>
  %2354 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2353, i32 0)
  %2355 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2338, i32 0)
  %2356 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2355, <16 x bfloat> %60, i32 1)
  %2357 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2354, i32 0)
  %2358 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2357, <16 x bfloat> %60, i32 1)
  %2359 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %2356, <32 x bfloat> %2358, i32 60)
  %2360 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %2359)
  %2361 = getelementptr inbounds bfloat, ptr %1, i20 816
  store <16 x bfloat> %2360, ptr %2361, align 32, !tbaa !12
  %2362 = getelementptr inbounds bfloat, ptr %0, i20 832
  %2363 = load <16 x bfloat>, ptr %2362, align 32, !tbaa !12
  %2364 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %2363, i32 8)
  %2365 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2364, <16 x i32> %15, i32 2)
  %2366 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2365, i32 0)
  %2367 = bitcast <8 x i32> %2366 to <16 x i16>
  %2368 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %2367, i32 0, i32 0)
  %2369 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2368, i32 6, i32 1)
  %2370 = add <16 x i32> %25, %2369
  %2371 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2370, i32 0)
  %2372 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2371), !noalias !15
  %2373 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2372, i32 0)
  %2374 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2371), !noalias !15
  %2375 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2373, <8 x i32> %2374, i32 1)
  %2376 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2370, i32 1)
  %2377 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2376), !noalias !15
  %2378 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2377, i32 0)
  %2379 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2376), !noalias !15
  %2380 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2378, <8 x i32> %2379, i32 1)
  %2381 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2375, <16 x i32> %2380, i32 24)
  %2382 = bitcast <16 x i32> %2381 to <32 x bfloat>
  %2383 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2382, i32 0)
  %2384 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2368, i32 -2, i32 1)
  %2385 = and <16 x i32> %2384, %4
  %2386 = add <16 x i32> %44, %2385
  %2387 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2386, i32 0)
  %2388 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2387), !noalias !20
  %2389 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2388, i32 0)
  %2390 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2387), !noalias !20
  %2391 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2389, <8 x i32> %2390, i32 1)
  %2392 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2386, i32 1)
  %2393 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2392), !noalias !20
  %2394 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2393, i32 0)
  %2395 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2392), !noalias !20
  %2396 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2394, <8 x i32> %2395, i32 1)
  %2397 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2391, <16 x i32> %2396, i32 24)
  %2398 = bitcast <16 x i32> %2397 to <32 x bfloat>
  %2399 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2398, i32 0)
  %2400 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2383, i32 0)
  %2401 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2400, <16 x bfloat> %60, i32 1)
  %2402 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2399, i32 0)
  %2403 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2402, <16 x bfloat> %60, i32 1)
  %2404 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %2401, <32 x bfloat> %2403, i32 60)
  %2405 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %2404)
  %2406 = getelementptr inbounds bfloat, ptr %1, i20 832
  store <16 x bfloat> %2405, ptr %2406, align 32, !tbaa !12
  %2407 = getelementptr inbounds bfloat, ptr %0, i20 848
  %2408 = load <16 x bfloat>, ptr %2407, align 32, !tbaa !12
  %2409 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %2408, i32 8)
  %2410 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2409, <16 x i32> %15, i32 2)
  %2411 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2410, i32 0)
  %2412 = bitcast <8 x i32> %2411 to <16 x i16>
  %2413 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %2412, i32 0, i32 0)
  %2414 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2413, i32 6, i32 1)
  %2415 = add <16 x i32> %25, %2414
  %2416 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2415, i32 0)
  %2417 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2416), !noalias !15
  %2418 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2417, i32 0)
  %2419 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2416), !noalias !15
  %2420 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2418, <8 x i32> %2419, i32 1)
  %2421 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2415, i32 1)
  %2422 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2421), !noalias !15
  %2423 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2422, i32 0)
  %2424 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2421), !noalias !15
  %2425 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2423, <8 x i32> %2424, i32 1)
  %2426 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2420, <16 x i32> %2425, i32 24)
  %2427 = bitcast <16 x i32> %2426 to <32 x bfloat>
  %2428 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2427, i32 0)
  %2429 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2413, i32 -2, i32 1)
  %2430 = and <16 x i32> %2429, %4
  %2431 = add <16 x i32> %44, %2430
  %2432 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2431, i32 0)
  %2433 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2432), !noalias !20
  %2434 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2433, i32 0)
  %2435 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2432), !noalias !20
  %2436 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2434, <8 x i32> %2435, i32 1)
  %2437 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2431, i32 1)
  %2438 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2437), !noalias !20
  %2439 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2438, i32 0)
  %2440 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2437), !noalias !20
  %2441 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2439, <8 x i32> %2440, i32 1)
  %2442 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2436, <16 x i32> %2441, i32 24)
  %2443 = bitcast <16 x i32> %2442 to <32 x bfloat>
  %2444 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2443, i32 0)
  %2445 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2428, i32 0)
  %2446 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2445, <16 x bfloat> %60, i32 1)
  %2447 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2444, i32 0)
  %2448 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2447, <16 x bfloat> %60, i32 1)
  %2449 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %2446, <32 x bfloat> %2448, i32 60)
  %2450 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %2449)
  %2451 = getelementptr inbounds bfloat, ptr %1, i20 848
  store <16 x bfloat> %2450, ptr %2451, align 32, !tbaa !12
  %2452 = getelementptr inbounds bfloat, ptr %0, i20 864
  %2453 = load <16 x bfloat>, ptr %2452, align 32, !tbaa !12
  %2454 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %2453, i32 8)
  %2455 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2454, <16 x i32> %15, i32 2)
  %2456 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2455, i32 0)
  %2457 = bitcast <8 x i32> %2456 to <16 x i16>
  %2458 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %2457, i32 0, i32 0)
  %2459 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2458, i32 6, i32 1)
  %2460 = add <16 x i32> %25, %2459
  %2461 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2460, i32 0)
  %2462 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2461), !noalias !15
  %2463 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2462, i32 0)
  %2464 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2461), !noalias !15
  %2465 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2463, <8 x i32> %2464, i32 1)
  %2466 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2460, i32 1)
  %2467 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2466), !noalias !15
  %2468 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2467, i32 0)
  %2469 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2466), !noalias !15
  %2470 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2468, <8 x i32> %2469, i32 1)
  %2471 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2465, <16 x i32> %2470, i32 24)
  %2472 = bitcast <16 x i32> %2471 to <32 x bfloat>
  %2473 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2472, i32 0)
  %2474 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2458, i32 -2, i32 1)
  %2475 = and <16 x i32> %2474, %4
  %2476 = add <16 x i32> %44, %2475
  %2477 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2476, i32 0)
  %2478 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2477), !noalias !20
  %2479 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2478, i32 0)
  %2480 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2477), !noalias !20
  %2481 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2479, <8 x i32> %2480, i32 1)
  %2482 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2476, i32 1)
  %2483 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2482), !noalias !20
  %2484 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2483, i32 0)
  %2485 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2482), !noalias !20
  %2486 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2484, <8 x i32> %2485, i32 1)
  %2487 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2481, <16 x i32> %2486, i32 24)
  %2488 = bitcast <16 x i32> %2487 to <32 x bfloat>
  %2489 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2488, i32 0)
  %2490 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2473, i32 0)
  %2491 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2490, <16 x bfloat> %60, i32 1)
  %2492 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2489, i32 0)
  %2493 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2492, <16 x bfloat> %60, i32 1)
  %2494 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %2491, <32 x bfloat> %2493, i32 60)
  %2495 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %2494)
  %2496 = getelementptr inbounds bfloat, ptr %1, i20 864
  store <16 x bfloat> %2495, ptr %2496, align 32, !tbaa !12
  %2497 = getelementptr inbounds bfloat, ptr %0, i20 880
  %2498 = load <16 x bfloat>, ptr %2497, align 32, !tbaa !12
  %2499 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %2498, i32 8)
  %2500 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2499, <16 x i32> %15, i32 2)
  %2501 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2500, i32 0)
  %2502 = bitcast <8 x i32> %2501 to <16 x i16>
  %2503 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %2502, i32 0, i32 0)
  %2504 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2503, i32 6, i32 1)
  %2505 = add <16 x i32> %25, %2504
  %2506 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2505, i32 0)
  %2507 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2506), !noalias !15
  %2508 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2507, i32 0)
  %2509 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2506), !noalias !15
  %2510 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2508, <8 x i32> %2509, i32 1)
  %2511 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2505, i32 1)
  %2512 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2511), !noalias !15
  %2513 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2512, i32 0)
  %2514 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2511), !noalias !15
  %2515 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2513, <8 x i32> %2514, i32 1)
  %2516 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2510, <16 x i32> %2515, i32 24)
  %2517 = bitcast <16 x i32> %2516 to <32 x bfloat>
  %2518 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2517, i32 0)
  %2519 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2503, i32 -2, i32 1)
  %2520 = and <16 x i32> %2519, %4
  %2521 = add <16 x i32> %44, %2520
  %2522 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2521, i32 0)
  %2523 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2522), !noalias !20
  %2524 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2523, i32 0)
  %2525 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2522), !noalias !20
  %2526 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2524, <8 x i32> %2525, i32 1)
  %2527 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2521, i32 1)
  %2528 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2527), !noalias !20
  %2529 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2528, i32 0)
  %2530 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2527), !noalias !20
  %2531 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2529, <8 x i32> %2530, i32 1)
  %2532 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2526, <16 x i32> %2531, i32 24)
  %2533 = bitcast <16 x i32> %2532 to <32 x bfloat>
  %2534 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2533, i32 0)
  %2535 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2518, i32 0)
  %2536 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2535, <16 x bfloat> %60, i32 1)
  %2537 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2534, i32 0)
  %2538 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2537, <16 x bfloat> %60, i32 1)
  %2539 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %2536, <32 x bfloat> %2538, i32 60)
  %2540 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %2539)
  %2541 = getelementptr inbounds bfloat, ptr %1, i20 880
  store <16 x bfloat> %2540, ptr %2541, align 32, !tbaa !12
  %2542 = getelementptr inbounds bfloat, ptr %0, i20 896
  %2543 = load <16 x bfloat>, ptr %2542, align 32, !tbaa !12
  %2544 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %2543, i32 8)
  %2545 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2544, <16 x i32> %15, i32 2)
  %2546 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2545, i32 0)
  %2547 = bitcast <8 x i32> %2546 to <16 x i16>
  %2548 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %2547, i32 0, i32 0)
  %2549 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2548, i32 6, i32 1)
  %2550 = add <16 x i32> %25, %2549
  %2551 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2550, i32 0)
  %2552 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2551), !noalias !15
  %2553 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2552, i32 0)
  %2554 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2551), !noalias !15
  %2555 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2553, <8 x i32> %2554, i32 1)
  %2556 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2550, i32 1)
  %2557 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2556), !noalias !15
  %2558 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2557, i32 0)
  %2559 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2556), !noalias !15
  %2560 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2558, <8 x i32> %2559, i32 1)
  %2561 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2555, <16 x i32> %2560, i32 24)
  %2562 = bitcast <16 x i32> %2561 to <32 x bfloat>
  %2563 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2562, i32 0)
  %2564 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2548, i32 -2, i32 1)
  %2565 = and <16 x i32> %2564, %4
  %2566 = add <16 x i32> %44, %2565
  %2567 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2566, i32 0)
  %2568 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2567), !noalias !20
  %2569 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2568, i32 0)
  %2570 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2567), !noalias !20
  %2571 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2569, <8 x i32> %2570, i32 1)
  %2572 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2566, i32 1)
  %2573 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2572), !noalias !20
  %2574 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2573, i32 0)
  %2575 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2572), !noalias !20
  %2576 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2574, <8 x i32> %2575, i32 1)
  %2577 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2571, <16 x i32> %2576, i32 24)
  %2578 = bitcast <16 x i32> %2577 to <32 x bfloat>
  %2579 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2578, i32 0)
  %2580 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2563, i32 0)
  %2581 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2580, <16 x bfloat> %60, i32 1)
  %2582 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2579, i32 0)
  %2583 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2582, <16 x bfloat> %60, i32 1)
  %2584 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %2581, <32 x bfloat> %2583, i32 60)
  %2585 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %2584)
  %2586 = getelementptr inbounds bfloat, ptr %1, i20 896
  store <16 x bfloat> %2585, ptr %2586, align 32, !tbaa !12
  %2587 = getelementptr inbounds bfloat, ptr %0, i20 912
  %2588 = load <16 x bfloat>, ptr %2587, align 32, !tbaa !12
  %2589 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %2588, i32 8)
  %2590 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2589, <16 x i32> %15, i32 2)
  %2591 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2590, i32 0)
  %2592 = bitcast <8 x i32> %2591 to <16 x i16>
  %2593 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %2592, i32 0, i32 0)
  %2594 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2593, i32 6, i32 1)
  %2595 = add <16 x i32> %25, %2594
  %2596 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2595, i32 0)
  %2597 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2596), !noalias !15
  %2598 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2597, i32 0)
  %2599 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2596), !noalias !15
  %2600 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2598, <8 x i32> %2599, i32 1)
  %2601 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2595, i32 1)
  %2602 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2601), !noalias !15
  %2603 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2602, i32 0)
  %2604 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2601), !noalias !15
  %2605 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2603, <8 x i32> %2604, i32 1)
  %2606 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2600, <16 x i32> %2605, i32 24)
  %2607 = bitcast <16 x i32> %2606 to <32 x bfloat>
  %2608 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2607, i32 0)
  %2609 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2593, i32 -2, i32 1)
  %2610 = and <16 x i32> %2609, %4
  %2611 = add <16 x i32> %44, %2610
  %2612 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2611, i32 0)
  %2613 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2612), !noalias !20
  %2614 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2613, i32 0)
  %2615 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2612), !noalias !20
  %2616 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2614, <8 x i32> %2615, i32 1)
  %2617 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2611, i32 1)
  %2618 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2617), !noalias !20
  %2619 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2618, i32 0)
  %2620 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2617), !noalias !20
  %2621 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2619, <8 x i32> %2620, i32 1)
  %2622 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2616, <16 x i32> %2621, i32 24)
  %2623 = bitcast <16 x i32> %2622 to <32 x bfloat>
  %2624 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2623, i32 0)
  %2625 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2608, i32 0)
  %2626 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2625, <16 x bfloat> %60, i32 1)
  %2627 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2624, i32 0)
  %2628 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2627, <16 x bfloat> %60, i32 1)
  %2629 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %2626, <32 x bfloat> %2628, i32 60)
  %2630 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %2629)
  %2631 = getelementptr inbounds bfloat, ptr %1, i20 912
  store <16 x bfloat> %2630, ptr %2631, align 32, !tbaa !12
  %2632 = getelementptr inbounds bfloat, ptr %0, i20 928
  %2633 = load <16 x bfloat>, ptr %2632, align 32, !tbaa !12
  %2634 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %2633, i32 8)
  %2635 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2634, <16 x i32> %15, i32 2)
  %2636 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2635, i32 0)
  %2637 = bitcast <8 x i32> %2636 to <16 x i16>
  %2638 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %2637, i32 0, i32 0)
  %2639 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2638, i32 6, i32 1)
  %2640 = add <16 x i32> %25, %2639
  %2641 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2640, i32 0)
  %2642 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2641), !noalias !15
  %2643 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2642, i32 0)
  %2644 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2641), !noalias !15
  %2645 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2643, <8 x i32> %2644, i32 1)
  %2646 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2640, i32 1)
  %2647 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2646), !noalias !15
  %2648 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2647, i32 0)
  %2649 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2646), !noalias !15
  %2650 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2648, <8 x i32> %2649, i32 1)
  %2651 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2645, <16 x i32> %2650, i32 24)
  %2652 = bitcast <16 x i32> %2651 to <32 x bfloat>
  %2653 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2652, i32 0)
  %2654 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2638, i32 -2, i32 1)
  %2655 = and <16 x i32> %2654, %4
  %2656 = add <16 x i32> %44, %2655
  %2657 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2656, i32 0)
  %2658 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2657), !noalias !20
  %2659 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2658, i32 0)
  %2660 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2657), !noalias !20
  %2661 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2659, <8 x i32> %2660, i32 1)
  %2662 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2656, i32 1)
  %2663 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2662), !noalias !20
  %2664 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2663, i32 0)
  %2665 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2662), !noalias !20
  %2666 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2664, <8 x i32> %2665, i32 1)
  %2667 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2661, <16 x i32> %2666, i32 24)
  %2668 = bitcast <16 x i32> %2667 to <32 x bfloat>
  %2669 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2668, i32 0)
  %2670 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2653, i32 0)
  %2671 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2670, <16 x bfloat> %60, i32 1)
  %2672 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2669, i32 0)
  %2673 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2672, <16 x bfloat> %60, i32 1)
  %2674 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %2671, <32 x bfloat> %2673, i32 60)
  %2675 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %2674)
  %2676 = getelementptr inbounds bfloat, ptr %1, i20 928
  store <16 x bfloat> %2675, ptr %2676, align 32, !tbaa !12
  %2677 = getelementptr inbounds bfloat, ptr %0, i20 944
  %2678 = load <16 x bfloat>, ptr %2677, align 32, !tbaa !12
  %2679 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %2678, i32 8)
  %2680 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2679, <16 x i32> %15, i32 2)
  %2681 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2680, i32 0)
  %2682 = bitcast <8 x i32> %2681 to <16 x i16>
  %2683 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %2682, i32 0, i32 0)
  %2684 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2683, i32 6, i32 1)
  %2685 = add <16 x i32> %25, %2684
  %2686 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2685, i32 0)
  %2687 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2686), !noalias !15
  %2688 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2687, i32 0)
  %2689 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2686), !noalias !15
  %2690 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2688, <8 x i32> %2689, i32 1)
  %2691 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2685, i32 1)
  %2692 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2691), !noalias !15
  %2693 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2692, i32 0)
  %2694 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2691), !noalias !15
  %2695 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2693, <8 x i32> %2694, i32 1)
  %2696 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2690, <16 x i32> %2695, i32 24)
  %2697 = bitcast <16 x i32> %2696 to <32 x bfloat>
  %2698 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2697, i32 0)
  %2699 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2683, i32 -2, i32 1)
  %2700 = and <16 x i32> %2699, %4
  %2701 = add <16 x i32> %44, %2700
  %2702 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2701, i32 0)
  %2703 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2702), !noalias !20
  %2704 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2703, i32 0)
  %2705 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2702), !noalias !20
  %2706 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2704, <8 x i32> %2705, i32 1)
  %2707 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2701, i32 1)
  %2708 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2707), !noalias !20
  %2709 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2708, i32 0)
  %2710 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2707), !noalias !20
  %2711 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2709, <8 x i32> %2710, i32 1)
  %2712 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2706, <16 x i32> %2711, i32 24)
  %2713 = bitcast <16 x i32> %2712 to <32 x bfloat>
  %2714 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2713, i32 0)
  %2715 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2698, i32 0)
  %2716 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2715, <16 x bfloat> %60, i32 1)
  %2717 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2714, i32 0)
  %2718 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2717, <16 x bfloat> %60, i32 1)
  %2719 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %2716, <32 x bfloat> %2718, i32 60)
  %2720 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %2719)
  %2721 = getelementptr inbounds bfloat, ptr %1, i20 944
  store <16 x bfloat> %2720, ptr %2721, align 32, !tbaa !12
  %2722 = getelementptr inbounds bfloat, ptr %0, i20 960
  %2723 = load <16 x bfloat>, ptr %2722, align 32, !tbaa !12
  %2724 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %2723, i32 8)
  %2725 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2724, <16 x i32> %15, i32 2)
  %2726 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2725, i32 0)
  %2727 = bitcast <8 x i32> %2726 to <16 x i16>
  %2728 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %2727, i32 0, i32 0)
  %2729 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2728, i32 6, i32 1)
  %2730 = add <16 x i32> %25, %2729
  %2731 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2730, i32 0)
  %2732 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2731), !noalias !15
  %2733 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2732, i32 0)
  %2734 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2731), !noalias !15
  %2735 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2733, <8 x i32> %2734, i32 1)
  %2736 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2730, i32 1)
  %2737 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2736), !noalias !15
  %2738 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2737, i32 0)
  %2739 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2736), !noalias !15
  %2740 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2738, <8 x i32> %2739, i32 1)
  %2741 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2735, <16 x i32> %2740, i32 24)
  %2742 = bitcast <16 x i32> %2741 to <32 x bfloat>
  %2743 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2742, i32 0)
  %2744 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2728, i32 -2, i32 1)
  %2745 = and <16 x i32> %2744, %4
  %2746 = add <16 x i32> %44, %2745
  %2747 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2746, i32 0)
  %2748 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2747), !noalias !20
  %2749 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2748, i32 0)
  %2750 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2747), !noalias !20
  %2751 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2749, <8 x i32> %2750, i32 1)
  %2752 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2746, i32 1)
  %2753 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2752), !noalias !20
  %2754 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2753, i32 0)
  %2755 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2752), !noalias !20
  %2756 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2754, <8 x i32> %2755, i32 1)
  %2757 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2751, <16 x i32> %2756, i32 24)
  %2758 = bitcast <16 x i32> %2757 to <32 x bfloat>
  %2759 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2758, i32 0)
  %2760 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2743, i32 0)
  %2761 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2760, <16 x bfloat> %60, i32 1)
  %2762 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2759, i32 0)
  %2763 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2762, <16 x bfloat> %60, i32 1)
  %2764 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %2761, <32 x bfloat> %2763, i32 60)
  %2765 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %2764)
  %2766 = getelementptr inbounds bfloat, ptr %1, i20 960
  store <16 x bfloat> %2765, ptr %2766, align 32, !tbaa !12
  %2767 = getelementptr inbounds bfloat, ptr %0, i20 976
  %2768 = load <16 x bfloat>, ptr %2767, align 32, !tbaa !12
  %2769 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %2768, i32 8)
  %2770 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2769, <16 x i32> %15, i32 2)
  %2771 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2770, i32 0)
  %2772 = bitcast <8 x i32> %2771 to <16 x i16>
  %2773 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %2772, i32 0, i32 0)
  %2774 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2773, i32 6, i32 1)
  %2775 = add <16 x i32> %25, %2774
  %2776 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2775, i32 0)
  %2777 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2776), !noalias !15
  %2778 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2777, i32 0)
  %2779 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2776), !noalias !15
  %2780 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2778, <8 x i32> %2779, i32 1)
  %2781 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2775, i32 1)
  %2782 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2781), !noalias !15
  %2783 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2782, i32 0)
  %2784 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2781), !noalias !15
  %2785 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2783, <8 x i32> %2784, i32 1)
  %2786 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2780, <16 x i32> %2785, i32 24)
  %2787 = bitcast <16 x i32> %2786 to <32 x bfloat>
  %2788 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2787, i32 0)
  %2789 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2773, i32 -2, i32 1)
  %2790 = and <16 x i32> %2789, %4
  %2791 = add <16 x i32> %44, %2790
  %2792 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2791, i32 0)
  %2793 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2792), !noalias !20
  %2794 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2793, i32 0)
  %2795 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2792), !noalias !20
  %2796 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2794, <8 x i32> %2795, i32 1)
  %2797 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2791, i32 1)
  %2798 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2797), !noalias !20
  %2799 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2798, i32 0)
  %2800 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2797), !noalias !20
  %2801 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2799, <8 x i32> %2800, i32 1)
  %2802 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2796, <16 x i32> %2801, i32 24)
  %2803 = bitcast <16 x i32> %2802 to <32 x bfloat>
  %2804 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2803, i32 0)
  %2805 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2788, i32 0)
  %2806 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2805, <16 x bfloat> %60, i32 1)
  %2807 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2804, i32 0)
  %2808 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2807, <16 x bfloat> %60, i32 1)
  %2809 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %2806, <32 x bfloat> %2808, i32 60)
  %2810 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %2809)
  %2811 = getelementptr inbounds bfloat, ptr %1, i20 976
  store <16 x bfloat> %2810, ptr %2811, align 32, !tbaa !12
  %2812 = getelementptr inbounds bfloat, ptr %0, i20 992
  %2813 = load <16 x bfloat>, ptr %2812, align 32, !tbaa !12
  %2814 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %2813, i32 8)
  %2815 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2814, <16 x i32> %15, i32 2)
  %2816 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2815, i32 0)
  %2817 = bitcast <8 x i32> %2816 to <16 x i16>
  %2818 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %2817, i32 0, i32 0)
  %2819 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2818, i32 6, i32 1)
  %2820 = add <16 x i32> %25, %2819
  %2821 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2820, i32 0)
  %2822 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2821), !noalias !15
  %2823 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2822, i32 0)
  %2824 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2821), !noalias !15
  %2825 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2823, <8 x i32> %2824, i32 1)
  %2826 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2820, i32 1)
  %2827 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2826), !noalias !15
  %2828 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2827, i32 0)
  %2829 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2826), !noalias !15
  %2830 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2828, <8 x i32> %2829, i32 1)
  %2831 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2825, <16 x i32> %2830, i32 24)
  %2832 = bitcast <16 x i32> %2831 to <32 x bfloat>
  %2833 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2832, i32 0)
  %2834 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2818, i32 -2, i32 1)
  %2835 = and <16 x i32> %2834, %4
  %2836 = add <16 x i32> %44, %2835
  %2837 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2836, i32 0)
  %2838 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2837), !noalias !20
  %2839 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2838, i32 0)
  %2840 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2837), !noalias !20
  %2841 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2839, <8 x i32> %2840, i32 1)
  %2842 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2836, i32 1)
  %2843 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2842), !noalias !20
  %2844 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2843, i32 0)
  %2845 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2842), !noalias !20
  %2846 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2844, <8 x i32> %2845, i32 1)
  %2847 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2841, <16 x i32> %2846, i32 24)
  %2848 = bitcast <16 x i32> %2847 to <32 x bfloat>
  %2849 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2848, i32 0)
  %2850 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2833, i32 0)
  %2851 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2850, <16 x bfloat> %60, i32 1)
  %2852 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2849, i32 0)
  %2853 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2852, <16 x bfloat> %60, i32 1)
  %2854 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %2851, <32 x bfloat> %2853, i32 60)
  %2855 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %2854)
  %2856 = getelementptr inbounds bfloat, ptr %1, i20 992
  store <16 x bfloat> %2855, ptr %2856, align 32, !tbaa !12
  %2857 = getelementptr inbounds bfloat, ptr %0, i20 1008
  %2858 = load <16 x bfloat>, ptr %2857, align 32, !tbaa !12
  %2859 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %2858, i32 8)
  %2860 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2859, <16 x i32> %15, i32 2)
  %2861 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2860, i32 0)
  %2862 = bitcast <8 x i32> %2861 to <16 x i16>
  %2863 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %2862, i32 0, i32 0)
  %2864 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2863, i32 6, i32 1)
  %2865 = add <16 x i32> %25, %2864
  %2866 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2865, i32 0)
  %2867 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2866), !noalias !15
  %2868 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2867, i32 0)
  %2869 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2866), !noalias !15
  %2870 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2868, <8 x i32> %2869, i32 1)
  %2871 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2865, i32 1)
  %2872 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2871), !noalias !15
  %2873 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2872, i32 0)
  %2874 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2871), !noalias !15
  %2875 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2873, <8 x i32> %2874, i32 1)
  %2876 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2870, <16 x i32> %2875, i32 24)
  %2877 = bitcast <16 x i32> %2876 to <32 x bfloat>
  %2878 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2877, i32 0)
  %2879 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2863, i32 -2, i32 1)
  %2880 = and <16 x i32> %2879, %4
  %2881 = add <16 x i32> %44, %2880
  %2882 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2881, i32 0)
  %2883 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2882), !noalias !20
  %2884 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2883, i32 0)
  %2885 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2882), !noalias !20
  %2886 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2884, <8 x i32> %2885, i32 1)
  %2887 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2881, i32 1)
  %2888 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2887), !noalias !20
  %2889 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2888, i32 0)
  %2890 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2887), !noalias !20
  %2891 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2889, <8 x i32> %2890, i32 1)
  %2892 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2886, <16 x i32> %2891, i32 24)
  %2893 = bitcast <16 x i32> %2892 to <32 x bfloat>
  %2894 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2893, i32 0)
  %2895 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2878, i32 0)
  %2896 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2895, <16 x bfloat> %60, i32 1)
  %2897 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2894, i32 0)
  %2898 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2897, <16 x bfloat> %60, i32 1)
  %2899 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %2896, <32 x bfloat> %2898, i32 60)
  %2900 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %2899)
  %2901 = getelementptr inbounds bfloat, ptr %1, i20 1008
  store <16 x bfloat> %2900, ptr %2901, align 32, !tbaa !12
  ret void
}

; Function Attrs: nofree nosync nounwind memory(none)
declare <8 x i64> @llvm.aie2.v16accfloat() #3

; Function Attrs: nofree nounwind memory(inaccessiblemem: read)
declare <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat>, i32) #4

; Function Attrs: nofree nosync nounwind memory(none)
declare <32 x bfloat> @llvm.aie2.v32bfloat16() #3

; Function Attrs: nofree nosync nounwind memory(none)
declare <32 x bfloat> @llvm.aie2.vbroadcast16.bf512(bfloat) #3

; Function Attrs: nofree nosync nounwind memory(none)
declare <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat>, i32) #3

; Function Attrs: nofree nosync nounwind memory(none)
declare <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat>, i32) #3

; Function Attrs: nofree nosync nounwind memory(none)
declare <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat>, <16 x bfloat>, i32) #3

; Function Attrs: nofree nounwind memory(inaccessiblemem: read)
declare <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat>, <32 x bfloat>, i32) #4

; Function Attrs: nofree nounwind memory(inaccessiblemem: read)
declare <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64>) #4

; Function Attrs: nofree nosync nounwind memory(none)
declare <16 x i32> @llvm.aie2.v16int32() #3

; Function Attrs: nofree nosync nounwind memory(none)
declare <16 x i32> @llvm.aie2.vbroadcast32.I512(i32) #3

; Function Attrs: nofree nosync nounwind memory(none)
declare <16 x bfloat> @llvm.aie2.v16bfloat16() #3

; Function Attrs: nofree nosync nounwind memory(none)
declare <16 x i32> @llvm.aie2.vshuffle(<16 x i32>, <16 x i32>, i32) #3

; Function Attrs: nofree nosync nounwind memory(none)
declare <32 x i16> @llvm.aie2.v32int16() #3

; Function Attrs: nofree nosync nounwind memory(none)
declare <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32>, i32) #3

; Function Attrs: nofree nosync nounwind memory(none)
declare <16 x i64> @llvm.aie2.v16acc64() #3

; Function Attrs: nofree nounwind memory(inaccessiblemem: read)
declare <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16>, i32, i32) #4

; Function Attrs: nofree nounwind memory(inaccessiblemem: read)
declare <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64>, i32, i32) #4

; Function Attrs: nofree nosync nounwind memory(none)
declare <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32>, <8 x i32>, i32) #3

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare <16 x i32> @llvm.aie2.vsel32(<16 x i32>, <16 x i32>, i32) #5

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(read)
declare <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32>) #6

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(read)
declare <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32>) #6

attributes #0 = { alwaysinline mustprogress nofree nounwind willreturn memory(read) "no-trapping-math"="true" "stack-protector-buffer-size"="8" }
attributes #1 = { alwaysinline mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: none, inaccessiblemem: none) "no-trapping-math"="true" "stack-protector-buffer-size"="8" }
attributes #2 = { mustprogress nofree nounwind memory(read, argmem: readwrite) "no-trapping-math"="true" "stack-protector-buffer-size"="8" }
attributes #3 = { nofree nosync nounwind memory(none) }
attributes #4 = { nofree nounwind memory(inaccessiblemem: read) }
attributes #5 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #6 = { mustprogress nocallback nofree nosync nounwind willreturn memory(read) }

!llvm.linker.options = !{}
!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 18.0.0git"}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZN3aie6detail15parallel_lookupItNS0_3lutILj4Eu6__bf16u6__bf16EELNS0_14lut_oor_policyE1EE5fetchINS_6vectorItLj16EEELj16EQaaaaleclsrTL0__4sizeELi32EleTL0_0_clsrS9_4sizeEleTL0_0_sr20native_vector_lengthIT0_EE5valueEENS7_Iu6__bf16XT0_EEERKT_: argument 0"}
!4 = distinct !{!4, !"_ZN3aie6detail15parallel_lookupItNS0_3lutILj4Eu6__bf16u6__bf16EELNS0_14lut_oor_policyE1EE5fetchINS_6vectorItLj16EEELj16EQaaaaleclsrTL0__4sizeELi32EleTL0_0_clsrS9_4sizeEleTL0_0_sr20native_vector_lengthIT0_EE5valueEENS7_Iu6__bf16XT0_EEERKT_"}
!5 = distinct !{!5, !6, !"_ZN3aie15parallel_lookupItNS_3lutILj4Eu6__bf16u6__bf16EELNS_6detail14lut_oor_policyE1EE5fetchITkNS_6VectorENS_6vectorItLj16EEELj16EEENS7_Iu6__bf16XT0_EEERKT_: argument 0"}
!6 = distinct !{!6, !"_ZN3aie15parallel_lookupItNS_3lutILj4Eu6__bf16u6__bf16EELNS_6detail14lut_oor_policyE1EE5fetchITkNS_6VectorENS_6vectorItLj16EEELj16EEENS7_Iu6__bf16XT0_EEERKT_"}
!7 = !{!8, !10}
!8 = distinct !{!8, !9, !"_ZN3aie6detail15parallel_lookupItNS0_3lutILj4Eu6__bf16u6__bf16EELNS0_14lut_oor_policyE1EE5fetchINS_6vectorItLj16EEELj16EQaaaaleclsrTL0__4sizeELi32EleTL0_0_clsrS9_4sizeEleTL0_0_sr20native_vector_lengthIT0_EE5valueEENS7_Iu6__bf16XT0_EEERKT_: argument 0"}
!9 = distinct !{!9, !"_ZN3aie6detail15parallel_lookupItNS0_3lutILj4Eu6__bf16u6__bf16EELNS0_14lut_oor_policyE1EE5fetchINS_6vectorItLj16EEELj16EQaaaaleclsrTL0__4sizeELi32EleTL0_0_clsrS9_4sizeEleTL0_0_sr20native_vector_lengthIT0_EE5valueEENS7_Iu6__bf16XT0_EEERKT_"}
!10 = distinct !{!10, !11, !"_ZN3aie15parallel_lookupItNS_3lutILj4Eu6__bf16u6__bf16EELNS_6detail14lut_oor_policyE1EE5fetchITkNS_6VectorENS_6vectorItLj16EEELj16EEENS7_Iu6__bf16XT0_EEERKT_: argument 0"}
!11 = distinct !{!11, !"_ZN3aie15parallel_lookupItNS_3lutILj4Eu6__bf16u6__bf16EELNS_6detail14lut_oor_policyE1EE5fetchITkNS_6VectorENS_6vectorItLj16EEELj16EEENS7_Iu6__bf16XT0_EEERKT_"}
!12 = !{!13, !13, i64 0}
!13 = !{!"omnipotent char", !14, i64 0}
!14 = !{!"Simple C++ TBAA"}
!15 = !{!16, !18}
!16 = distinct !{!16, !17, !"_ZN3aie6detail15parallel_lookupItNS0_3lutILj4Eu6__bf16u6__bf16EELNS0_14lut_oor_policyE1EE5fetchINS_6vectorItLj16EEELj16EQaaaaleclsrTL0__4sizeELi32EleTL0_0_clsrS9_4sizeEleTL0_0_sr20native_vector_lengthIT0_EE5valueEENS7_Iu6__bf16XT0_EEERKT_: argument 0"}
!17 = distinct !{!17, !"_ZN3aie6detail15parallel_lookupItNS0_3lutILj4Eu6__bf16u6__bf16EELNS0_14lut_oor_policyE1EE5fetchINS_6vectorItLj16EEELj16EQaaaaleclsrTL0__4sizeELi32EleTL0_0_clsrS9_4sizeEleTL0_0_sr20native_vector_lengthIT0_EE5valueEENS7_Iu6__bf16XT0_EEERKT_"}
!18 = distinct !{!18, !19, !"_ZN3aie15parallel_lookupItNS_3lutILj4Eu6__bf16u6__bf16EELNS_6detail14lut_oor_policyE1EE5fetchITkNS_6VectorENS_6vectorItLj16EEELj16EEENS7_Iu6__bf16XT0_EEERKT_: argument 0"}
!19 = distinct !{!19, !"_ZN3aie15parallel_lookupItNS_3lutILj4Eu6__bf16u6__bf16EELNS_6detail14lut_oor_policyE1EE5fetchITkNS_6VectorENS_6vectorItLj16EEELj16EEENS7_Iu6__bf16XT0_EEERKT_"}
!20 = !{!21, !23}
!21 = distinct !{!21, !22, !"_ZN3aie6detail15parallel_lookupItNS0_3lutILj4Eu6__bf16u6__bf16EELNS0_14lut_oor_policyE1EE5fetchINS_6vectorItLj16EEELj16EQaaaaleclsrTL0__4sizeELi32EleTL0_0_clsrS9_4sizeEleTL0_0_sr20native_vector_lengthIT0_EE5valueEENS7_Iu6__bf16XT0_EEERKT_: argument 0"}
!22 = distinct !{!22, !"_ZN3aie6detail15parallel_lookupItNS0_3lutILj4Eu6__bf16u6__bf16EELNS0_14lut_oor_policyE1EE5fetchINS_6vectorItLj16EEELj16EQaaaaleclsrTL0__4sizeELi32EleTL0_0_clsrS9_4sizeEleTL0_0_sr20native_vector_lengthIT0_EE5valueEENS7_Iu6__bf16XT0_EEERKT_"}
!23 = distinct !{!23, !24, !"_ZN3aie15parallel_lookupItNS_3lutILj4Eu6__bf16u6__bf16EELNS_6detail14lut_oor_policyE1EE5fetchITkNS_6VectorENS_6vectorItLj16EEELj16EEENS7_Iu6__bf16XT0_EEERKT_: argument 0"}
!24 = distinct !{!24, !"_ZN3aie15parallel_lookupItNS_3lutILj4Eu6__bf16u6__bf16EELNS_6detail14lut_oor_policyE1EE5fetchITkNS_6VectorENS_6vectorItLj16EEELj16EEENS7_Iu6__bf16XT0_EEERKT_"}
