; ModuleID = 'dut_inlined.cc'
source_filename = "dut_inlined.cc"
target datalayout = "e-m:e-p:20:32-i1:8:32-i8:8:32-i16:16:32-i32:32:32-f32:32:32-i64:32-f64:32-a:0:32-n32"
target triple = "aie2"

@exp_ilut_ab = external dso_local global [512 x i16], align 32
@exp_ilut_cd = external dso_local global [512 x i16], align 32
@exp_flut_ab = external dso_local global [512 x i16], align 32
@exp_flut_cd = external dso_local global [512 x i16], align 32

; Function Attrs: mustprogress nofree nounwind memory(read, argmem: readwrite)
define dso_local void @dut(ptr noalias nocapture readonly %0, ptr noalias nocapture writeonly %1) local_unnamed_addr #0 {
  %3 = tail call noundef <16 x i32> @llvm.aie2.v16int32()
  %4 = tail call noundef <16 x i32> @llvm.aie2.vbroadcast32.I512(i32 1023)
  %5 = tail call noundef <16 x i32> @llvm.aie2.vbroadcast32.I512(i32 0)
  %6 = tail call noundef <16 x bfloat> @llvm.aie2.v16bfloat16()
  %7 = tail call noundef <8 x i64> @llvm.aie2.v16accfloat()
  %8 = tail call noundef <16 x i16> @llvm.aie2.v16int16()
  %9 = load <16 x bfloat>, ptr %0, align 32, !tbaa !2
  %10 = getelementptr inbounds bfloat, ptr %0, i20 16
  %11 = load <16 x bfloat>, ptr %10, align 32, !tbaa !2
  %12 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %9, i32 8)
  %13 = tail call noundef <32 x i16> @llvm.aie2.v32int16()
  %14 = bitcast <32 x i16> %13 to <16 x i32>
  %15 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %12, <16 x i32> %14, i32 2)
  %16 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %15, i32 0)
  %17 = getelementptr inbounds bfloat, ptr %0, i20 32
  %18 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %11, i32 8)
  %19 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %18, <16 x i32> %14, i32 2)
  %20 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %19, i32 0)
  %21 = bitcast <8 x i32> %16 to <16 x i16>
  %22 = tail call noundef <32 x bfloat> @llvm.aie2.v32bfloat16()
  %23 = tail call noundef <16 x i64> @llvm.aie2.v16acc64()
  %24 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %21, i32 0, i32 0)
  %25 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %24, i32 6, i32 1)
  %26 = zext i20 ptrtoint (ptr @exp_ilut_ab to i20) to i32
  %27 = tail call noundef <16 x i32> @llvm.aie2.vbroadcast32.I512(i32 %26)
  %28 = zext i20 ptrtoint (ptr @exp_ilut_cd to i20) to i32
  %29 = tail call noundef <16 x i32> @llvm.aie2.vbroadcast32.I512(i32 %28)
  %30 = tail call noundef <16 x i32> @llvm.aie2.vsel32(<16 x i32> %27, <16 x i32> %29, i32 52428)
  %31 = add <16 x i32> %30, %25
  %32 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %31, i32 0)
  %33 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %32), !noalias !5
  %34 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %33, i32 0)
  %35 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %32), !noalias !5
  %36 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %34, <8 x i32> %35, i32 1)
  %37 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %31, i32 1)
  %38 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %37), !noalias !5
  %39 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %38, i32 0)
  %40 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %37), !noalias !5
  %41 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %39, <8 x i32> %40, i32 1)
  %42 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %36, <16 x i32> %41, i32 24)
  %43 = bitcast <16 x i32> %42 to <32 x bfloat>
  %44 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %43, i32 0)
  %45 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %24, i32 -2, i32 1)
  %46 = and <16 x i32> %45, %4
  %47 = zext i20 ptrtoint (ptr @exp_flut_ab to i20) to i32
  %48 = tail call noundef <16 x i32> @llvm.aie2.vbroadcast32.I512(i32 %47)
  %49 = zext i20 ptrtoint (ptr @exp_flut_cd to i20) to i32
  %50 = tail call noundef <16 x i32> @llvm.aie2.vbroadcast32.I512(i32 %49)
  %51 = tail call noundef <16 x i32> @llvm.aie2.vsel32(<16 x i32> %48, <16 x i32> %50, i32 52428)
  %52 = add <16 x i32> %51, %46
  %53 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %52, i32 0)
  %54 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %53), !noalias !10
  %55 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %54, i32 0)
  %56 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %53), !noalias !10
  %57 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %55, <8 x i32> %56, i32 1)
  %58 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %52, i32 1)
  %59 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %58), !noalias !10
  %60 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %59, i32 0)
  %61 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %58), !noalias !10
  %62 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %60, <8 x i32> %61, i32 1)
  %63 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %57, <16 x i32> %62, i32 24)
  %64 = bitcast <16 x i32> %63 to <32 x bfloat>
  %65 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %64, i32 0)
  %66 = getelementptr bfloat, ptr %0, i20 48
  %67 = load <16 x bfloat>, ptr %17, align 32, !tbaa !2
  %68 = bitcast <8 x i32> %20 to <16 x i16>
  %69 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %67, i32 8)
  %70 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %69, <16 x i32> %14, i32 2)
  %71 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %70, i32 0)
  %72 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %68, i32 0, i32 0)
  %73 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %72, i32 6, i32 1)
  %74 = add <16 x i32> %73, %30
  %75 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %74, i32 0)
  %76 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %75), !noalias !15
  %77 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %76, i32 0)
  %78 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %75), !noalias !15
  %79 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %77, <8 x i32> %78, i32 1)
  %80 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %74, i32 1)
  %81 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %80), !noalias !15
  %82 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %81, i32 0)
  %83 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %80), !noalias !15
  %84 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %82, <8 x i32> %83, i32 1)
  %85 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %79, <16 x i32> %84, i32 24)
  %86 = bitcast <16 x i32> %85 to <32 x bfloat>
  %87 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %86, i32 0)
  %88 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %72, i32 -2, i32 1)
  %89 = and <16 x i32> %88, %4
  %90 = add <16 x i32> %89, %51
  %91 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %90, i32 0)
  %92 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %91), !noalias !20
  %93 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %92, i32 0)
  %94 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %91), !noalias !20
  %95 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %93, <8 x i32> %94, i32 1)
  %96 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %90, i32 1)
  %97 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %96), !noalias !20
  %98 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %97, i32 0)
  %99 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %96), !noalias !20
  %100 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %98, <8 x i32> %99, i32 1)
  %101 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %95, <16 x i32> %100, i32 24)
  %102 = bitcast <16 x i32> %101 to <32 x bfloat>
  %103 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %102, i32 0)
  %104 = tail call noundef <32 x bfloat> @llvm.aie2.vbroadcast16.bf512(bfloat 0xR0000)
  %105 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %104, i32 0)
  %106 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %44, i32 0)
  %107 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %106, <16 x bfloat> %105, i32 1)
  %108 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %65, i32 0)
  %109 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %108, <16 x bfloat> %105, i32 1)
  %110 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %107, <32 x bfloat> %109, i32 60)
  %111 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %110)
  %112 = load <16 x bfloat>, ptr %66, align 32, !tbaa !2
  %113 = bitcast <8 x i32> %71 to <16 x i16>
  %114 = getelementptr bfloat, ptr %0, i20 64
  %115 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %112, i32 8)
  %116 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %115, <16 x i32> %14, i32 2)
  %117 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %116, i32 0)
  %118 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %113, i32 0, i32 0)
  %119 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %118, i32 6, i32 1)
  %120 = add <16 x i32> %119, %30
  %121 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %120, i32 0)
  %122 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %121), !noalias !15
  %123 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %122, i32 0)
  %124 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %121), !noalias !15
  %125 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %123, <8 x i32> %124, i32 1)
  %126 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %120, i32 1)
  %127 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %126), !noalias !15
  %128 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %127, i32 0)
  %129 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %126), !noalias !15
  %130 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %128, <8 x i32> %129, i32 1)
  %131 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %125, <16 x i32> %130, i32 24)
  %132 = bitcast <16 x i32> %131 to <32 x bfloat>
  %133 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %132, i32 0)
  %134 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %118, i32 -2, i32 1)
  %135 = and <16 x i32> %134, %4
  %136 = add <16 x i32> %135, %51
  %137 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %136, i32 0)
  %138 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %137), !noalias !20
  %139 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %138, i32 0)
  %140 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %137), !noalias !20
  %141 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %139, <8 x i32> %140, i32 1)
  %142 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %136, i32 1)
  %143 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %142), !noalias !20
  %144 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %143, i32 0)
  %145 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %142), !noalias !20
  %146 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %144, <8 x i32> %145, i32 1)
  %147 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %141, <16 x i32> %146, i32 24)
  %148 = bitcast <16 x i32> %147 to <32 x bfloat>
  %149 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %148, i32 0)
  %150 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %87, i32 0)
  %151 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %150, <16 x bfloat> %105, i32 1)
  %152 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %103, i32 0)
  %153 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %152, <16 x bfloat> %105, i32 1)
  %154 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %151, <32 x bfloat> %153, i32 60)
  %155 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %154)
  %156 = load <16 x bfloat>, ptr %114, align 32, !tbaa !2
  %157 = bitcast <8 x i32> %117 to <16 x i16>
  %158 = getelementptr bfloat, ptr %0, i20 80
  %159 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %156, i32 8)
  %160 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %159, <16 x i32> %14, i32 2)
  %161 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %160, i32 0)
  %162 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %157, i32 0, i32 0)
  %163 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %162, i32 6, i32 1)
  %164 = add <16 x i32> %163, %30
  %165 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %164, i32 0)
  %166 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %165), !noalias !15
  %167 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %166, i32 0)
  %168 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %165), !noalias !15
  %169 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %167, <8 x i32> %168, i32 1)
  %170 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %164, i32 1)
  %171 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %170), !noalias !15
  %172 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %171, i32 0)
  %173 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %170), !noalias !15
  %174 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %172, <8 x i32> %173, i32 1)
  %175 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %169, <16 x i32> %174, i32 24)
  %176 = bitcast <16 x i32> %175 to <32 x bfloat>
  %177 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %176, i32 0)
  %178 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %162, i32 -2, i32 1)
  %179 = and <16 x i32> %178, %4
  %180 = add <16 x i32> %179, %51
  %181 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %180, i32 0)
  %182 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %181), !noalias !20
  %183 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %182, i32 0)
  %184 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %181), !noalias !20
  %185 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %183, <8 x i32> %184, i32 1)
  %186 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %180, i32 1)
  %187 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %186), !noalias !20
  %188 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %187, i32 0)
  %189 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %186), !noalias !20
  %190 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %188, <8 x i32> %189, i32 1)
  %191 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %185, <16 x i32> %190, i32 24)
  %192 = bitcast <16 x i32> %191 to <32 x bfloat>
  %193 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %192, i32 0)
  %194 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %133, i32 0)
  %195 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %194, <16 x bfloat> %105, i32 1)
  %196 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %149, i32 0)
  %197 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %196, <16 x bfloat> %105, i32 1)
  %198 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %195, <32 x bfloat> %197, i32 60)
  %199 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %198)
  %200 = load <16 x bfloat>, ptr %158, align 32, !tbaa !2
  %201 = bitcast <8 x i32> %161 to <16 x i16>
  %202 = getelementptr bfloat, ptr %0, i20 96
  %203 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %200, i32 8)
  %204 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %203, <16 x i32> %14, i32 2)
  %205 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %204, i32 0)
  %206 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %201, i32 0, i32 0)
  %207 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %206, i32 6, i32 1)
  %208 = add <16 x i32> %207, %30
  %209 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %208, i32 0)
  %210 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %209), !noalias !15
  %211 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %210, i32 0)
  %212 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %209), !noalias !15
  %213 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %211, <8 x i32> %212, i32 1)
  %214 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %208, i32 1)
  %215 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %214), !noalias !15
  %216 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %215, i32 0)
  %217 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %214), !noalias !15
  %218 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %216, <8 x i32> %217, i32 1)
  %219 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %213, <16 x i32> %218, i32 24)
  %220 = bitcast <16 x i32> %219 to <32 x bfloat>
  %221 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %220, i32 0)
  %222 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %206, i32 -2, i32 1)
  %223 = and <16 x i32> %222, %4
  %224 = add <16 x i32> %223, %51
  %225 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %224, i32 0)
  %226 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %225), !noalias !20
  %227 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %226, i32 0)
  %228 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %225), !noalias !20
  %229 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %227, <8 x i32> %228, i32 1)
  %230 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %224, i32 1)
  %231 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %230), !noalias !20
  %232 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %231, i32 0)
  %233 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %230), !noalias !20
  %234 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %232, <8 x i32> %233, i32 1)
  %235 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %229, <16 x i32> %234, i32 24)
  %236 = bitcast <16 x i32> %235 to <32 x bfloat>
  %237 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %236, i32 0)
  %238 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %177, i32 0)
  %239 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %238, <16 x bfloat> %105, i32 1)
  %240 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %193, i32 0)
  %241 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %240, <16 x bfloat> %105, i32 1)
  %242 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %239, <32 x bfloat> %241, i32 60)
  %243 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %242)
  %244 = load <16 x bfloat>, ptr %202, align 32, !tbaa !2
  %245 = bitcast <8 x i32> %205 to <16 x i16>
  %246 = getelementptr bfloat, ptr %0, i20 112
  %247 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %244, i32 8)
  %248 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %247, <16 x i32> %14, i32 2)
  %249 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %248, i32 0)
  %250 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %245, i32 0, i32 0)
  %251 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %250, i32 6, i32 1)
  %252 = add <16 x i32> %251, %30
  %253 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %252, i32 0)
  %254 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %253), !noalias !15
  %255 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %254, i32 0)
  %256 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %253), !noalias !15
  %257 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %255, <8 x i32> %256, i32 1)
  %258 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %252, i32 1)
  %259 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %258), !noalias !15
  %260 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %259, i32 0)
  %261 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %258), !noalias !15
  %262 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %260, <8 x i32> %261, i32 1)
  %263 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %257, <16 x i32> %262, i32 24)
  %264 = bitcast <16 x i32> %263 to <32 x bfloat>
  %265 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %264, i32 0)
  %266 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %250, i32 -2, i32 1)
  %267 = and <16 x i32> %266, %4
  %268 = add <16 x i32> %267, %51
  %269 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %268, i32 0)
  %270 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %269), !noalias !20
  %271 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %270, i32 0)
  %272 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %269), !noalias !20
  %273 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %271, <8 x i32> %272, i32 1)
  %274 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %268, i32 1)
  %275 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %274), !noalias !20
  %276 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %275, i32 0)
  %277 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %274), !noalias !20
  %278 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %276, <8 x i32> %277, i32 1)
  %279 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %273, <16 x i32> %278, i32 24)
  %280 = bitcast <16 x i32> %279 to <32 x bfloat>
  %281 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %280, i32 0)
  %282 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %221, i32 0)
  %283 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %282, <16 x bfloat> %105, i32 1)
  %284 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %237, i32 0)
  %285 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %284, <16 x bfloat> %105, i32 1)
  %286 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %283, <32 x bfloat> %285, i32 60)
  %287 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %286)
  %288 = load <16 x bfloat>, ptr %246, align 32, !tbaa !2
  %289 = bitcast <8 x i32> %249 to <16 x i16>
  %290 = getelementptr bfloat, ptr %0, i20 128
  %291 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %288, i32 8)
  %292 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %291, <16 x i32> %14, i32 2)
  %293 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %292, i32 0)
  %294 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %289, i32 0, i32 0)
  %295 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %294, i32 6, i32 1)
  %296 = add <16 x i32> %295, %30
  %297 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %296, i32 0)
  %298 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %297), !noalias !15
  %299 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %298, i32 0)
  %300 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %297), !noalias !15
  %301 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %299, <8 x i32> %300, i32 1)
  %302 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %296, i32 1)
  %303 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %302), !noalias !15
  %304 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %303, i32 0)
  %305 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %302), !noalias !15
  %306 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %304, <8 x i32> %305, i32 1)
  %307 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %301, <16 x i32> %306, i32 24)
  %308 = bitcast <16 x i32> %307 to <32 x bfloat>
  %309 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %308, i32 0)
  %310 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %294, i32 -2, i32 1)
  %311 = and <16 x i32> %310, %4
  %312 = add <16 x i32> %311, %51
  %313 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %312, i32 0)
  %314 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %313), !noalias !20
  %315 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %314, i32 0)
  %316 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %313), !noalias !20
  %317 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %315, <8 x i32> %316, i32 1)
  %318 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %312, i32 1)
  %319 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %318), !noalias !20
  %320 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %319, i32 0)
  %321 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %318), !noalias !20
  %322 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %320, <8 x i32> %321, i32 1)
  %323 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %317, <16 x i32> %322, i32 24)
  %324 = bitcast <16 x i32> %323 to <32 x bfloat>
  %325 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %324, i32 0)
  %326 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %265, i32 0)
  %327 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %326, <16 x bfloat> %105, i32 1)
  %328 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %281, i32 0)
  %329 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %328, <16 x bfloat> %105, i32 1)
  %330 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %327, <32 x bfloat> %329, i32 60)
  %331 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %330)
  %332 = load <16 x bfloat>, ptr %290, align 32, !tbaa !2
  %333 = bitcast <8 x i32> %293 to <16 x i16>
  %334 = getelementptr bfloat, ptr %0, i20 144
  %335 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %332, i32 8)
  %336 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %335, <16 x i32> %14, i32 2)
  %337 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %336, i32 0)
  %338 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %333, i32 0, i32 0)
  %339 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %338, i32 6, i32 1)
  %340 = add <16 x i32> %339, %30
  %341 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %340, i32 0)
  %342 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %341), !noalias !15
  %343 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %342, i32 0)
  %344 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %341), !noalias !15
  %345 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %343, <8 x i32> %344, i32 1)
  %346 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %340, i32 1)
  %347 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %346), !noalias !15
  %348 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %347, i32 0)
  %349 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %346), !noalias !15
  %350 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %348, <8 x i32> %349, i32 1)
  %351 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %345, <16 x i32> %350, i32 24)
  %352 = bitcast <16 x i32> %351 to <32 x bfloat>
  %353 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %352, i32 0)
  %354 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %338, i32 -2, i32 1)
  %355 = and <16 x i32> %354, %4
  %356 = add <16 x i32> %355, %51
  %357 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %356, i32 0)
  %358 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %357), !noalias !20
  %359 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %358, i32 0)
  %360 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %357), !noalias !20
  %361 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %359, <8 x i32> %360, i32 1)
  %362 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %356, i32 1)
  %363 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %362), !noalias !20
  %364 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %363, i32 0)
  %365 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %362), !noalias !20
  %366 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %364, <8 x i32> %365, i32 1)
  %367 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %361, <16 x i32> %366, i32 24)
  %368 = bitcast <16 x i32> %367 to <32 x bfloat>
  %369 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %368, i32 0)
  %370 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %309, i32 0)
  %371 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %370, <16 x bfloat> %105, i32 1)
  %372 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %325, i32 0)
  %373 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %372, <16 x bfloat> %105, i32 1)
  %374 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %371, <32 x bfloat> %373, i32 60)
  %375 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %374)
  %376 = load <16 x bfloat>, ptr %334, align 32, !tbaa !2
  %377 = bitcast <8 x i32> %337 to <16 x i16>
  %378 = getelementptr bfloat, ptr %0, i20 160
  %379 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %376, i32 8)
  %380 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %379, <16 x i32> %14, i32 2)
  %381 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %380, i32 0)
  %382 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %377, i32 0, i32 0)
  %383 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %382, i32 6, i32 1)
  %384 = add <16 x i32> %383, %30
  %385 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %384, i32 0)
  %386 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %385), !noalias !15
  %387 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %386, i32 0)
  %388 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %385), !noalias !15
  %389 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %387, <8 x i32> %388, i32 1)
  %390 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %384, i32 1)
  %391 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %390), !noalias !15
  %392 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %391, i32 0)
  %393 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %390), !noalias !15
  %394 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %392, <8 x i32> %393, i32 1)
  %395 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %389, <16 x i32> %394, i32 24)
  %396 = bitcast <16 x i32> %395 to <32 x bfloat>
  %397 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %396, i32 0)
  %398 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %382, i32 -2, i32 1)
  %399 = and <16 x i32> %398, %4
  %400 = add <16 x i32> %399, %51
  %401 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %400, i32 0)
  %402 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %401), !noalias !20
  %403 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %402, i32 0)
  %404 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %401), !noalias !20
  %405 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %403, <8 x i32> %404, i32 1)
  %406 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %400, i32 1)
  %407 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %406), !noalias !20
  %408 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %407, i32 0)
  %409 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %406), !noalias !20
  %410 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %408, <8 x i32> %409, i32 1)
  %411 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %405, <16 x i32> %410, i32 24)
  %412 = bitcast <16 x i32> %411 to <32 x bfloat>
  %413 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %412, i32 0)
  %414 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %353, i32 0)
  %415 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %414, <16 x bfloat> %105, i32 1)
  %416 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %369, i32 0)
  %417 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %416, <16 x bfloat> %105, i32 1)
  %418 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %415, <32 x bfloat> %417, i32 60)
  %419 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %418)
  %420 = load <16 x bfloat>, ptr %378, align 32, !tbaa !2
  %421 = bitcast <8 x i32> %381 to <16 x i16>
  %422 = getelementptr bfloat, ptr %0, i20 176
  %423 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %420, i32 8)
  %424 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %423, <16 x i32> %14, i32 2)
  %425 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %424, i32 0)
  %426 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %421, i32 0, i32 0)
  %427 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %426, i32 6, i32 1)
  %428 = add <16 x i32> %427, %30
  %429 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %428, i32 0)
  %430 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %429), !noalias !15
  %431 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %430, i32 0)
  %432 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %429), !noalias !15
  %433 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %431, <8 x i32> %432, i32 1)
  %434 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %428, i32 1)
  %435 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %434), !noalias !15
  %436 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %435, i32 0)
  %437 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %434), !noalias !15
  %438 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %436, <8 x i32> %437, i32 1)
  %439 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %433, <16 x i32> %438, i32 24)
  %440 = bitcast <16 x i32> %439 to <32 x bfloat>
  %441 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %440, i32 0)
  %442 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %426, i32 -2, i32 1)
  %443 = and <16 x i32> %442, %4
  %444 = add <16 x i32> %443, %51
  %445 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %444, i32 0)
  %446 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %445), !noalias !20
  %447 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %446, i32 0)
  %448 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %445), !noalias !20
  %449 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %447, <8 x i32> %448, i32 1)
  %450 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %444, i32 1)
  %451 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %450), !noalias !20
  %452 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %451, i32 0)
  %453 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %450), !noalias !20
  %454 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %452, <8 x i32> %453, i32 1)
  %455 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %449, <16 x i32> %454, i32 24)
  %456 = bitcast <16 x i32> %455 to <32 x bfloat>
  %457 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %456, i32 0)
  %458 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %397, i32 0)
  %459 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %458, <16 x bfloat> %105, i32 1)
  %460 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %413, i32 0)
  %461 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %460, <16 x bfloat> %105, i32 1)
  %462 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %459, <32 x bfloat> %461, i32 60)
  %463 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %462)
  %464 = load <16 x bfloat>, ptr %422, align 32, !tbaa !2
  %465 = bitcast <8 x i32> %425 to <16 x i16>
  %466 = getelementptr bfloat, ptr %0, i20 192
  %467 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %464, i32 8)
  %468 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %467, <16 x i32> %14, i32 2)
  %469 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %468, i32 0)
  %470 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %465, i32 0, i32 0)
  %471 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %470, i32 6, i32 1)
  %472 = add <16 x i32> %471, %30
  %473 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %472, i32 0)
  %474 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %473), !noalias !15
  %475 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %474, i32 0)
  %476 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %473), !noalias !15
  %477 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %475, <8 x i32> %476, i32 1)
  %478 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %472, i32 1)
  %479 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %478), !noalias !15
  %480 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %479, i32 0)
  %481 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %478), !noalias !15
  %482 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %480, <8 x i32> %481, i32 1)
  %483 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %477, <16 x i32> %482, i32 24)
  %484 = bitcast <16 x i32> %483 to <32 x bfloat>
  %485 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %484, i32 0)
  %486 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %470, i32 -2, i32 1)
  %487 = and <16 x i32> %486, %4
  %488 = add <16 x i32> %487, %51
  %489 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %488, i32 0)
  %490 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %489), !noalias !20
  %491 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %490, i32 0)
  %492 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %489), !noalias !20
  %493 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %491, <8 x i32> %492, i32 1)
  %494 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %488, i32 1)
  %495 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %494), !noalias !20
  %496 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %495, i32 0)
  %497 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %494), !noalias !20
  %498 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %496, <8 x i32> %497, i32 1)
  %499 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %493, <16 x i32> %498, i32 24)
  %500 = bitcast <16 x i32> %499 to <32 x bfloat>
  %501 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %500, i32 0)
  %502 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %441, i32 0)
  %503 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %502, <16 x bfloat> %105, i32 1)
  %504 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %457, i32 0)
  %505 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %504, <16 x bfloat> %105, i32 1)
  %506 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %503, <32 x bfloat> %505, i32 60)
  %507 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %506)
  %508 = load <16 x bfloat>, ptr %466, align 32, !tbaa !2
  %509 = bitcast <8 x i32> %469 to <16 x i16>
  %510 = getelementptr bfloat, ptr %0, i20 208
  %511 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %508, i32 8)
  %512 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %511, <16 x i32> %14, i32 2)
  %513 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %512, i32 0)
  %514 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %509, i32 0, i32 0)
  %515 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %514, i32 6, i32 1)
  %516 = add <16 x i32> %515, %30
  %517 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %516, i32 0)
  %518 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %517), !noalias !15
  %519 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %518, i32 0)
  %520 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %517), !noalias !15
  %521 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %519, <8 x i32> %520, i32 1)
  %522 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %516, i32 1)
  %523 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %522), !noalias !15
  %524 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %523, i32 0)
  %525 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %522), !noalias !15
  %526 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %524, <8 x i32> %525, i32 1)
  %527 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %521, <16 x i32> %526, i32 24)
  %528 = bitcast <16 x i32> %527 to <32 x bfloat>
  %529 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %528, i32 0)
  %530 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %514, i32 -2, i32 1)
  %531 = and <16 x i32> %530, %4
  %532 = add <16 x i32> %531, %51
  %533 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %532, i32 0)
  %534 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %533), !noalias !20
  %535 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %534, i32 0)
  %536 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %533), !noalias !20
  %537 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %535, <8 x i32> %536, i32 1)
  %538 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %532, i32 1)
  %539 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %538), !noalias !20
  %540 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %539, i32 0)
  %541 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %538), !noalias !20
  %542 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %540, <8 x i32> %541, i32 1)
  %543 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %537, <16 x i32> %542, i32 24)
  %544 = bitcast <16 x i32> %543 to <32 x bfloat>
  %545 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %544, i32 0)
  %546 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %485, i32 0)
  %547 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %546, <16 x bfloat> %105, i32 1)
  %548 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %501, i32 0)
  %549 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %548, <16 x bfloat> %105, i32 1)
  %550 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %547, <32 x bfloat> %549, i32 60)
  %551 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %550)
  %552 = load <16 x bfloat>, ptr %510, align 32, !tbaa !2
  %553 = bitcast <8 x i32> %513 to <16 x i16>
  %554 = getelementptr bfloat, ptr %0, i20 224
  %555 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %552, i32 8)
  %556 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %555, <16 x i32> %14, i32 2)
  %557 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %556, i32 0)
  %558 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %553, i32 0, i32 0)
  %559 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %558, i32 6, i32 1)
  %560 = add <16 x i32> %559, %30
  %561 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %560, i32 0)
  %562 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %561), !noalias !15
  %563 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %562, i32 0)
  %564 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %561), !noalias !15
  %565 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %563, <8 x i32> %564, i32 1)
  %566 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %560, i32 1)
  %567 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %566), !noalias !15
  %568 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %567, i32 0)
  %569 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %566), !noalias !15
  %570 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %568, <8 x i32> %569, i32 1)
  %571 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %565, <16 x i32> %570, i32 24)
  %572 = bitcast <16 x i32> %571 to <32 x bfloat>
  %573 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %572, i32 0)
  %574 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %558, i32 -2, i32 1)
  %575 = and <16 x i32> %574, %4
  %576 = add <16 x i32> %575, %51
  %577 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %576, i32 0)
  %578 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %577), !noalias !20
  %579 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %578, i32 0)
  %580 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %577), !noalias !20
  %581 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %579, <8 x i32> %580, i32 1)
  %582 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %576, i32 1)
  %583 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %582), !noalias !20
  %584 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %583, i32 0)
  %585 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %582), !noalias !20
  %586 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %584, <8 x i32> %585, i32 1)
  %587 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %581, <16 x i32> %586, i32 24)
  %588 = bitcast <16 x i32> %587 to <32 x bfloat>
  %589 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %588, i32 0)
  %590 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %529, i32 0)
  %591 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %590, <16 x bfloat> %105, i32 1)
  %592 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %545, i32 0)
  %593 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %592, <16 x bfloat> %105, i32 1)
  %594 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %591, <32 x bfloat> %593, i32 60)
  %595 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %594)
  %596 = load <16 x bfloat>, ptr %554, align 32, !tbaa !2
  %597 = bitcast <8 x i32> %557 to <16 x i16>
  %598 = getelementptr bfloat, ptr %0, i20 240
  %599 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %596, i32 8)
  %600 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %599, <16 x i32> %14, i32 2)
  %601 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %600, i32 0)
  %602 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %597, i32 0, i32 0)
  %603 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %602, i32 6, i32 1)
  %604 = add <16 x i32> %603, %30
  %605 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %604, i32 0)
  %606 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %605), !noalias !15
  %607 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %606, i32 0)
  %608 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %605), !noalias !15
  %609 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %607, <8 x i32> %608, i32 1)
  %610 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %604, i32 1)
  %611 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %610), !noalias !15
  %612 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %611, i32 0)
  %613 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %610), !noalias !15
  %614 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %612, <8 x i32> %613, i32 1)
  %615 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %609, <16 x i32> %614, i32 24)
  %616 = bitcast <16 x i32> %615 to <32 x bfloat>
  %617 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %616, i32 0)
  %618 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %602, i32 -2, i32 1)
  %619 = and <16 x i32> %618, %4
  %620 = add <16 x i32> %619, %51
  %621 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %620, i32 0)
  %622 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %621), !noalias !20
  %623 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %622, i32 0)
  %624 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %621), !noalias !20
  %625 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %623, <8 x i32> %624, i32 1)
  %626 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %620, i32 1)
  %627 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %626), !noalias !20
  %628 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %627, i32 0)
  %629 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %626), !noalias !20
  %630 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %628, <8 x i32> %629, i32 1)
  %631 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %625, <16 x i32> %630, i32 24)
  %632 = bitcast <16 x i32> %631 to <32 x bfloat>
  %633 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %632, i32 0)
  %634 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %573, i32 0)
  %635 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %634, <16 x bfloat> %105, i32 1)
  %636 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %589, i32 0)
  %637 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %636, <16 x bfloat> %105, i32 1)
  %638 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %635, <32 x bfloat> %637, i32 60)
  %639 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %638)
  %640 = load <16 x bfloat>, ptr %598, align 32, !tbaa !2
  %641 = bitcast <8 x i32> %601 to <16 x i16>
  %642 = getelementptr bfloat, ptr %0, i20 256
  %643 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %640, i32 8)
  %644 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %643, <16 x i32> %14, i32 2)
  %645 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %644, i32 0)
  %646 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %641, i32 0, i32 0)
  %647 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %646, i32 6, i32 1)
  %648 = add <16 x i32> %647, %30
  %649 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %648, i32 0)
  %650 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %649), !noalias !15
  %651 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %650, i32 0)
  %652 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %649), !noalias !15
  %653 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %651, <8 x i32> %652, i32 1)
  %654 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %648, i32 1)
  %655 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %654), !noalias !15
  %656 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %655, i32 0)
  %657 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %654), !noalias !15
  %658 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %656, <8 x i32> %657, i32 1)
  %659 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %653, <16 x i32> %658, i32 24)
  %660 = bitcast <16 x i32> %659 to <32 x bfloat>
  %661 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %660, i32 0)
  %662 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %646, i32 -2, i32 1)
  %663 = and <16 x i32> %662, %4
  %664 = add <16 x i32> %663, %51
  %665 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %664, i32 0)
  %666 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %665), !noalias !20
  %667 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %666, i32 0)
  %668 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %665), !noalias !20
  %669 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %667, <8 x i32> %668, i32 1)
  %670 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %664, i32 1)
  %671 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %670), !noalias !20
  %672 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %671, i32 0)
  %673 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %670), !noalias !20
  %674 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %672, <8 x i32> %673, i32 1)
  %675 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %669, <16 x i32> %674, i32 24)
  %676 = bitcast <16 x i32> %675 to <32 x bfloat>
  %677 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %676, i32 0)
  %678 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %617, i32 0)
  %679 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %678, <16 x bfloat> %105, i32 1)
  %680 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %633, i32 0)
  %681 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %680, <16 x bfloat> %105, i32 1)
  %682 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %679, <32 x bfloat> %681, i32 60)
  %683 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %682)
  %684 = load <16 x bfloat>, ptr %642, align 32, !tbaa !2
  %685 = bitcast <8 x i32> %645 to <16 x i16>
  %686 = getelementptr bfloat, ptr %0, i20 272
  %687 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %684, i32 8)
  %688 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %687, <16 x i32> %14, i32 2)
  %689 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %688, i32 0)
  %690 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %685, i32 0, i32 0)
  %691 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %690, i32 6, i32 1)
  %692 = add <16 x i32> %691, %30
  %693 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %692, i32 0)
  %694 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %693), !noalias !15
  %695 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %694, i32 0)
  %696 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %693), !noalias !15
  %697 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %695, <8 x i32> %696, i32 1)
  %698 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %692, i32 1)
  %699 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %698), !noalias !15
  %700 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %699, i32 0)
  %701 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %698), !noalias !15
  %702 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %700, <8 x i32> %701, i32 1)
  %703 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %697, <16 x i32> %702, i32 24)
  %704 = bitcast <16 x i32> %703 to <32 x bfloat>
  %705 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %704, i32 0)
  %706 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %690, i32 -2, i32 1)
  %707 = and <16 x i32> %706, %4
  %708 = add <16 x i32> %707, %51
  %709 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %708, i32 0)
  %710 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %709), !noalias !20
  %711 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %710, i32 0)
  %712 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %709), !noalias !20
  %713 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %711, <8 x i32> %712, i32 1)
  %714 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %708, i32 1)
  %715 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %714), !noalias !20
  %716 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %715, i32 0)
  %717 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %714), !noalias !20
  %718 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %716, <8 x i32> %717, i32 1)
  %719 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %713, <16 x i32> %718, i32 24)
  %720 = bitcast <16 x i32> %719 to <32 x bfloat>
  %721 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %720, i32 0)
  %722 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %661, i32 0)
  %723 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %722, <16 x bfloat> %105, i32 1)
  %724 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %677, i32 0)
  %725 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %724, <16 x bfloat> %105, i32 1)
  %726 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %723, <32 x bfloat> %725, i32 60)
  %727 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %726)
  %728 = load <16 x bfloat>, ptr %686, align 32, !tbaa !2
  %729 = bitcast <8 x i32> %689 to <16 x i16>
  %730 = getelementptr bfloat, ptr %0, i20 288
  %731 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %728, i32 8)
  %732 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %731, <16 x i32> %14, i32 2)
  %733 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %732, i32 0)
  %734 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %729, i32 0, i32 0)
  %735 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %734, i32 6, i32 1)
  %736 = add <16 x i32> %735, %30
  %737 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %736, i32 0)
  %738 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %737), !noalias !15
  %739 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %738, i32 0)
  %740 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %737), !noalias !15
  %741 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %739, <8 x i32> %740, i32 1)
  %742 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %736, i32 1)
  %743 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %742), !noalias !15
  %744 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %743, i32 0)
  %745 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %742), !noalias !15
  %746 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %744, <8 x i32> %745, i32 1)
  %747 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %741, <16 x i32> %746, i32 24)
  %748 = bitcast <16 x i32> %747 to <32 x bfloat>
  %749 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %748, i32 0)
  %750 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %734, i32 -2, i32 1)
  %751 = and <16 x i32> %750, %4
  %752 = add <16 x i32> %751, %51
  %753 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %752, i32 0)
  %754 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %753), !noalias !20
  %755 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %754, i32 0)
  %756 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %753), !noalias !20
  %757 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %755, <8 x i32> %756, i32 1)
  %758 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %752, i32 1)
  %759 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %758), !noalias !20
  %760 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %759, i32 0)
  %761 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %758), !noalias !20
  %762 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %760, <8 x i32> %761, i32 1)
  %763 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %757, <16 x i32> %762, i32 24)
  %764 = bitcast <16 x i32> %763 to <32 x bfloat>
  %765 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %764, i32 0)
  %766 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %705, i32 0)
  %767 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %766, <16 x bfloat> %105, i32 1)
  %768 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %721, i32 0)
  %769 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %768, <16 x bfloat> %105, i32 1)
  %770 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %767, <32 x bfloat> %769, i32 60)
  %771 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %770)
  %772 = load <16 x bfloat>, ptr %730, align 32, !tbaa !2
  %773 = bitcast <8 x i32> %733 to <16 x i16>
  %774 = getelementptr bfloat, ptr %0, i20 304
  %775 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %772, i32 8)
  %776 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %775, <16 x i32> %14, i32 2)
  %777 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %776, i32 0)
  %778 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %773, i32 0, i32 0)
  %779 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %778, i32 6, i32 1)
  %780 = add <16 x i32> %779, %30
  %781 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %780, i32 0)
  %782 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %781), !noalias !15
  %783 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %782, i32 0)
  %784 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %781), !noalias !15
  %785 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %783, <8 x i32> %784, i32 1)
  %786 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %780, i32 1)
  %787 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %786), !noalias !15
  %788 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %787, i32 0)
  %789 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %786), !noalias !15
  %790 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %788, <8 x i32> %789, i32 1)
  %791 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %785, <16 x i32> %790, i32 24)
  %792 = bitcast <16 x i32> %791 to <32 x bfloat>
  %793 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %792, i32 0)
  %794 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %778, i32 -2, i32 1)
  %795 = and <16 x i32> %794, %4
  %796 = add <16 x i32> %795, %51
  %797 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %796, i32 0)
  %798 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %797), !noalias !20
  %799 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %798, i32 0)
  %800 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %797), !noalias !20
  %801 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %799, <8 x i32> %800, i32 1)
  %802 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %796, i32 1)
  %803 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %802), !noalias !20
  %804 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %803, i32 0)
  %805 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %802), !noalias !20
  %806 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %804, <8 x i32> %805, i32 1)
  %807 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %801, <16 x i32> %806, i32 24)
  %808 = bitcast <16 x i32> %807 to <32 x bfloat>
  %809 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %808, i32 0)
  %810 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %749, i32 0)
  %811 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %810, <16 x bfloat> %105, i32 1)
  %812 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %765, i32 0)
  %813 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %812, <16 x bfloat> %105, i32 1)
  %814 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %811, <32 x bfloat> %813, i32 60)
  %815 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %814)
  %816 = load <16 x bfloat>, ptr %774, align 32, !tbaa !2
  %817 = bitcast <8 x i32> %777 to <16 x i16>
  %818 = getelementptr bfloat, ptr %0, i20 320
  %819 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %816, i32 8)
  %820 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %819, <16 x i32> %14, i32 2)
  %821 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %820, i32 0)
  %822 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %817, i32 0, i32 0)
  %823 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %822, i32 6, i32 1)
  %824 = add <16 x i32> %823, %30
  %825 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %824, i32 0)
  %826 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %825), !noalias !15
  %827 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %826, i32 0)
  %828 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %825), !noalias !15
  %829 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %827, <8 x i32> %828, i32 1)
  %830 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %824, i32 1)
  %831 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %830), !noalias !15
  %832 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %831, i32 0)
  %833 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %830), !noalias !15
  %834 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %832, <8 x i32> %833, i32 1)
  %835 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %829, <16 x i32> %834, i32 24)
  %836 = bitcast <16 x i32> %835 to <32 x bfloat>
  %837 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %836, i32 0)
  %838 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %822, i32 -2, i32 1)
  %839 = and <16 x i32> %838, %4
  %840 = add <16 x i32> %839, %51
  %841 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %840, i32 0)
  %842 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %841), !noalias !20
  %843 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %842, i32 0)
  %844 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %841), !noalias !20
  %845 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %843, <8 x i32> %844, i32 1)
  %846 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %840, i32 1)
  %847 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %846), !noalias !20
  %848 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %847, i32 0)
  %849 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %846), !noalias !20
  %850 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %848, <8 x i32> %849, i32 1)
  %851 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %845, <16 x i32> %850, i32 24)
  %852 = bitcast <16 x i32> %851 to <32 x bfloat>
  %853 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %852, i32 0)
  %854 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %793, i32 0)
  %855 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %854, <16 x bfloat> %105, i32 1)
  %856 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %809, i32 0)
  %857 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %856, <16 x bfloat> %105, i32 1)
  %858 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %855, <32 x bfloat> %857, i32 60)
  %859 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %858)
  %860 = load <16 x bfloat>, ptr %818, align 32, !tbaa !2
  %861 = bitcast <8 x i32> %821 to <16 x i16>
  %862 = getelementptr bfloat, ptr %0, i20 336
  %863 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %860, i32 8)
  %864 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %863, <16 x i32> %14, i32 2)
  %865 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %864, i32 0)
  %866 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %861, i32 0, i32 0)
  %867 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %866, i32 6, i32 1)
  %868 = add <16 x i32> %867, %30
  %869 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %868, i32 0)
  %870 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %869), !noalias !15
  %871 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %870, i32 0)
  %872 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %869), !noalias !15
  %873 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %871, <8 x i32> %872, i32 1)
  %874 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %868, i32 1)
  %875 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %874), !noalias !15
  %876 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %875, i32 0)
  %877 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %874), !noalias !15
  %878 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %876, <8 x i32> %877, i32 1)
  %879 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %873, <16 x i32> %878, i32 24)
  %880 = bitcast <16 x i32> %879 to <32 x bfloat>
  %881 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %880, i32 0)
  %882 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %866, i32 -2, i32 1)
  %883 = and <16 x i32> %882, %4
  %884 = add <16 x i32> %883, %51
  %885 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %884, i32 0)
  %886 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %885), !noalias !20
  %887 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %886, i32 0)
  %888 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %885), !noalias !20
  %889 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %887, <8 x i32> %888, i32 1)
  %890 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %884, i32 1)
  %891 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %890), !noalias !20
  %892 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %891, i32 0)
  %893 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %890), !noalias !20
  %894 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %892, <8 x i32> %893, i32 1)
  %895 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %889, <16 x i32> %894, i32 24)
  %896 = bitcast <16 x i32> %895 to <32 x bfloat>
  %897 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %896, i32 0)
  %898 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %837, i32 0)
  %899 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %898, <16 x bfloat> %105, i32 1)
  %900 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %853, i32 0)
  %901 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %900, <16 x bfloat> %105, i32 1)
  %902 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %899, <32 x bfloat> %901, i32 60)
  %903 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %902)
  %904 = load <16 x bfloat>, ptr %862, align 32, !tbaa !2
  %905 = bitcast <8 x i32> %865 to <16 x i16>
  %906 = getelementptr bfloat, ptr %0, i20 352
  %907 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %904, i32 8)
  %908 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %907, <16 x i32> %14, i32 2)
  %909 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %908, i32 0)
  %910 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %905, i32 0, i32 0)
  %911 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %910, i32 6, i32 1)
  %912 = add <16 x i32> %911, %30
  %913 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %912, i32 0)
  %914 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %913), !noalias !15
  %915 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %914, i32 0)
  %916 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %913), !noalias !15
  %917 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %915, <8 x i32> %916, i32 1)
  %918 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %912, i32 1)
  %919 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %918), !noalias !15
  %920 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %919, i32 0)
  %921 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %918), !noalias !15
  %922 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %920, <8 x i32> %921, i32 1)
  %923 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %917, <16 x i32> %922, i32 24)
  %924 = bitcast <16 x i32> %923 to <32 x bfloat>
  %925 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %924, i32 0)
  %926 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %910, i32 -2, i32 1)
  %927 = and <16 x i32> %926, %4
  %928 = add <16 x i32> %927, %51
  %929 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %928, i32 0)
  %930 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %929), !noalias !20
  %931 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %930, i32 0)
  %932 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %929), !noalias !20
  %933 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %931, <8 x i32> %932, i32 1)
  %934 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %928, i32 1)
  %935 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %934), !noalias !20
  %936 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %935, i32 0)
  %937 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %934), !noalias !20
  %938 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %936, <8 x i32> %937, i32 1)
  %939 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %933, <16 x i32> %938, i32 24)
  %940 = bitcast <16 x i32> %939 to <32 x bfloat>
  %941 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %940, i32 0)
  %942 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %881, i32 0)
  %943 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %942, <16 x bfloat> %105, i32 1)
  %944 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %897, i32 0)
  %945 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %944, <16 x bfloat> %105, i32 1)
  %946 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %943, <32 x bfloat> %945, i32 60)
  %947 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %946)
  %948 = load <16 x bfloat>, ptr %906, align 32, !tbaa !2
  %949 = bitcast <8 x i32> %909 to <16 x i16>
  %950 = getelementptr bfloat, ptr %0, i20 368
  %951 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %948, i32 8)
  %952 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %951, <16 x i32> %14, i32 2)
  %953 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %952, i32 0)
  %954 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %949, i32 0, i32 0)
  %955 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %954, i32 6, i32 1)
  %956 = add <16 x i32> %955, %30
  %957 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %956, i32 0)
  %958 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %957), !noalias !15
  %959 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %958, i32 0)
  %960 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %957), !noalias !15
  %961 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %959, <8 x i32> %960, i32 1)
  %962 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %956, i32 1)
  %963 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %962), !noalias !15
  %964 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %963, i32 0)
  %965 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %962), !noalias !15
  %966 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %964, <8 x i32> %965, i32 1)
  %967 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %961, <16 x i32> %966, i32 24)
  %968 = bitcast <16 x i32> %967 to <32 x bfloat>
  %969 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %968, i32 0)
  %970 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %954, i32 -2, i32 1)
  %971 = and <16 x i32> %970, %4
  %972 = add <16 x i32> %971, %51
  %973 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %972, i32 0)
  %974 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %973), !noalias !20
  %975 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %974, i32 0)
  %976 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %973), !noalias !20
  %977 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %975, <8 x i32> %976, i32 1)
  %978 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %972, i32 1)
  %979 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %978), !noalias !20
  %980 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %979, i32 0)
  %981 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %978), !noalias !20
  %982 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %980, <8 x i32> %981, i32 1)
  %983 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %977, <16 x i32> %982, i32 24)
  %984 = bitcast <16 x i32> %983 to <32 x bfloat>
  %985 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %984, i32 0)
  %986 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %925, i32 0)
  %987 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %986, <16 x bfloat> %105, i32 1)
  %988 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %941, i32 0)
  %989 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %988, <16 x bfloat> %105, i32 1)
  %990 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %987, <32 x bfloat> %989, i32 60)
  %991 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %990)
  %992 = load <16 x bfloat>, ptr %950, align 32, !tbaa !2
  %993 = bitcast <8 x i32> %953 to <16 x i16>
  %994 = getelementptr bfloat, ptr %0, i20 384
  %995 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %992, i32 8)
  %996 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %995, <16 x i32> %14, i32 2)
  %997 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %996, i32 0)
  %998 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %993, i32 0, i32 0)
  %999 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %998, i32 6, i32 1)
  %1000 = add <16 x i32> %999, %30
  %1001 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1000, i32 0)
  %1002 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1001), !noalias !15
  %1003 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1002, i32 0)
  %1004 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1001), !noalias !15
  %1005 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1003, <8 x i32> %1004, i32 1)
  %1006 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1000, i32 1)
  %1007 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1006), !noalias !15
  %1008 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1007, i32 0)
  %1009 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1006), !noalias !15
  %1010 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1008, <8 x i32> %1009, i32 1)
  %1011 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1005, <16 x i32> %1010, i32 24)
  %1012 = bitcast <16 x i32> %1011 to <32 x bfloat>
  %1013 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1012, i32 0)
  %1014 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %998, i32 -2, i32 1)
  %1015 = and <16 x i32> %1014, %4
  %1016 = add <16 x i32> %1015, %51
  %1017 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1016, i32 0)
  %1018 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1017), !noalias !20
  %1019 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1018, i32 0)
  %1020 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1017), !noalias !20
  %1021 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1019, <8 x i32> %1020, i32 1)
  %1022 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1016, i32 1)
  %1023 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1022), !noalias !20
  %1024 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1023, i32 0)
  %1025 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1022), !noalias !20
  %1026 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1024, <8 x i32> %1025, i32 1)
  %1027 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1021, <16 x i32> %1026, i32 24)
  %1028 = bitcast <16 x i32> %1027 to <32 x bfloat>
  %1029 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1028, i32 0)
  %1030 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %969, i32 0)
  %1031 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1030, <16 x bfloat> %105, i32 1)
  %1032 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %985, i32 0)
  %1033 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1032, <16 x bfloat> %105, i32 1)
  %1034 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1031, <32 x bfloat> %1033, i32 60)
  %1035 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %1034)
  %1036 = load <16 x bfloat>, ptr %994, align 32, !tbaa !2
  %1037 = bitcast <8 x i32> %997 to <16 x i16>
  %1038 = getelementptr bfloat, ptr %0, i20 400
  %1039 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %1036, i32 8)
  %1040 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1039, <16 x i32> %14, i32 2)
  %1041 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1040, i32 0)
  %1042 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %1037, i32 0, i32 0)
  %1043 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1042, i32 6, i32 1)
  %1044 = add <16 x i32> %1043, %30
  %1045 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1044, i32 0)
  %1046 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1045), !noalias !15
  %1047 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1046, i32 0)
  %1048 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1045), !noalias !15
  %1049 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1047, <8 x i32> %1048, i32 1)
  %1050 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1044, i32 1)
  %1051 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1050), !noalias !15
  %1052 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1051, i32 0)
  %1053 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1050), !noalias !15
  %1054 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1052, <8 x i32> %1053, i32 1)
  %1055 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1049, <16 x i32> %1054, i32 24)
  %1056 = bitcast <16 x i32> %1055 to <32 x bfloat>
  %1057 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1056, i32 0)
  %1058 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1042, i32 -2, i32 1)
  %1059 = and <16 x i32> %1058, %4
  %1060 = add <16 x i32> %1059, %51
  %1061 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1060, i32 0)
  %1062 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1061), !noalias !20
  %1063 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1062, i32 0)
  %1064 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1061), !noalias !20
  %1065 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1063, <8 x i32> %1064, i32 1)
  %1066 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1060, i32 1)
  %1067 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1066), !noalias !20
  %1068 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1067, i32 0)
  %1069 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1066), !noalias !20
  %1070 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1068, <8 x i32> %1069, i32 1)
  %1071 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1065, <16 x i32> %1070, i32 24)
  %1072 = bitcast <16 x i32> %1071 to <32 x bfloat>
  %1073 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1072, i32 0)
  %1074 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1013, i32 0)
  %1075 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1074, <16 x bfloat> %105, i32 1)
  %1076 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1029, i32 0)
  %1077 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1076, <16 x bfloat> %105, i32 1)
  %1078 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1075, <32 x bfloat> %1077, i32 60)
  %1079 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %1078)
  %1080 = load <16 x bfloat>, ptr %1038, align 32, !tbaa !2
  %1081 = bitcast <8 x i32> %1041 to <16 x i16>
  %1082 = getelementptr bfloat, ptr %0, i20 416
  %1083 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %1080, i32 8)
  %1084 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1083, <16 x i32> %14, i32 2)
  %1085 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1084, i32 0)
  %1086 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %1081, i32 0, i32 0)
  %1087 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1086, i32 6, i32 1)
  %1088 = add <16 x i32> %1087, %30
  %1089 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1088, i32 0)
  %1090 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1089), !noalias !15
  %1091 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1090, i32 0)
  %1092 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1089), !noalias !15
  %1093 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1091, <8 x i32> %1092, i32 1)
  %1094 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1088, i32 1)
  %1095 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1094), !noalias !15
  %1096 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1095, i32 0)
  %1097 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1094), !noalias !15
  %1098 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1096, <8 x i32> %1097, i32 1)
  %1099 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1093, <16 x i32> %1098, i32 24)
  %1100 = bitcast <16 x i32> %1099 to <32 x bfloat>
  %1101 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1100, i32 0)
  %1102 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1086, i32 -2, i32 1)
  %1103 = and <16 x i32> %1102, %4
  %1104 = add <16 x i32> %1103, %51
  %1105 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1104, i32 0)
  %1106 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1105), !noalias !20
  %1107 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1106, i32 0)
  %1108 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1105), !noalias !20
  %1109 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1107, <8 x i32> %1108, i32 1)
  %1110 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1104, i32 1)
  %1111 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1110), !noalias !20
  %1112 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1111, i32 0)
  %1113 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1110), !noalias !20
  %1114 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1112, <8 x i32> %1113, i32 1)
  %1115 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1109, <16 x i32> %1114, i32 24)
  %1116 = bitcast <16 x i32> %1115 to <32 x bfloat>
  %1117 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1116, i32 0)
  %1118 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1057, i32 0)
  %1119 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1118, <16 x bfloat> %105, i32 1)
  %1120 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1073, i32 0)
  %1121 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1120, <16 x bfloat> %105, i32 1)
  %1122 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1119, <32 x bfloat> %1121, i32 60)
  %1123 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %1122)
  %1124 = load <16 x bfloat>, ptr %1082, align 32, !tbaa !2
  %1125 = bitcast <8 x i32> %1085 to <16 x i16>
  %1126 = getelementptr bfloat, ptr %0, i20 432
  %1127 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %1124, i32 8)
  %1128 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1127, <16 x i32> %14, i32 2)
  %1129 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1128, i32 0)
  %1130 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %1125, i32 0, i32 0)
  %1131 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1130, i32 6, i32 1)
  %1132 = add <16 x i32> %1131, %30
  %1133 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1132, i32 0)
  %1134 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1133), !noalias !15
  %1135 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1134, i32 0)
  %1136 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1133), !noalias !15
  %1137 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1135, <8 x i32> %1136, i32 1)
  %1138 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1132, i32 1)
  %1139 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1138), !noalias !15
  %1140 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1139, i32 0)
  %1141 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1138), !noalias !15
  %1142 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1140, <8 x i32> %1141, i32 1)
  %1143 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1137, <16 x i32> %1142, i32 24)
  %1144 = bitcast <16 x i32> %1143 to <32 x bfloat>
  %1145 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1144, i32 0)
  %1146 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1130, i32 -2, i32 1)
  %1147 = and <16 x i32> %1146, %4
  %1148 = add <16 x i32> %1147, %51
  %1149 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1148, i32 0)
  %1150 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1149), !noalias !20
  %1151 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1150, i32 0)
  %1152 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1149), !noalias !20
  %1153 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1151, <8 x i32> %1152, i32 1)
  %1154 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1148, i32 1)
  %1155 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1154), !noalias !20
  %1156 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1155, i32 0)
  %1157 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1154), !noalias !20
  %1158 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1156, <8 x i32> %1157, i32 1)
  %1159 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1153, <16 x i32> %1158, i32 24)
  %1160 = bitcast <16 x i32> %1159 to <32 x bfloat>
  %1161 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1160, i32 0)
  %1162 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1101, i32 0)
  %1163 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1162, <16 x bfloat> %105, i32 1)
  %1164 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1117, i32 0)
  %1165 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1164, <16 x bfloat> %105, i32 1)
  %1166 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1163, <32 x bfloat> %1165, i32 60)
  %1167 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %1166)
  %1168 = load <16 x bfloat>, ptr %1126, align 32, !tbaa !2
  %1169 = bitcast <8 x i32> %1129 to <16 x i16>
  %1170 = getelementptr bfloat, ptr %0, i20 448
  %1171 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %1168, i32 8)
  %1172 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1171, <16 x i32> %14, i32 2)
  %1173 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1172, i32 0)
  %1174 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %1169, i32 0, i32 0)
  %1175 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1174, i32 6, i32 1)
  %1176 = add <16 x i32> %1175, %30
  %1177 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1176, i32 0)
  %1178 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1177), !noalias !15
  %1179 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1178, i32 0)
  %1180 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1177), !noalias !15
  %1181 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1179, <8 x i32> %1180, i32 1)
  %1182 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1176, i32 1)
  %1183 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1182), !noalias !15
  %1184 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1183, i32 0)
  %1185 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1182), !noalias !15
  %1186 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1184, <8 x i32> %1185, i32 1)
  %1187 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1181, <16 x i32> %1186, i32 24)
  %1188 = bitcast <16 x i32> %1187 to <32 x bfloat>
  %1189 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1188, i32 0)
  %1190 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1174, i32 -2, i32 1)
  %1191 = and <16 x i32> %1190, %4
  %1192 = add <16 x i32> %1191, %51
  %1193 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1192, i32 0)
  %1194 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1193), !noalias !20
  %1195 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1194, i32 0)
  %1196 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1193), !noalias !20
  %1197 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1195, <8 x i32> %1196, i32 1)
  %1198 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1192, i32 1)
  %1199 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1198), !noalias !20
  %1200 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1199, i32 0)
  %1201 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1198), !noalias !20
  %1202 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1200, <8 x i32> %1201, i32 1)
  %1203 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1197, <16 x i32> %1202, i32 24)
  %1204 = bitcast <16 x i32> %1203 to <32 x bfloat>
  %1205 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1204, i32 0)
  %1206 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1145, i32 0)
  %1207 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1206, <16 x bfloat> %105, i32 1)
  %1208 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1161, i32 0)
  %1209 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1208, <16 x bfloat> %105, i32 1)
  %1210 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1207, <32 x bfloat> %1209, i32 60)
  %1211 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %1210)
  %1212 = load <16 x bfloat>, ptr %1170, align 32, !tbaa !2
  %1213 = bitcast <8 x i32> %1173 to <16 x i16>
  %1214 = getelementptr bfloat, ptr %0, i20 464
  %1215 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %1212, i32 8)
  %1216 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1215, <16 x i32> %14, i32 2)
  %1217 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1216, i32 0)
  %1218 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %1213, i32 0, i32 0)
  %1219 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1218, i32 6, i32 1)
  %1220 = add <16 x i32> %1219, %30
  %1221 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1220, i32 0)
  %1222 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1221), !noalias !15
  %1223 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1222, i32 0)
  %1224 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1221), !noalias !15
  %1225 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1223, <8 x i32> %1224, i32 1)
  %1226 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1220, i32 1)
  %1227 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1226), !noalias !15
  %1228 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1227, i32 0)
  %1229 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1226), !noalias !15
  %1230 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1228, <8 x i32> %1229, i32 1)
  %1231 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1225, <16 x i32> %1230, i32 24)
  %1232 = bitcast <16 x i32> %1231 to <32 x bfloat>
  %1233 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1232, i32 0)
  %1234 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1218, i32 -2, i32 1)
  %1235 = and <16 x i32> %1234, %4
  %1236 = add <16 x i32> %1235, %51
  %1237 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1236, i32 0)
  %1238 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1237), !noalias !20
  %1239 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1238, i32 0)
  %1240 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1237), !noalias !20
  %1241 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1239, <8 x i32> %1240, i32 1)
  %1242 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1236, i32 1)
  %1243 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1242), !noalias !20
  %1244 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1243, i32 0)
  %1245 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1242), !noalias !20
  %1246 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1244, <8 x i32> %1245, i32 1)
  %1247 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1241, <16 x i32> %1246, i32 24)
  %1248 = bitcast <16 x i32> %1247 to <32 x bfloat>
  %1249 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1248, i32 0)
  %1250 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1189, i32 0)
  %1251 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1250, <16 x bfloat> %105, i32 1)
  %1252 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1205, i32 0)
  %1253 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1252, <16 x bfloat> %105, i32 1)
  %1254 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1251, <32 x bfloat> %1253, i32 60)
  %1255 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %1254)
  %1256 = load <16 x bfloat>, ptr %1214, align 32, !tbaa !2
  %1257 = bitcast <8 x i32> %1217 to <16 x i16>
  %1258 = getelementptr bfloat, ptr %0, i20 480
  %1259 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %1256, i32 8)
  %1260 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1259, <16 x i32> %14, i32 2)
  %1261 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1260, i32 0)
  %1262 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %1257, i32 0, i32 0)
  %1263 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1262, i32 6, i32 1)
  %1264 = add <16 x i32> %1263, %30
  %1265 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1264, i32 0)
  %1266 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1265), !noalias !15
  %1267 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1266, i32 0)
  %1268 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1265), !noalias !15
  %1269 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1267, <8 x i32> %1268, i32 1)
  %1270 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1264, i32 1)
  %1271 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1270), !noalias !15
  %1272 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1271, i32 0)
  %1273 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1270), !noalias !15
  %1274 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1272, <8 x i32> %1273, i32 1)
  %1275 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1269, <16 x i32> %1274, i32 24)
  %1276 = bitcast <16 x i32> %1275 to <32 x bfloat>
  %1277 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1276, i32 0)
  %1278 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1262, i32 -2, i32 1)
  %1279 = and <16 x i32> %1278, %4
  %1280 = add <16 x i32> %1279, %51
  %1281 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1280, i32 0)
  %1282 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1281), !noalias !20
  %1283 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1282, i32 0)
  %1284 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1281), !noalias !20
  %1285 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1283, <8 x i32> %1284, i32 1)
  %1286 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1280, i32 1)
  %1287 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1286), !noalias !20
  %1288 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1287, i32 0)
  %1289 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1286), !noalias !20
  %1290 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1288, <8 x i32> %1289, i32 1)
  %1291 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1285, <16 x i32> %1290, i32 24)
  %1292 = bitcast <16 x i32> %1291 to <32 x bfloat>
  %1293 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1292, i32 0)
  %1294 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1233, i32 0)
  %1295 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1294, <16 x bfloat> %105, i32 1)
  %1296 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1249, i32 0)
  %1297 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1296, <16 x bfloat> %105, i32 1)
  %1298 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1295, <32 x bfloat> %1297, i32 60)
  %1299 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %1298)
  %1300 = load <16 x bfloat>, ptr %1258, align 32, !tbaa !2
  %1301 = bitcast <8 x i32> %1261 to <16 x i16>
  %1302 = getelementptr bfloat, ptr %0, i20 496
  %1303 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %1300, i32 8)
  %1304 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1303, <16 x i32> %14, i32 2)
  %1305 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1304, i32 0)
  %1306 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %1301, i32 0, i32 0)
  %1307 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1306, i32 6, i32 1)
  %1308 = add <16 x i32> %1307, %30
  %1309 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1308, i32 0)
  %1310 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1309), !noalias !15
  %1311 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1310, i32 0)
  %1312 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1309), !noalias !15
  %1313 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1311, <8 x i32> %1312, i32 1)
  %1314 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1308, i32 1)
  %1315 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1314), !noalias !15
  %1316 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1315, i32 0)
  %1317 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1314), !noalias !15
  %1318 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1316, <8 x i32> %1317, i32 1)
  %1319 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1313, <16 x i32> %1318, i32 24)
  %1320 = bitcast <16 x i32> %1319 to <32 x bfloat>
  %1321 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1320, i32 0)
  %1322 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1306, i32 -2, i32 1)
  %1323 = and <16 x i32> %1322, %4
  %1324 = add <16 x i32> %1323, %51
  %1325 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1324, i32 0)
  %1326 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1325), !noalias !20
  %1327 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1326, i32 0)
  %1328 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1325), !noalias !20
  %1329 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1327, <8 x i32> %1328, i32 1)
  %1330 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1324, i32 1)
  %1331 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1330), !noalias !20
  %1332 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1331, i32 0)
  %1333 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1330), !noalias !20
  %1334 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1332, <8 x i32> %1333, i32 1)
  %1335 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1329, <16 x i32> %1334, i32 24)
  %1336 = bitcast <16 x i32> %1335 to <32 x bfloat>
  %1337 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1336, i32 0)
  %1338 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1277, i32 0)
  %1339 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1338, <16 x bfloat> %105, i32 1)
  %1340 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1293, i32 0)
  %1341 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1340, <16 x bfloat> %105, i32 1)
  %1342 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1339, <32 x bfloat> %1341, i32 60)
  %1343 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %1342)
  %1344 = load <16 x bfloat>, ptr %1302, align 32, !tbaa !2
  %1345 = bitcast <8 x i32> %1305 to <16 x i16>
  %1346 = getelementptr bfloat, ptr %0, i20 512
  %1347 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %1344, i32 8)
  %1348 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1347, <16 x i32> %14, i32 2)
  %1349 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1348, i32 0)
  %1350 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %1345, i32 0, i32 0)
  %1351 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1350, i32 6, i32 1)
  %1352 = add <16 x i32> %1351, %30
  %1353 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1352, i32 0)
  %1354 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1353), !noalias !15
  %1355 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1354, i32 0)
  %1356 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1353), !noalias !15
  %1357 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1355, <8 x i32> %1356, i32 1)
  %1358 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1352, i32 1)
  %1359 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1358), !noalias !15
  %1360 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1359, i32 0)
  %1361 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1358), !noalias !15
  %1362 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1360, <8 x i32> %1361, i32 1)
  %1363 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1357, <16 x i32> %1362, i32 24)
  %1364 = bitcast <16 x i32> %1363 to <32 x bfloat>
  %1365 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1364, i32 0)
  %1366 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1350, i32 -2, i32 1)
  %1367 = and <16 x i32> %1366, %4
  %1368 = add <16 x i32> %1367, %51
  %1369 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1368, i32 0)
  %1370 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1369), !noalias !20
  %1371 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1370, i32 0)
  %1372 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1369), !noalias !20
  %1373 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1371, <8 x i32> %1372, i32 1)
  %1374 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1368, i32 1)
  %1375 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1374), !noalias !20
  %1376 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1375, i32 0)
  %1377 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1374), !noalias !20
  %1378 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1376, <8 x i32> %1377, i32 1)
  %1379 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1373, <16 x i32> %1378, i32 24)
  %1380 = bitcast <16 x i32> %1379 to <32 x bfloat>
  %1381 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1380, i32 0)
  %1382 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1321, i32 0)
  %1383 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1382, <16 x bfloat> %105, i32 1)
  %1384 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1337, i32 0)
  %1385 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1384, <16 x bfloat> %105, i32 1)
  %1386 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1383, <32 x bfloat> %1385, i32 60)
  %1387 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %1386)
  %1388 = load <16 x bfloat>, ptr %1346, align 32, !tbaa !2
  %1389 = bitcast <8 x i32> %1349 to <16 x i16>
  %1390 = getelementptr bfloat, ptr %0, i20 528
  %1391 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %1388, i32 8)
  %1392 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1391, <16 x i32> %14, i32 2)
  %1393 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1392, i32 0)
  %1394 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %1389, i32 0, i32 0)
  %1395 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1394, i32 6, i32 1)
  %1396 = add <16 x i32> %1395, %30
  %1397 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1396, i32 0)
  %1398 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1397), !noalias !15
  %1399 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1398, i32 0)
  %1400 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1397), !noalias !15
  %1401 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1399, <8 x i32> %1400, i32 1)
  %1402 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1396, i32 1)
  %1403 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1402), !noalias !15
  %1404 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1403, i32 0)
  %1405 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1402), !noalias !15
  %1406 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1404, <8 x i32> %1405, i32 1)
  %1407 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1401, <16 x i32> %1406, i32 24)
  %1408 = bitcast <16 x i32> %1407 to <32 x bfloat>
  %1409 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1408, i32 0)
  %1410 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1394, i32 -2, i32 1)
  %1411 = and <16 x i32> %1410, %4
  %1412 = add <16 x i32> %1411, %51
  %1413 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1412, i32 0)
  %1414 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1413), !noalias !20
  %1415 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1414, i32 0)
  %1416 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1413), !noalias !20
  %1417 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1415, <8 x i32> %1416, i32 1)
  %1418 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1412, i32 1)
  %1419 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1418), !noalias !20
  %1420 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1419, i32 0)
  %1421 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1418), !noalias !20
  %1422 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1420, <8 x i32> %1421, i32 1)
  %1423 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1417, <16 x i32> %1422, i32 24)
  %1424 = bitcast <16 x i32> %1423 to <32 x bfloat>
  %1425 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1424, i32 0)
  %1426 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1365, i32 0)
  %1427 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1426, <16 x bfloat> %105, i32 1)
  %1428 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1381, i32 0)
  %1429 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1428, <16 x bfloat> %105, i32 1)
  %1430 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1427, <32 x bfloat> %1429, i32 60)
  %1431 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %1430)
  %1432 = load <16 x bfloat>, ptr %1390, align 32, !tbaa !2
  %1433 = bitcast <8 x i32> %1393 to <16 x i16>
  %1434 = getelementptr bfloat, ptr %0, i20 544
  %1435 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %1432, i32 8)
  %1436 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1435, <16 x i32> %14, i32 2)
  %1437 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1436, i32 0)
  %1438 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %1433, i32 0, i32 0)
  %1439 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1438, i32 6, i32 1)
  %1440 = add <16 x i32> %1439, %30
  %1441 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1440, i32 0)
  %1442 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1441), !noalias !15
  %1443 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1442, i32 0)
  %1444 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1441), !noalias !15
  %1445 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1443, <8 x i32> %1444, i32 1)
  %1446 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1440, i32 1)
  %1447 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1446), !noalias !15
  %1448 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1447, i32 0)
  %1449 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1446), !noalias !15
  %1450 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1448, <8 x i32> %1449, i32 1)
  %1451 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1445, <16 x i32> %1450, i32 24)
  %1452 = bitcast <16 x i32> %1451 to <32 x bfloat>
  %1453 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1452, i32 0)
  %1454 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1438, i32 -2, i32 1)
  %1455 = and <16 x i32> %1454, %4
  %1456 = add <16 x i32> %1455, %51
  %1457 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1456, i32 0)
  %1458 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1457), !noalias !20
  %1459 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1458, i32 0)
  %1460 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1457), !noalias !20
  %1461 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1459, <8 x i32> %1460, i32 1)
  %1462 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1456, i32 1)
  %1463 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1462), !noalias !20
  %1464 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1463, i32 0)
  %1465 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1462), !noalias !20
  %1466 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1464, <8 x i32> %1465, i32 1)
  %1467 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1461, <16 x i32> %1466, i32 24)
  %1468 = bitcast <16 x i32> %1467 to <32 x bfloat>
  %1469 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1468, i32 0)
  %1470 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1409, i32 0)
  %1471 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1470, <16 x bfloat> %105, i32 1)
  %1472 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1425, i32 0)
  %1473 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1472, <16 x bfloat> %105, i32 1)
  %1474 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1471, <32 x bfloat> %1473, i32 60)
  %1475 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %1474)
  %1476 = load <16 x bfloat>, ptr %1434, align 32, !tbaa !2
  %1477 = bitcast <8 x i32> %1437 to <16 x i16>
  %1478 = getelementptr bfloat, ptr %0, i20 560
  %1479 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %1476, i32 8)
  %1480 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1479, <16 x i32> %14, i32 2)
  %1481 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1480, i32 0)
  %1482 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %1477, i32 0, i32 0)
  %1483 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1482, i32 6, i32 1)
  %1484 = add <16 x i32> %1483, %30
  %1485 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1484, i32 0)
  %1486 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1485), !noalias !15
  %1487 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1486, i32 0)
  %1488 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1485), !noalias !15
  %1489 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1487, <8 x i32> %1488, i32 1)
  %1490 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1484, i32 1)
  %1491 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1490), !noalias !15
  %1492 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1491, i32 0)
  %1493 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1490), !noalias !15
  %1494 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1492, <8 x i32> %1493, i32 1)
  %1495 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1489, <16 x i32> %1494, i32 24)
  %1496 = bitcast <16 x i32> %1495 to <32 x bfloat>
  %1497 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1496, i32 0)
  %1498 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1482, i32 -2, i32 1)
  %1499 = and <16 x i32> %1498, %4
  %1500 = add <16 x i32> %1499, %51
  %1501 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1500, i32 0)
  %1502 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1501), !noalias !20
  %1503 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1502, i32 0)
  %1504 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1501), !noalias !20
  %1505 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1503, <8 x i32> %1504, i32 1)
  %1506 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1500, i32 1)
  %1507 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1506), !noalias !20
  %1508 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1507, i32 0)
  %1509 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1506), !noalias !20
  %1510 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1508, <8 x i32> %1509, i32 1)
  %1511 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1505, <16 x i32> %1510, i32 24)
  %1512 = bitcast <16 x i32> %1511 to <32 x bfloat>
  %1513 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1512, i32 0)
  %1514 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1453, i32 0)
  %1515 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1514, <16 x bfloat> %105, i32 1)
  %1516 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1469, i32 0)
  %1517 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1516, <16 x bfloat> %105, i32 1)
  %1518 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1515, <32 x bfloat> %1517, i32 60)
  %1519 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %1518)
  %1520 = load <16 x bfloat>, ptr %1478, align 32, !tbaa !2
  %1521 = bitcast <8 x i32> %1481 to <16 x i16>
  %1522 = getelementptr bfloat, ptr %0, i20 576
  %1523 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %1520, i32 8)
  %1524 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1523, <16 x i32> %14, i32 2)
  %1525 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1524, i32 0)
  %1526 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %1521, i32 0, i32 0)
  %1527 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1526, i32 6, i32 1)
  %1528 = add <16 x i32> %1527, %30
  %1529 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1528, i32 0)
  %1530 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1529), !noalias !15
  %1531 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1530, i32 0)
  %1532 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1529), !noalias !15
  %1533 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1531, <8 x i32> %1532, i32 1)
  %1534 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1528, i32 1)
  %1535 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1534), !noalias !15
  %1536 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1535, i32 0)
  %1537 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1534), !noalias !15
  %1538 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1536, <8 x i32> %1537, i32 1)
  %1539 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1533, <16 x i32> %1538, i32 24)
  %1540 = bitcast <16 x i32> %1539 to <32 x bfloat>
  %1541 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1540, i32 0)
  %1542 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1526, i32 -2, i32 1)
  %1543 = and <16 x i32> %1542, %4
  %1544 = add <16 x i32> %1543, %51
  %1545 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1544, i32 0)
  %1546 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1545), !noalias !20
  %1547 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1546, i32 0)
  %1548 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1545), !noalias !20
  %1549 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1547, <8 x i32> %1548, i32 1)
  %1550 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1544, i32 1)
  %1551 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1550), !noalias !20
  %1552 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1551, i32 0)
  %1553 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1550), !noalias !20
  %1554 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1552, <8 x i32> %1553, i32 1)
  %1555 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1549, <16 x i32> %1554, i32 24)
  %1556 = bitcast <16 x i32> %1555 to <32 x bfloat>
  %1557 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1556, i32 0)
  %1558 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1497, i32 0)
  %1559 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1558, <16 x bfloat> %105, i32 1)
  %1560 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1513, i32 0)
  %1561 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1560, <16 x bfloat> %105, i32 1)
  %1562 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1559, <32 x bfloat> %1561, i32 60)
  %1563 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %1562)
  %1564 = load <16 x bfloat>, ptr %1522, align 32, !tbaa !2
  %1565 = bitcast <8 x i32> %1525 to <16 x i16>
  %1566 = getelementptr bfloat, ptr %0, i20 592
  %1567 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %1564, i32 8)
  %1568 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1567, <16 x i32> %14, i32 2)
  %1569 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1568, i32 0)
  %1570 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %1565, i32 0, i32 0)
  %1571 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1570, i32 6, i32 1)
  %1572 = add <16 x i32> %1571, %30
  %1573 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1572, i32 0)
  %1574 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1573), !noalias !15
  %1575 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1574, i32 0)
  %1576 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1573), !noalias !15
  %1577 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1575, <8 x i32> %1576, i32 1)
  %1578 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1572, i32 1)
  %1579 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1578), !noalias !15
  %1580 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1579, i32 0)
  %1581 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1578), !noalias !15
  %1582 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1580, <8 x i32> %1581, i32 1)
  %1583 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1577, <16 x i32> %1582, i32 24)
  %1584 = bitcast <16 x i32> %1583 to <32 x bfloat>
  %1585 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1584, i32 0)
  %1586 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1570, i32 -2, i32 1)
  %1587 = and <16 x i32> %1586, %4
  %1588 = add <16 x i32> %1587, %51
  %1589 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1588, i32 0)
  %1590 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1589), !noalias !20
  %1591 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1590, i32 0)
  %1592 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1589), !noalias !20
  %1593 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1591, <8 x i32> %1592, i32 1)
  %1594 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1588, i32 1)
  %1595 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1594), !noalias !20
  %1596 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1595, i32 0)
  %1597 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1594), !noalias !20
  %1598 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1596, <8 x i32> %1597, i32 1)
  %1599 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1593, <16 x i32> %1598, i32 24)
  %1600 = bitcast <16 x i32> %1599 to <32 x bfloat>
  %1601 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1600, i32 0)
  %1602 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1541, i32 0)
  %1603 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1602, <16 x bfloat> %105, i32 1)
  %1604 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1557, i32 0)
  %1605 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1604, <16 x bfloat> %105, i32 1)
  %1606 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1603, <32 x bfloat> %1605, i32 60)
  %1607 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %1606)
  %1608 = load <16 x bfloat>, ptr %1566, align 32, !tbaa !2
  %1609 = bitcast <8 x i32> %1569 to <16 x i16>
  %1610 = getelementptr bfloat, ptr %0, i20 608
  %1611 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %1608, i32 8)
  %1612 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1611, <16 x i32> %14, i32 2)
  %1613 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1612, i32 0)
  %1614 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %1609, i32 0, i32 0)
  %1615 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1614, i32 6, i32 1)
  %1616 = add <16 x i32> %1615, %30
  %1617 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1616, i32 0)
  %1618 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1617), !noalias !15
  %1619 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1618, i32 0)
  %1620 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1617), !noalias !15
  %1621 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1619, <8 x i32> %1620, i32 1)
  %1622 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1616, i32 1)
  %1623 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1622), !noalias !15
  %1624 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1623, i32 0)
  %1625 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1622), !noalias !15
  %1626 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1624, <8 x i32> %1625, i32 1)
  %1627 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1621, <16 x i32> %1626, i32 24)
  %1628 = bitcast <16 x i32> %1627 to <32 x bfloat>
  %1629 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1628, i32 0)
  %1630 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1614, i32 -2, i32 1)
  %1631 = and <16 x i32> %1630, %4
  %1632 = add <16 x i32> %1631, %51
  %1633 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1632, i32 0)
  %1634 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1633), !noalias !20
  %1635 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1634, i32 0)
  %1636 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1633), !noalias !20
  %1637 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1635, <8 x i32> %1636, i32 1)
  %1638 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1632, i32 1)
  %1639 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1638), !noalias !20
  %1640 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1639, i32 0)
  %1641 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1638), !noalias !20
  %1642 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1640, <8 x i32> %1641, i32 1)
  %1643 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1637, <16 x i32> %1642, i32 24)
  %1644 = bitcast <16 x i32> %1643 to <32 x bfloat>
  %1645 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1644, i32 0)
  %1646 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1585, i32 0)
  %1647 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1646, <16 x bfloat> %105, i32 1)
  %1648 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1601, i32 0)
  %1649 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1648, <16 x bfloat> %105, i32 1)
  %1650 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1647, <32 x bfloat> %1649, i32 60)
  %1651 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %1650)
  %1652 = load <16 x bfloat>, ptr %1610, align 32, !tbaa !2
  %1653 = bitcast <8 x i32> %1613 to <16 x i16>
  %1654 = getelementptr bfloat, ptr %0, i20 624
  %1655 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %1652, i32 8)
  %1656 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1655, <16 x i32> %14, i32 2)
  %1657 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1656, i32 0)
  %1658 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %1653, i32 0, i32 0)
  %1659 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1658, i32 6, i32 1)
  %1660 = add <16 x i32> %1659, %30
  %1661 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1660, i32 0)
  %1662 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1661), !noalias !15
  %1663 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1662, i32 0)
  %1664 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1661), !noalias !15
  %1665 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1663, <8 x i32> %1664, i32 1)
  %1666 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1660, i32 1)
  %1667 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1666), !noalias !15
  %1668 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1667, i32 0)
  %1669 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1666), !noalias !15
  %1670 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1668, <8 x i32> %1669, i32 1)
  %1671 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1665, <16 x i32> %1670, i32 24)
  %1672 = bitcast <16 x i32> %1671 to <32 x bfloat>
  %1673 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1672, i32 0)
  %1674 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1658, i32 -2, i32 1)
  %1675 = and <16 x i32> %1674, %4
  %1676 = add <16 x i32> %1675, %51
  %1677 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1676, i32 0)
  %1678 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1677), !noalias !20
  %1679 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1678, i32 0)
  %1680 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1677), !noalias !20
  %1681 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1679, <8 x i32> %1680, i32 1)
  %1682 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1676, i32 1)
  %1683 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1682), !noalias !20
  %1684 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1683, i32 0)
  %1685 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1682), !noalias !20
  %1686 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1684, <8 x i32> %1685, i32 1)
  %1687 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1681, <16 x i32> %1686, i32 24)
  %1688 = bitcast <16 x i32> %1687 to <32 x bfloat>
  %1689 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1688, i32 0)
  %1690 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1629, i32 0)
  %1691 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1690, <16 x bfloat> %105, i32 1)
  %1692 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1645, i32 0)
  %1693 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1692, <16 x bfloat> %105, i32 1)
  %1694 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1691, <32 x bfloat> %1693, i32 60)
  %1695 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %1694)
  %1696 = load <16 x bfloat>, ptr %1654, align 32, !tbaa !2
  %1697 = bitcast <8 x i32> %1657 to <16 x i16>
  %1698 = getelementptr bfloat, ptr %0, i20 640
  %1699 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %1696, i32 8)
  %1700 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1699, <16 x i32> %14, i32 2)
  %1701 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1700, i32 0)
  %1702 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %1697, i32 0, i32 0)
  %1703 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1702, i32 6, i32 1)
  %1704 = add <16 x i32> %1703, %30
  %1705 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1704, i32 0)
  %1706 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1705), !noalias !15
  %1707 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1706, i32 0)
  %1708 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1705), !noalias !15
  %1709 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1707, <8 x i32> %1708, i32 1)
  %1710 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1704, i32 1)
  %1711 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1710), !noalias !15
  %1712 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1711, i32 0)
  %1713 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1710), !noalias !15
  %1714 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1712, <8 x i32> %1713, i32 1)
  %1715 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1709, <16 x i32> %1714, i32 24)
  %1716 = bitcast <16 x i32> %1715 to <32 x bfloat>
  %1717 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1716, i32 0)
  %1718 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1702, i32 -2, i32 1)
  %1719 = and <16 x i32> %1718, %4
  %1720 = add <16 x i32> %1719, %51
  %1721 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1720, i32 0)
  %1722 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1721), !noalias !20
  %1723 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1722, i32 0)
  %1724 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1721), !noalias !20
  %1725 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1723, <8 x i32> %1724, i32 1)
  %1726 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1720, i32 1)
  %1727 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1726), !noalias !20
  %1728 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1727, i32 0)
  %1729 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1726), !noalias !20
  %1730 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1728, <8 x i32> %1729, i32 1)
  %1731 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1725, <16 x i32> %1730, i32 24)
  %1732 = bitcast <16 x i32> %1731 to <32 x bfloat>
  %1733 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1732, i32 0)
  %1734 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1673, i32 0)
  %1735 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1734, <16 x bfloat> %105, i32 1)
  %1736 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1689, i32 0)
  %1737 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1736, <16 x bfloat> %105, i32 1)
  %1738 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1735, <32 x bfloat> %1737, i32 60)
  %1739 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %1738)
  %1740 = load <16 x bfloat>, ptr %1698, align 32, !tbaa !2
  %1741 = bitcast <8 x i32> %1701 to <16 x i16>
  %1742 = getelementptr bfloat, ptr %0, i20 656
  %1743 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %1740, i32 8)
  %1744 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1743, <16 x i32> %14, i32 2)
  %1745 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1744, i32 0)
  %1746 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %1741, i32 0, i32 0)
  %1747 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1746, i32 6, i32 1)
  %1748 = add <16 x i32> %1747, %30
  %1749 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1748, i32 0)
  %1750 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1749), !noalias !15
  %1751 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1750, i32 0)
  %1752 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1749), !noalias !15
  %1753 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1751, <8 x i32> %1752, i32 1)
  %1754 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1748, i32 1)
  %1755 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1754), !noalias !15
  %1756 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1755, i32 0)
  %1757 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1754), !noalias !15
  %1758 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1756, <8 x i32> %1757, i32 1)
  %1759 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1753, <16 x i32> %1758, i32 24)
  %1760 = bitcast <16 x i32> %1759 to <32 x bfloat>
  %1761 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1760, i32 0)
  %1762 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1746, i32 -2, i32 1)
  %1763 = and <16 x i32> %1762, %4
  %1764 = add <16 x i32> %1763, %51
  %1765 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1764, i32 0)
  %1766 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1765), !noalias !20
  %1767 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1766, i32 0)
  %1768 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1765), !noalias !20
  %1769 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1767, <8 x i32> %1768, i32 1)
  %1770 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1764, i32 1)
  %1771 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1770), !noalias !20
  %1772 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1771, i32 0)
  %1773 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1770), !noalias !20
  %1774 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1772, <8 x i32> %1773, i32 1)
  %1775 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1769, <16 x i32> %1774, i32 24)
  %1776 = bitcast <16 x i32> %1775 to <32 x bfloat>
  %1777 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1776, i32 0)
  %1778 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1717, i32 0)
  %1779 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1778, <16 x bfloat> %105, i32 1)
  %1780 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1733, i32 0)
  %1781 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1780, <16 x bfloat> %105, i32 1)
  %1782 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1779, <32 x bfloat> %1781, i32 60)
  %1783 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %1782)
  %1784 = load <16 x bfloat>, ptr %1742, align 32, !tbaa !2
  %1785 = bitcast <8 x i32> %1745 to <16 x i16>
  %1786 = getelementptr bfloat, ptr %0, i20 672
  %1787 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %1784, i32 8)
  %1788 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1787, <16 x i32> %14, i32 2)
  %1789 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1788, i32 0)
  %1790 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %1785, i32 0, i32 0)
  %1791 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1790, i32 6, i32 1)
  %1792 = add <16 x i32> %1791, %30
  %1793 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1792, i32 0)
  %1794 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1793), !noalias !15
  %1795 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1794, i32 0)
  %1796 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1793), !noalias !15
  %1797 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1795, <8 x i32> %1796, i32 1)
  %1798 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1792, i32 1)
  %1799 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1798), !noalias !15
  %1800 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1799, i32 0)
  %1801 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1798), !noalias !15
  %1802 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1800, <8 x i32> %1801, i32 1)
  %1803 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1797, <16 x i32> %1802, i32 24)
  %1804 = bitcast <16 x i32> %1803 to <32 x bfloat>
  %1805 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1804, i32 0)
  %1806 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1790, i32 -2, i32 1)
  %1807 = and <16 x i32> %1806, %4
  %1808 = add <16 x i32> %1807, %51
  %1809 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1808, i32 0)
  %1810 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1809), !noalias !20
  %1811 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1810, i32 0)
  %1812 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1809), !noalias !20
  %1813 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1811, <8 x i32> %1812, i32 1)
  %1814 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1808, i32 1)
  %1815 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1814), !noalias !20
  %1816 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1815, i32 0)
  %1817 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1814), !noalias !20
  %1818 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1816, <8 x i32> %1817, i32 1)
  %1819 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1813, <16 x i32> %1818, i32 24)
  %1820 = bitcast <16 x i32> %1819 to <32 x bfloat>
  %1821 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1820, i32 0)
  %1822 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1761, i32 0)
  %1823 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1822, <16 x bfloat> %105, i32 1)
  %1824 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1777, i32 0)
  %1825 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1824, <16 x bfloat> %105, i32 1)
  %1826 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1823, <32 x bfloat> %1825, i32 60)
  %1827 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %1826)
  %1828 = load <16 x bfloat>, ptr %1786, align 32, !tbaa !2
  %1829 = bitcast <8 x i32> %1789 to <16 x i16>
  %1830 = getelementptr bfloat, ptr %0, i20 688
  %1831 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %1828, i32 8)
  %1832 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1831, <16 x i32> %14, i32 2)
  %1833 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1832, i32 0)
  %1834 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %1829, i32 0, i32 0)
  %1835 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1834, i32 6, i32 1)
  %1836 = add <16 x i32> %1835, %30
  %1837 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1836, i32 0)
  %1838 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1837), !noalias !15
  %1839 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1838, i32 0)
  %1840 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1837), !noalias !15
  %1841 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1839, <8 x i32> %1840, i32 1)
  %1842 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1836, i32 1)
  %1843 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1842), !noalias !15
  %1844 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1843, i32 0)
  %1845 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1842), !noalias !15
  %1846 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1844, <8 x i32> %1845, i32 1)
  %1847 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1841, <16 x i32> %1846, i32 24)
  %1848 = bitcast <16 x i32> %1847 to <32 x bfloat>
  %1849 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1848, i32 0)
  %1850 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1834, i32 -2, i32 1)
  %1851 = and <16 x i32> %1850, %4
  %1852 = add <16 x i32> %1851, %51
  %1853 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1852, i32 0)
  %1854 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1853), !noalias !20
  %1855 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1854, i32 0)
  %1856 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1853), !noalias !20
  %1857 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1855, <8 x i32> %1856, i32 1)
  %1858 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1852, i32 1)
  %1859 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1858), !noalias !20
  %1860 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1859, i32 0)
  %1861 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1858), !noalias !20
  %1862 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1860, <8 x i32> %1861, i32 1)
  %1863 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1857, <16 x i32> %1862, i32 24)
  %1864 = bitcast <16 x i32> %1863 to <32 x bfloat>
  %1865 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1864, i32 0)
  %1866 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1805, i32 0)
  %1867 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1866, <16 x bfloat> %105, i32 1)
  %1868 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1821, i32 0)
  %1869 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1868, <16 x bfloat> %105, i32 1)
  %1870 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1867, <32 x bfloat> %1869, i32 60)
  %1871 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %1870)
  %1872 = load <16 x bfloat>, ptr %1830, align 32, !tbaa !2
  %1873 = bitcast <8 x i32> %1833 to <16 x i16>
  %1874 = getelementptr bfloat, ptr %0, i20 704
  %1875 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %1872, i32 8)
  %1876 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1875, <16 x i32> %14, i32 2)
  %1877 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1876, i32 0)
  %1878 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %1873, i32 0, i32 0)
  %1879 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1878, i32 6, i32 1)
  %1880 = add <16 x i32> %1879, %30
  %1881 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1880, i32 0)
  %1882 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1881), !noalias !15
  %1883 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1882, i32 0)
  %1884 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1881), !noalias !15
  %1885 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1883, <8 x i32> %1884, i32 1)
  %1886 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1880, i32 1)
  %1887 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1886), !noalias !15
  %1888 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1887, i32 0)
  %1889 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1886), !noalias !15
  %1890 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1888, <8 x i32> %1889, i32 1)
  %1891 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1885, <16 x i32> %1890, i32 24)
  %1892 = bitcast <16 x i32> %1891 to <32 x bfloat>
  %1893 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1892, i32 0)
  %1894 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1878, i32 -2, i32 1)
  %1895 = and <16 x i32> %1894, %4
  %1896 = add <16 x i32> %1895, %51
  %1897 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1896, i32 0)
  %1898 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1897), !noalias !20
  %1899 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1898, i32 0)
  %1900 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1897), !noalias !20
  %1901 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1899, <8 x i32> %1900, i32 1)
  %1902 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1896, i32 1)
  %1903 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1902), !noalias !20
  %1904 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1903, i32 0)
  %1905 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1902), !noalias !20
  %1906 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1904, <8 x i32> %1905, i32 1)
  %1907 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1901, <16 x i32> %1906, i32 24)
  %1908 = bitcast <16 x i32> %1907 to <32 x bfloat>
  %1909 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1908, i32 0)
  %1910 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1849, i32 0)
  %1911 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1910, <16 x bfloat> %105, i32 1)
  %1912 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1865, i32 0)
  %1913 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1912, <16 x bfloat> %105, i32 1)
  %1914 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1911, <32 x bfloat> %1913, i32 60)
  %1915 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %1914)
  %1916 = load <16 x bfloat>, ptr %1874, align 32, !tbaa !2
  %1917 = bitcast <8 x i32> %1877 to <16 x i16>
  %1918 = getelementptr bfloat, ptr %0, i20 720
  %1919 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %1916, i32 8)
  %1920 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1919, <16 x i32> %14, i32 2)
  %1921 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1920, i32 0)
  %1922 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %1917, i32 0, i32 0)
  %1923 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1922, i32 6, i32 1)
  %1924 = add <16 x i32> %1923, %30
  %1925 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1924, i32 0)
  %1926 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1925), !noalias !15
  %1927 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1926, i32 0)
  %1928 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1925), !noalias !15
  %1929 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1927, <8 x i32> %1928, i32 1)
  %1930 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1924, i32 1)
  %1931 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1930), !noalias !15
  %1932 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1931, i32 0)
  %1933 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1930), !noalias !15
  %1934 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1932, <8 x i32> %1933, i32 1)
  %1935 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1929, <16 x i32> %1934, i32 24)
  %1936 = bitcast <16 x i32> %1935 to <32 x bfloat>
  %1937 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1936, i32 0)
  %1938 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1922, i32 -2, i32 1)
  %1939 = and <16 x i32> %1938, %4
  %1940 = add <16 x i32> %1939, %51
  %1941 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1940, i32 0)
  %1942 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1941), !noalias !20
  %1943 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1942, i32 0)
  %1944 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1941), !noalias !20
  %1945 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1943, <8 x i32> %1944, i32 1)
  %1946 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1940, i32 1)
  %1947 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1946), !noalias !20
  %1948 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1947, i32 0)
  %1949 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1946), !noalias !20
  %1950 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1948, <8 x i32> %1949, i32 1)
  %1951 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1945, <16 x i32> %1950, i32 24)
  %1952 = bitcast <16 x i32> %1951 to <32 x bfloat>
  %1953 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1952, i32 0)
  %1954 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1893, i32 0)
  %1955 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1954, <16 x bfloat> %105, i32 1)
  %1956 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1909, i32 0)
  %1957 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1956, <16 x bfloat> %105, i32 1)
  %1958 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1955, <32 x bfloat> %1957, i32 60)
  %1959 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %1958)
  %1960 = load <16 x bfloat>, ptr %1918, align 32, !tbaa !2
  %1961 = bitcast <8 x i32> %1921 to <16 x i16>
  %1962 = getelementptr bfloat, ptr %0, i20 736
  %1963 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %1960, i32 8)
  %1964 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1963, <16 x i32> %14, i32 2)
  %1965 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1964, i32 0)
  %1966 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %1961, i32 0, i32 0)
  %1967 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1966, i32 6, i32 1)
  %1968 = add <16 x i32> %1967, %30
  %1969 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1968, i32 0)
  %1970 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1969), !noalias !15
  %1971 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1970, i32 0)
  %1972 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1969), !noalias !15
  %1973 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1971, <8 x i32> %1972, i32 1)
  %1974 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1968, i32 1)
  %1975 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1974), !noalias !15
  %1976 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1975, i32 0)
  %1977 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1974), !noalias !15
  %1978 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1976, <8 x i32> %1977, i32 1)
  %1979 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1973, <16 x i32> %1978, i32 24)
  %1980 = bitcast <16 x i32> %1979 to <32 x bfloat>
  %1981 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1980, i32 0)
  %1982 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1966, i32 -2, i32 1)
  %1983 = and <16 x i32> %1982, %4
  %1984 = add <16 x i32> %1983, %51
  %1985 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1984, i32 0)
  %1986 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1985), !noalias !20
  %1987 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1986, i32 0)
  %1988 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1985), !noalias !20
  %1989 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1987, <8 x i32> %1988, i32 1)
  %1990 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1984, i32 1)
  %1991 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1990), !noalias !20
  %1992 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1991, i32 0)
  %1993 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1990), !noalias !20
  %1994 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1992, <8 x i32> %1993, i32 1)
  %1995 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1989, <16 x i32> %1994, i32 24)
  %1996 = bitcast <16 x i32> %1995 to <32 x bfloat>
  %1997 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1996, i32 0)
  %1998 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1937, i32 0)
  %1999 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1998, <16 x bfloat> %105, i32 1)
  %2000 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1953, i32 0)
  %2001 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2000, <16 x bfloat> %105, i32 1)
  %2002 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1999, <32 x bfloat> %2001, i32 60)
  %2003 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %2002)
  %2004 = load <16 x bfloat>, ptr %1962, align 32, !tbaa !2
  %2005 = bitcast <8 x i32> %1965 to <16 x i16>
  %2006 = getelementptr bfloat, ptr %0, i20 752
  %2007 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %2004, i32 8)
  %2008 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2007, <16 x i32> %14, i32 2)
  %2009 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2008, i32 0)
  %2010 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %2005, i32 0, i32 0)
  %2011 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2010, i32 6, i32 1)
  %2012 = add <16 x i32> %2011, %30
  %2013 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2012, i32 0)
  %2014 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2013), !noalias !15
  %2015 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2014, i32 0)
  %2016 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2013), !noalias !15
  %2017 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2015, <8 x i32> %2016, i32 1)
  %2018 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2012, i32 1)
  %2019 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2018), !noalias !15
  %2020 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2019, i32 0)
  %2021 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2018), !noalias !15
  %2022 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2020, <8 x i32> %2021, i32 1)
  %2023 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2017, <16 x i32> %2022, i32 24)
  %2024 = bitcast <16 x i32> %2023 to <32 x bfloat>
  %2025 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2024, i32 0)
  %2026 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2010, i32 -2, i32 1)
  %2027 = and <16 x i32> %2026, %4
  %2028 = add <16 x i32> %2027, %51
  %2029 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2028, i32 0)
  %2030 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2029), !noalias !20
  %2031 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2030, i32 0)
  %2032 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2029), !noalias !20
  %2033 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2031, <8 x i32> %2032, i32 1)
  %2034 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2028, i32 1)
  %2035 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2034), !noalias !20
  %2036 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2035, i32 0)
  %2037 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2034), !noalias !20
  %2038 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2036, <8 x i32> %2037, i32 1)
  %2039 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2033, <16 x i32> %2038, i32 24)
  %2040 = bitcast <16 x i32> %2039 to <32 x bfloat>
  %2041 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2040, i32 0)
  %2042 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1981, i32 0)
  %2043 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2042, <16 x bfloat> %105, i32 1)
  %2044 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1997, i32 0)
  %2045 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2044, <16 x bfloat> %105, i32 1)
  %2046 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %2043, <32 x bfloat> %2045, i32 60)
  %2047 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %2046)
  %2048 = load <16 x bfloat>, ptr %2006, align 32, !tbaa !2
  %2049 = bitcast <8 x i32> %2009 to <16 x i16>
  %2050 = getelementptr bfloat, ptr %0, i20 768
  %2051 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %2048, i32 8)
  %2052 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2051, <16 x i32> %14, i32 2)
  %2053 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2052, i32 0)
  %2054 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %2049, i32 0, i32 0)
  %2055 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2054, i32 6, i32 1)
  %2056 = add <16 x i32> %2055, %30
  %2057 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2056, i32 0)
  %2058 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2057), !noalias !15
  %2059 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2058, i32 0)
  %2060 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2057), !noalias !15
  %2061 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2059, <8 x i32> %2060, i32 1)
  %2062 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2056, i32 1)
  %2063 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2062), !noalias !15
  %2064 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2063, i32 0)
  %2065 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2062), !noalias !15
  %2066 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2064, <8 x i32> %2065, i32 1)
  %2067 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2061, <16 x i32> %2066, i32 24)
  %2068 = bitcast <16 x i32> %2067 to <32 x bfloat>
  %2069 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2068, i32 0)
  %2070 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2054, i32 -2, i32 1)
  %2071 = and <16 x i32> %2070, %4
  %2072 = add <16 x i32> %2071, %51
  %2073 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2072, i32 0)
  %2074 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2073), !noalias !20
  %2075 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2074, i32 0)
  %2076 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2073), !noalias !20
  %2077 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2075, <8 x i32> %2076, i32 1)
  %2078 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2072, i32 1)
  %2079 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2078), !noalias !20
  %2080 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2079, i32 0)
  %2081 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2078), !noalias !20
  %2082 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2080, <8 x i32> %2081, i32 1)
  %2083 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2077, <16 x i32> %2082, i32 24)
  %2084 = bitcast <16 x i32> %2083 to <32 x bfloat>
  %2085 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2084, i32 0)
  %2086 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2025, i32 0)
  %2087 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2086, <16 x bfloat> %105, i32 1)
  %2088 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2041, i32 0)
  %2089 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2088, <16 x bfloat> %105, i32 1)
  %2090 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %2087, <32 x bfloat> %2089, i32 60)
  %2091 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %2090)
  %2092 = load <16 x bfloat>, ptr %2050, align 32, !tbaa !2
  %2093 = bitcast <8 x i32> %2053 to <16 x i16>
  %2094 = getelementptr bfloat, ptr %0, i20 784
  %2095 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %2092, i32 8)
  %2096 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2095, <16 x i32> %14, i32 2)
  %2097 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2096, i32 0)
  %2098 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %2093, i32 0, i32 0)
  %2099 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2098, i32 6, i32 1)
  %2100 = add <16 x i32> %2099, %30
  %2101 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2100, i32 0)
  %2102 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2101), !noalias !15
  %2103 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2102, i32 0)
  %2104 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2101), !noalias !15
  %2105 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2103, <8 x i32> %2104, i32 1)
  %2106 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2100, i32 1)
  %2107 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2106), !noalias !15
  %2108 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2107, i32 0)
  %2109 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2106), !noalias !15
  %2110 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2108, <8 x i32> %2109, i32 1)
  %2111 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2105, <16 x i32> %2110, i32 24)
  %2112 = bitcast <16 x i32> %2111 to <32 x bfloat>
  %2113 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2112, i32 0)
  %2114 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2098, i32 -2, i32 1)
  %2115 = and <16 x i32> %2114, %4
  %2116 = add <16 x i32> %2115, %51
  %2117 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2116, i32 0)
  %2118 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2117), !noalias !20
  %2119 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2118, i32 0)
  %2120 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2117), !noalias !20
  %2121 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2119, <8 x i32> %2120, i32 1)
  %2122 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2116, i32 1)
  %2123 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2122), !noalias !20
  %2124 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2123, i32 0)
  %2125 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2122), !noalias !20
  %2126 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2124, <8 x i32> %2125, i32 1)
  %2127 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2121, <16 x i32> %2126, i32 24)
  %2128 = bitcast <16 x i32> %2127 to <32 x bfloat>
  %2129 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2128, i32 0)
  %2130 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2069, i32 0)
  %2131 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2130, <16 x bfloat> %105, i32 1)
  %2132 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2085, i32 0)
  %2133 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2132, <16 x bfloat> %105, i32 1)
  %2134 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %2131, <32 x bfloat> %2133, i32 60)
  %2135 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %2134)
  %2136 = load <16 x bfloat>, ptr %2094, align 32, !tbaa !2
  %2137 = bitcast <8 x i32> %2097 to <16 x i16>
  %2138 = getelementptr bfloat, ptr %0, i20 800
  %2139 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %2136, i32 8)
  %2140 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2139, <16 x i32> %14, i32 2)
  %2141 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2140, i32 0)
  %2142 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %2137, i32 0, i32 0)
  %2143 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2142, i32 6, i32 1)
  %2144 = add <16 x i32> %2143, %30
  %2145 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2144, i32 0)
  %2146 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2145), !noalias !15
  %2147 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2146, i32 0)
  %2148 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2145), !noalias !15
  %2149 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2147, <8 x i32> %2148, i32 1)
  %2150 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2144, i32 1)
  %2151 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2150), !noalias !15
  %2152 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2151, i32 0)
  %2153 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2150), !noalias !15
  %2154 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2152, <8 x i32> %2153, i32 1)
  %2155 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2149, <16 x i32> %2154, i32 24)
  %2156 = bitcast <16 x i32> %2155 to <32 x bfloat>
  %2157 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2156, i32 0)
  %2158 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2142, i32 -2, i32 1)
  %2159 = and <16 x i32> %2158, %4
  %2160 = add <16 x i32> %2159, %51
  %2161 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2160, i32 0)
  %2162 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2161), !noalias !20
  %2163 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2162, i32 0)
  %2164 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2161), !noalias !20
  %2165 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2163, <8 x i32> %2164, i32 1)
  %2166 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2160, i32 1)
  %2167 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2166), !noalias !20
  %2168 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2167, i32 0)
  %2169 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2166), !noalias !20
  %2170 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2168, <8 x i32> %2169, i32 1)
  %2171 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2165, <16 x i32> %2170, i32 24)
  %2172 = bitcast <16 x i32> %2171 to <32 x bfloat>
  %2173 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2172, i32 0)
  %2174 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2113, i32 0)
  %2175 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2174, <16 x bfloat> %105, i32 1)
  %2176 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2129, i32 0)
  %2177 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2176, <16 x bfloat> %105, i32 1)
  %2178 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %2175, <32 x bfloat> %2177, i32 60)
  %2179 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %2178)
  %2180 = load <16 x bfloat>, ptr %2138, align 32, !tbaa !2
  %2181 = bitcast <8 x i32> %2141 to <16 x i16>
  %2182 = getelementptr bfloat, ptr %0, i20 816
  %2183 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %2180, i32 8)
  %2184 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2183, <16 x i32> %14, i32 2)
  %2185 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2184, i32 0)
  %2186 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %2181, i32 0, i32 0)
  %2187 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2186, i32 6, i32 1)
  %2188 = add <16 x i32> %2187, %30
  %2189 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2188, i32 0)
  %2190 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2189), !noalias !15
  %2191 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2190, i32 0)
  %2192 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2189), !noalias !15
  %2193 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2191, <8 x i32> %2192, i32 1)
  %2194 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2188, i32 1)
  %2195 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2194), !noalias !15
  %2196 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2195, i32 0)
  %2197 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2194), !noalias !15
  %2198 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2196, <8 x i32> %2197, i32 1)
  %2199 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2193, <16 x i32> %2198, i32 24)
  %2200 = bitcast <16 x i32> %2199 to <32 x bfloat>
  %2201 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2200, i32 0)
  %2202 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2186, i32 -2, i32 1)
  %2203 = and <16 x i32> %2202, %4
  %2204 = add <16 x i32> %2203, %51
  %2205 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2204, i32 0)
  %2206 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2205), !noalias !20
  %2207 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2206, i32 0)
  %2208 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2205), !noalias !20
  %2209 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2207, <8 x i32> %2208, i32 1)
  %2210 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2204, i32 1)
  %2211 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2210), !noalias !20
  %2212 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2211, i32 0)
  %2213 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2210), !noalias !20
  %2214 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2212, <8 x i32> %2213, i32 1)
  %2215 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2209, <16 x i32> %2214, i32 24)
  %2216 = bitcast <16 x i32> %2215 to <32 x bfloat>
  %2217 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2216, i32 0)
  %2218 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2157, i32 0)
  %2219 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2218, <16 x bfloat> %105, i32 1)
  %2220 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2173, i32 0)
  %2221 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2220, <16 x bfloat> %105, i32 1)
  %2222 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %2219, <32 x bfloat> %2221, i32 60)
  %2223 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %2222)
  %2224 = load <16 x bfloat>, ptr %2182, align 32, !tbaa !2
  %2225 = bitcast <8 x i32> %2185 to <16 x i16>
  %2226 = getelementptr bfloat, ptr %0, i20 832
  %2227 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %2224, i32 8)
  %2228 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2227, <16 x i32> %14, i32 2)
  %2229 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2228, i32 0)
  %2230 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %2225, i32 0, i32 0)
  %2231 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2230, i32 6, i32 1)
  %2232 = add <16 x i32> %2231, %30
  %2233 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2232, i32 0)
  %2234 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2233), !noalias !15
  %2235 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2234, i32 0)
  %2236 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2233), !noalias !15
  %2237 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2235, <8 x i32> %2236, i32 1)
  %2238 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2232, i32 1)
  %2239 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2238), !noalias !15
  %2240 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2239, i32 0)
  %2241 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2238), !noalias !15
  %2242 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2240, <8 x i32> %2241, i32 1)
  %2243 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2237, <16 x i32> %2242, i32 24)
  %2244 = bitcast <16 x i32> %2243 to <32 x bfloat>
  %2245 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2244, i32 0)
  %2246 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2230, i32 -2, i32 1)
  %2247 = and <16 x i32> %2246, %4
  %2248 = add <16 x i32> %2247, %51
  %2249 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2248, i32 0)
  %2250 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2249), !noalias !20
  %2251 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2250, i32 0)
  %2252 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2249), !noalias !20
  %2253 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2251, <8 x i32> %2252, i32 1)
  %2254 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2248, i32 1)
  %2255 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2254), !noalias !20
  %2256 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2255, i32 0)
  %2257 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2254), !noalias !20
  %2258 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2256, <8 x i32> %2257, i32 1)
  %2259 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2253, <16 x i32> %2258, i32 24)
  %2260 = bitcast <16 x i32> %2259 to <32 x bfloat>
  %2261 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2260, i32 0)
  %2262 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2201, i32 0)
  %2263 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2262, <16 x bfloat> %105, i32 1)
  %2264 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2217, i32 0)
  %2265 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2264, <16 x bfloat> %105, i32 1)
  %2266 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %2263, <32 x bfloat> %2265, i32 60)
  %2267 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %2266)
  %2268 = load <16 x bfloat>, ptr %2226, align 32, !tbaa !2
  %2269 = bitcast <8 x i32> %2229 to <16 x i16>
  %2270 = getelementptr bfloat, ptr %0, i20 848
  %2271 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %2268, i32 8)
  %2272 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2271, <16 x i32> %14, i32 2)
  %2273 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2272, i32 0)
  %2274 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %2269, i32 0, i32 0)
  %2275 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2274, i32 6, i32 1)
  %2276 = add <16 x i32> %2275, %30
  %2277 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2276, i32 0)
  %2278 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2277), !noalias !15
  %2279 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2278, i32 0)
  %2280 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2277), !noalias !15
  %2281 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2279, <8 x i32> %2280, i32 1)
  %2282 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2276, i32 1)
  %2283 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2282), !noalias !15
  %2284 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2283, i32 0)
  %2285 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2282), !noalias !15
  %2286 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2284, <8 x i32> %2285, i32 1)
  %2287 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2281, <16 x i32> %2286, i32 24)
  %2288 = bitcast <16 x i32> %2287 to <32 x bfloat>
  %2289 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2288, i32 0)
  %2290 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2274, i32 -2, i32 1)
  %2291 = and <16 x i32> %2290, %4
  %2292 = add <16 x i32> %2291, %51
  %2293 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2292, i32 0)
  %2294 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2293), !noalias !20
  %2295 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2294, i32 0)
  %2296 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2293), !noalias !20
  %2297 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2295, <8 x i32> %2296, i32 1)
  %2298 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2292, i32 1)
  %2299 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2298), !noalias !20
  %2300 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2299, i32 0)
  %2301 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2298), !noalias !20
  %2302 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2300, <8 x i32> %2301, i32 1)
  %2303 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2297, <16 x i32> %2302, i32 24)
  %2304 = bitcast <16 x i32> %2303 to <32 x bfloat>
  %2305 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2304, i32 0)
  %2306 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2245, i32 0)
  %2307 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2306, <16 x bfloat> %105, i32 1)
  %2308 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2261, i32 0)
  %2309 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2308, <16 x bfloat> %105, i32 1)
  %2310 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %2307, <32 x bfloat> %2309, i32 60)
  %2311 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %2310)
  %2312 = load <16 x bfloat>, ptr %2270, align 32, !tbaa !2
  %2313 = bitcast <8 x i32> %2273 to <16 x i16>
  %2314 = getelementptr bfloat, ptr %0, i20 864
  %2315 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %2312, i32 8)
  %2316 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2315, <16 x i32> %14, i32 2)
  %2317 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2316, i32 0)
  %2318 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %2313, i32 0, i32 0)
  %2319 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2318, i32 6, i32 1)
  %2320 = add <16 x i32> %2319, %30
  %2321 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2320, i32 0)
  %2322 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2321), !noalias !15
  %2323 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2322, i32 0)
  %2324 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2321), !noalias !15
  %2325 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2323, <8 x i32> %2324, i32 1)
  %2326 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2320, i32 1)
  %2327 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2326), !noalias !15
  %2328 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2327, i32 0)
  %2329 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2326), !noalias !15
  %2330 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2328, <8 x i32> %2329, i32 1)
  %2331 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2325, <16 x i32> %2330, i32 24)
  %2332 = bitcast <16 x i32> %2331 to <32 x bfloat>
  %2333 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2332, i32 0)
  %2334 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2318, i32 -2, i32 1)
  %2335 = and <16 x i32> %2334, %4
  %2336 = add <16 x i32> %2335, %51
  %2337 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2336, i32 0)
  %2338 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2337), !noalias !20
  %2339 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2338, i32 0)
  %2340 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2337), !noalias !20
  %2341 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2339, <8 x i32> %2340, i32 1)
  %2342 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2336, i32 1)
  %2343 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2342), !noalias !20
  %2344 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2343, i32 0)
  %2345 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2342), !noalias !20
  %2346 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2344, <8 x i32> %2345, i32 1)
  %2347 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2341, <16 x i32> %2346, i32 24)
  %2348 = bitcast <16 x i32> %2347 to <32 x bfloat>
  %2349 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2348, i32 0)
  %2350 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2289, i32 0)
  %2351 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2350, <16 x bfloat> %105, i32 1)
  %2352 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2305, i32 0)
  %2353 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2352, <16 x bfloat> %105, i32 1)
  %2354 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %2351, <32 x bfloat> %2353, i32 60)
  %2355 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %2354)
  %2356 = load <16 x bfloat>, ptr %2314, align 32, !tbaa !2
  %2357 = bitcast <8 x i32> %2317 to <16 x i16>
  %2358 = getelementptr bfloat, ptr %0, i20 880
  %2359 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %2356, i32 8)
  %2360 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2359, <16 x i32> %14, i32 2)
  %2361 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2360, i32 0)
  %2362 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %2357, i32 0, i32 0)
  %2363 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2362, i32 6, i32 1)
  %2364 = add <16 x i32> %2363, %30
  %2365 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2364, i32 0)
  %2366 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2365), !noalias !15
  %2367 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2366, i32 0)
  %2368 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2365), !noalias !15
  %2369 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2367, <8 x i32> %2368, i32 1)
  %2370 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2364, i32 1)
  %2371 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2370), !noalias !15
  %2372 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2371, i32 0)
  %2373 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2370), !noalias !15
  %2374 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2372, <8 x i32> %2373, i32 1)
  %2375 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2369, <16 x i32> %2374, i32 24)
  %2376 = bitcast <16 x i32> %2375 to <32 x bfloat>
  %2377 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2376, i32 0)
  %2378 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2362, i32 -2, i32 1)
  %2379 = and <16 x i32> %2378, %4
  %2380 = add <16 x i32> %2379, %51
  %2381 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2380, i32 0)
  %2382 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2381), !noalias !20
  %2383 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2382, i32 0)
  %2384 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2381), !noalias !20
  %2385 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2383, <8 x i32> %2384, i32 1)
  %2386 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2380, i32 1)
  %2387 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2386), !noalias !20
  %2388 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2387, i32 0)
  %2389 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2386), !noalias !20
  %2390 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2388, <8 x i32> %2389, i32 1)
  %2391 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2385, <16 x i32> %2390, i32 24)
  %2392 = bitcast <16 x i32> %2391 to <32 x bfloat>
  %2393 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2392, i32 0)
  %2394 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2333, i32 0)
  %2395 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2394, <16 x bfloat> %105, i32 1)
  %2396 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2349, i32 0)
  %2397 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2396, <16 x bfloat> %105, i32 1)
  %2398 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %2395, <32 x bfloat> %2397, i32 60)
  %2399 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %2398)
  %2400 = load <16 x bfloat>, ptr %2358, align 32, !tbaa !2
  %2401 = bitcast <8 x i32> %2361 to <16 x i16>
  %2402 = getelementptr bfloat, ptr %0, i20 896
  %2403 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %2400, i32 8)
  %2404 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2403, <16 x i32> %14, i32 2)
  %2405 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2404, i32 0)
  %2406 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %2401, i32 0, i32 0)
  %2407 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2406, i32 6, i32 1)
  %2408 = add <16 x i32> %2407, %30
  %2409 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2408, i32 0)
  %2410 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2409), !noalias !15
  %2411 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2410, i32 0)
  %2412 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2409), !noalias !15
  %2413 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2411, <8 x i32> %2412, i32 1)
  %2414 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2408, i32 1)
  %2415 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2414), !noalias !15
  %2416 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2415, i32 0)
  %2417 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2414), !noalias !15
  %2418 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2416, <8 x i32> %2417, i32 1)
  %2419 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2413, <16 x i32> %2418, i32 24)
  %2420 = bitcast <16 x i32> %2419 to <32 x bfloat>
  %2421 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2420, i32 0)
  %2422 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2406, i32 -2, i32 1)
  %2423 = and <16 x i32> %2422, %4
  %2424 = add <16 x i32> %2423, %51
  %2425 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2424, i32 0)
  %2426 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2425), !noalias !20
  %2427 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2426, i32 0)
  %2428 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2425), !noalias !20
  %2429 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2427, <8 x i32> %2428, i32 1)
  %2430 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2424, i32 1)
  %2431 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2430), !noalias !20
  %2432 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2431, i32 0)
  %2433 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2430), !noalias !20
  %2434 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2432, <8 x i32> %2433, i32 1)
  %2435 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2429, <16 x i32> %2434, i32 24)
  %2436 = bitcast <16 x i32> %2435 to <32 x bfloat>
  %2437 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2436, i32 0)
  %2438 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2377, i32 0)
  %2439 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2438, <16 x bfloat> %105, i32 1)
  %2440 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2393, i32 0)
  %2441 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2440, <16 x bfloat> %105, i32 1)
  %2442 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %2439, <32 x bfloat> %2441, i32 60)
  %2443 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %2442)
  %2444 = load <16 x bfloat>, ptr %2402, align 32, !tbaa !2
  %2445 = bitcast <8 x i32> %2405 to <16 x i16>
  %2446 = getelementptr bfloat, ptr %0, i20 912
  %2447 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %2444, i32 8)
  %2448 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2447, <16 x i32> %14, i32 2)
  %2449 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2448, i32 0)
  %2450 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %2445, i32 0, i32 0)
  %2451 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2450, i32 6, i32 1)
  %2452 = add <16 x i32> %2451, %30
  %2453 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2452, i32 0)
  %2454 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2453), !noalias !15
  %2455 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2454, i32 0)
  %2456 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2453), !noalias !15
  %2457 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2455, <8 x i32> %2456, i32 1)
  %2458 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2452, i32 1)
  %2459 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2458), !noalias !15
  %2460 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2459, i32 0)
  %2461 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2458), !noalias !15
  %2462 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2460, <8 x i32> %2461, i32 1)
  %2463 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2457, <16 x i32> %2462, i32 24)
  %2464 = bitcast <16 x i32> %2463 to <32 x bfloat>
  %2465 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2464, i32 0)
  %2466 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2450, i32 -2, i32 1)
  %2467 = and <16 x i32> %2466, %4
  %2468 = add <16 x i32> %2467, %51
  %2469 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2468, i32 0)
  %2470 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2469), !noalias !20
  %2471 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2470, i32 0)
  %2472 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2469), !noalias !20
  %2473 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2471, <8 x i32> %2472, i32 1)
  %2474 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2468, i32 1)
  %2475 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2474), !noalias !20
  %2476 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2475, i32 0)
  %2477 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2474), !noalias !20
  %2478 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2476, <8 x i32> %2477, i32 1)
  %2479 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2473, <16 x i32> %2478, i32 24)
  %2480 = bitcast <16 x i32> %2479 to <32 x bfloat>
  %2481 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2480, i32 0)
  %2482 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2421, i32 0)
  %2483 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2482, <16 x bfloat> %105, i32 1)
  %2484 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2437, i32 0)
  %2485 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2484, <16 x bfloat> %105, i32 1)
  %2486 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %2483, <32 x bfloat> %2485, i32 60)
  %2487 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %2486)
  %2488 = load <16 x bfloat>, ptr %2446, align 32, !tbaa !2
  %2489 = bitcast <8 x i32> %2449 to <16 x i16>
  %2490 = getelementptr bfloat, ptr %0, i20 928
  %2491 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %2488, i32 8)
  %2492 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2491, <16 x i32> %14, i32 2)
  %2493 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2492, i32 0)
  %2494 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %2489, i32 0, i32 0)
  %2495 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2494, i32 6, i32 1)
  %2496 = add <16 x i32> %2495, %30
  %2497 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2496, i32 0)
  %2498 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2497), !noalias !15
  %2499 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2498, i32 0)
  %2500 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2497), !noalias !15
  %2501 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2499, <8 x i32> %2500, i32 1)
  %2502 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2496, i32 1)
  %2503 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2502), !noalias !15
  %2504 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2503, i32 0)
  %2505 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2502), !noalias !15
  %2506 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2504, <8 x i32> %2505, i32 1)
  %2507 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2501, <16 x i32> %2506, i32 24)
  %2508 = bitcast <16 x i32> %2507 to <32 x bfloat>
  %2509 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2508, i32 0)
  %2510 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2494, i32 -2, i32 1)
  %2511 = and <16 x i32> %2510, %4
  %2512 = add <16 x i32> %2511, %51
  %2513 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2512, i32 0)
  %2514 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2513), !noalias !20
  %2515 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2514, i32 0)
  %2516 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2513), !noalias !20
  %2517 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2515, <8 x i32> %2516, i32 1)
  %2518 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2512, i32 1)
  %2519 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2518), !noalias !20
  %2520 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2519, i32 0)
  %2521 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2518), !noalias !20
  %2522 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2520, <8 x i32> %2521, i32 1)
  %2523 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2517, <16 x i32> %2522, i32 24)
  %2524 = bitcast <16 x i32> %2523 to <32 x bfloat>
  %2525 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2524, i32 0)
  %2526 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2465, i32 0)
  %2527 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2526, <16 x bfloat> %105, i32 1)
  %2528 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2481, i32 0)
  %2529 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2528, <16 x bfloat> %105, i32 1)
  %2530 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %2527, <32 x bfloat> %2529, i32 60)
  %2531 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %2530)
  %2532 = load <16 x bfloat>, ptr %2490, align 32, !tbaa !2
  %2533 = bitcast <8 x i32> %2493 to <16 x i16>
  %2534 = getelementptr bfloat, ptr %0, i20 944
  %2535 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %2532, i32 8)
  %2536 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2535, <16 x i32> %14, i32 2)
  %2537 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2536, i32 0)
  %2538 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %2533, i32 0, i32 0)
  %2539 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2538, i32 6, i32 1)
  %2540 = add <16 x i32> %2539, %30
  %2541 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2540, i32 0)
  %2542 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2541), !noalias !15
  %2543 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2542, i32 0)
  %2544 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2541), !noalias !15
  %2545 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2543, <8 x i32> %2544, i32 1)
  %2546 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2540, i32 1)
  %2547 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2546), !noalias !15
  %2548 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2547, i32 0)
  %2549 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2546), !noalias !15
  %2550 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2548, <8 x i32> %2549, i32 1)
  %2551 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2545, <16 x i32> %2550, i32 24)
  %2552 = bitcast <16 x i32> %2551 to <32 x bfloat>
  %2553 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2552, i32 0)
  %2554 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2538, i32 -2, i32 1)
  %2555 = and <16 x i32> %2554, %4
  %2556 = add <16 x i32> %2555, %51
  %2557 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2556, i32 0)
  %2558 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2557), !noalias !20
  %2559 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2558, i32 0)
  %2560 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2557), !noalias !20
  %2561 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2559, <8 x i32> %2560, i32 1)
  %2562 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2556, i32 1)
  %2563 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2562), !noalias !20
  %2564 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2563, i32 0)
  %2565 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2562), !noalias !20
  %2566 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2564, <8 x i32> %2565, i32 1)
  %2567 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2561, <16 x i32> %2566, i32 24)
  %2568 = bitcast <16 x i32> %2567 to <32 x bfloat>
  %2569 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2568, i32 0)
  %2570 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2509, i32 0)
  %2571 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2570, <16 x bfloat> %105, i32 1)
  %2572 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2525, i32 0)
  %2573 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2572, <16 x bfloat> %105, i32 1)
  %2574 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %2571, <32 x bfloat> %2573, i32 60)
  %2575 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %2574)
  %2576 = load <16 x bfloat>, ptr %2534, align 32, !tbaa !2
  %2577 = bitcast <8 x i32> %2537 to <16 x i16>
  %2578 = getelementptr bfloat, ptr %0, i20 960
  %2579 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %2576, i32 8)
  %2580 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2579, <16 x i32> %14, i32 2)
  %2581 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2580, i32 0)
  %2582 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %2577, i32 0, i32 0)
  %2583 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2582, i32 6, i32 1)
  %2584 = add <16 x i32> %2583, %30
  %2585 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2584, i32 0)
  %2586 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2585), !noalias !15
  %2587 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2586, i32 0)
  %2588 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2585), !noalias !15
  %2589 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2587, <8 x i32> %2588, i32 1)
  %2590 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2584, i32 1)
  %2591 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2590), !noalias !15
  %2592 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2591, i32 0)
  %2593 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2590), !noalias !15
  %2594 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2592, <8 x i32> %2593, i32 1)
  %2595 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2589, <16 x i32> %2594, i32 24)
  %2596 = bitcast <16 x i32> %2595 to <32 x bfloat>
  %2597 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2596, i32 0)
  %2598 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2582, i32 -2, i32 1)
  %2599 = and <16 x i32> %2598, %4
  %2600 = add <16 x i32> %2599, %51
  %2601 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2600, i32 0)
  %2602 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2601), !noalias !20
  %2603 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2602, i32 0)
  %2604 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2601), !noalias !20
  %2605 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2603, <8 x i32> %2604, i32 1)
  %2606 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2600, i32 1)
  %2607 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2606), !noalias !20
  %2608 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2607, i32 0)
  %2609 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2606), !noalias !20
  %2610 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2608, <8 x i32> %2609, i32 1)
  %2611 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2605, <16 x i32> %2610, i32 24)
  %2612 = bitcast <16 x i32> %2611 to <32 x bfloat>
  %2613 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2612, i32 0)
  %2614 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2553, i32 0)
  %2615 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2614, <16 x bfloat> %105, i32 1)
  %2616 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2569, i32 0)
  %2617 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2616, <16 x bfloat> %105, i32 1)
  %2618 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %2615, <32 x bfloat> %2617, i32 60)
  %2619 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %2618)
  %2620 = load <16 x bfloat>, ptr %2578, align 32, !tbaa !2
  %2621 = bitcast <8 x i32> %2581 to <16 x i16>
  %2622 = getelementptr bfloat, ptr %0, i20 976
  %2623 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %2620, i32 8)
  %2624 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2623, <16 x i32> %14, i32 2)
  %2625 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2624, i32 0)
  %2626 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %2621, i32 0, i32 0)
  %2627 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2626, i32 6, i32 1)
  %2628 = add <16 x i32> %2627, %30
  %2629 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2628, i32 0)
  %2630 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2629), !noalias !15
  %2631 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2630, i32 0)
  %2632 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2629), !noalias !15
  %2633 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2631, <8 x i32> %2632, i32 1)
  %2634 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2628, i32 1)
  %2635 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2634), !noalias !15
  %2636 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2635, i32 0)
  %2637 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2634), !noalias !15
  %2638 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2636, <8 x i32> %2637, i32 1)
  %2639 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2633, <16 x i32> %2638, i32 24)
  %2640 = bitcast <16 x i32> %2639 to <32 x bfloat>
  %2641 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2640, i32 0)
  %2642 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2626, i32 -2, i32 1)
  %2643 = and <16 x i32> %2642, %4
  %2644 = add <16 x i32> %2643, %51
  %2645 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2644, i32 0)
  %2646 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2645), !noalias !20
  %2647 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2646, i32 0)
  %2648 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2645), !noalias !20
  %2649 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2647, <8 x i32> %2648, i32 1)
  %2650 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2644, i32 1)
  %2651 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2650), !noalias !20
  %2652 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2651, i32 0)
  %2653 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2650), !noalias !20
  %2654 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2652, <8 x i32> %2653, i32 1)
  %2655 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2649, <16 x i32> %2654, i32 24)
  %2656 = bitcast <16 x i32> %2655 to <32 x bfloat>
  %2657 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2656, i32 0)
  %2658 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2597, i32 0)
  %2659 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2658, <16 x bfloat> %105, i32 1)
  %2660 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2613, i32 0)
  %2661 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2660, <16 x bfloat> %105, i32 1)
  %2662 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %2659, <32 x bfloat> %2661, i32 60)
  %2663 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %2662)
  %2664 = load <16 x bfloat>, ptr %2622, align 32, !tbaa !2
  %2665 = bitcast <8 x i32> %2625 to <16 x i16>
  %2666 = getelementptr bfloat, ptr %0, i20 992
  %2667 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %2664, i32 8)
  %2668 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2667, <16 x i32> %14, i32 2)
  %2669 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2668, i32 0)
  %2670 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %2665, i32 0, i32 0)
  %2671 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2670, i32 6, i32 1)
  %2672 = add <16 x i32> %2671, %30
  %2673 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2672, i32 0)
  %2674 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2673), !noalias !15
  %2675 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2674, i32 0)
  %2676 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2673), !noalias !15
  %2677 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2675, <8 x i32> %2676, i32 1)
  %2678 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2672, i32 1)
  %2679 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2678), !noalias !15
  %2680 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2679, i32 0)
  %2681 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2678), !noalias !15
  %2682 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2680, <8 x i32> %2681, i32 1)
  %2683 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2677, <16 x i32> %2682, i32 24)
  %2684 = bitcast <16 x i32> %2683 to <32 x bfloat>
  %2685 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2684, i32 0)
  %2686 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2670, i32 -2, i32 1)
  %2687 = and <16 x i32> %2686, %4
  %2688 = add <16 x i32> %2687, %51
  %2689 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2688, i32 0)
  %2690 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2689), !noalias !20
  %2691 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2690, i32 0)
  %2692 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2689), !noalias !20
  %2693 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2691, <8 x i32> %2692, i32 1)
  %2694 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2688, i32 1)
  %2695 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2694), !noalias !20
  %2696 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2695, i32 0)
  %2697 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2694), !noalias !20
  %2698 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2696, <8 x i32> %2697, i32 1)
  %2699 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2693, <16 x i32> %2698, i32 24)
  %2700 = bitcast <16 x i32> %2699 to <32 x bfloat>
  %2701 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2700, i32 0)
  %2702 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2641, i32 0)
  %2703 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2702, <16 x bfloat> %105, i32 1)
  %2704 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2657, i32 0)
  %2705 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2704, <16 x bfloat> %105, i32 1)
  %2706 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %2703, <32 x bfloat> %2705, i32 60)
  %2707 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %2706)
  %2708 = load <16 x bfloat>, ptr %2666, align 32, !tbaa !2
  %2709 = bitcast <8 x i32> %2669 to <16 x i16>
  %2710 = getelementptr bfloat, ptr %0, i20 1008
  %2711 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %2708, i32 8)
  %2712 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2711, <16 x i32> %14, i32 2)
  %2713 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2712, i32 0)
  %2714 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %2709, i32 0, i32 0)
  %2715 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2714, i32 6, i32 1)
  %2716 = add <16 x i32> %2715, %30
  %2717 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2716, i32 0)
  %2718 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2717), !noalias !15
  %2719 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2718, i32 0)
  %2720 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2717), !noalias !15
  %2721 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2719, <8 x i32> %2720, i32 1)
  %2722 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2716, i32 1)
  %2723 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2722), !noalias !15
  %2724 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2723, i32 0)
  %2725 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2722), !noalias !15
  %2726 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2724, <8 x i32> %2725, i32 1)
  %2727 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2721, <16 x i32> %2726, i32 24)
  %2728 = bitcast <16 x i32> %2727 to <32 x bfloat>
  %2729 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2728, i32 0)
  %2730 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2714, i32 -2, i32 1)
  %2731 = and <16 x i32> %2730, %4
  %2732 = add <16 x i32> %2731, %51
  %2733 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2732, i32 0)
  %2734 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2733), !noalias !20
  %2735 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2734, i32 0)
  %2736 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2733), !noalias !20
  %2737 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2735, <8 x i32> %2736, i32 1)
  %2738 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2732, i32 1)
  %2739 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2738), !noalias !20
  %2740 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2739, i32 0)
  %2741 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2738), !noalias !20
  %2742 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2740, <8 x i32> %2741, i32 1)
  %2743 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2737, <16 x i32> %2742, i32 24)
  %2744 = bitcast <16 x i32> %2743 to <32 x bfloat>
  %2745 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2744, i32 0)
  %2746 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2685, i32 0)
  %2747 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2746, <16 x bfloat> %105, i32 1)
  %2748 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2701, i32 0)
  %2749 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2748, <16 x bfloat> %105, i32 1)
  %2750 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %2747, <32 x bfloat> %2749, i32 60)
  %2751 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %2750)
  %2752 = load <16 x bfloat>, ptr %2710, align 32, !tbaa !2
  %2753 = bitcast <8 x i32> %2713 to <16 x i16>
  %2754 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %2752, i32 8)
  %2755 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2754, <16 x i32> %14, i32 2)
  %2756 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2755, i32 0)
  %2757 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %2753, i32 0, i32 0)
  %2758 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2757, i32 6, i32 1)
  %2759 = add <16 x i32> %2758, %30
  %2760 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2759, i32 0)
  %2761 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2760), !noalias !25
  %2762 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2761, i32 0)
  %2763 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2760), !noalias !25
  %2764 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2762, <8 x i32> %2763, i32 1)
  %2765 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2759, i32 1)
  %2766 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2765), !noalias !25
  %2767 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2766, i32 0)
  %2768 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2765), !noalias !25
  %2769 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2767, <8 x i32> %2768, i32 1)
  %2770 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2764, <16 x i32> %2769, i32 24)
  %2771 = bitcast <16 x i32> %2770 to <32 x bfloat>
  %2772 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2771, i32 0)
  %2773 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2757, i32 -2, i32 1)
  %2774 = and <16 x i32> %2773, %4
  %2775 = add <16 x i32> %2774, %51
  %2776 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2775, i32 0)
  %2777 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2776), !noalias !30
  %2778 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2777, i32 0)
  %2779 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2776), !noalias !30
  %2780 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2778, <8 x i32> %2779, i32 1)
  %2781 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2775, i32 1)
  %2782 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2781), !noalias !30
  %2783 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2782, i32 0)
  %2784 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2781), !noalias !30
  %2785 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2783, <8 x i32> %2784, i32 1)
  %2786 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2780, <16 x i32> %2785, i32 24)
  %2787 = bitcast <16 x i32> %2786 to <32 x bfloat>
  %2788 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2787, i32 0)
  %2789 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2729, i32 0)
  %2790 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2789, <16 x bfloat> %105, i32 1)
  %2791 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2745, i32 0)
  %2792 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2791, <16 x bfloat> %105, i32 1)
  %2793 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %2790, <32 x bfloat> %2792, i32 60)
  %2794 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %2793)
  %2795 = getelementptr inbounds bfloat, ptr %1, i20 976
  store <16 x bfloat> %2794, ptr %2795, align 32, !tbaa !2
  %2796 = bitcast <8 x i32> %2756 to <16 x i16>
  %2797 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %2796, i32 0, i32 0)
  %2798 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2797, i32 6, i32 1)
  %2799 = add <16 x i32> %2798, %30
  %2800 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2799, i32 0)
  %2801 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2800), !noalias !35
  %2802 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2801, i32 0)
  %2803 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2800), !noalias !35
  %2804 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2802, <8 x i32> %2803, i32 1)
  %2805 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2799, i32 1)
  %2806 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2805), !noalias !35
  %2807 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2806, i32 0)
  %2808 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2805), !noalias !35
  %2809 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2807, <8 x i32> %2808, i32 1)
  %2810 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2804, <16 x i32> %2809, i32 24)
  %2811 = bitcast <16 x i32> %2810 to <32 x bfloat>
  %2812 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2811, i32 0)
  %2813 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2797, i32 -2, i32 1)
  %2814 = and <16 x i32> %2813, %4
  %2815 = add <16 x i32> %2814, %51
  %2816 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2815, i32 0)
  %2817 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2816), !noalias !40
  %2818 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2817, i32 0)
  %2819 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2816), !noalias !40
  %2820 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2818, <8 x i32> %2819, i32 1)
  %2821 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2815, i32 1)
  %2822 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2821), !noalias !40
  %2823 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2822, i32 0)
  %2824 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2821), !noalias !40
  %2825 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2823, <8 x i32> %2824, i32 1)
  %2826 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2820, <16 x i32> %2825, i32 24)
  %2827 = bitcast <16 x i32> %2826 to <32 x bfloat>
  %2828 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2827, i32 0)
  %2829 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2772, i32 0)
  %2830 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2829, <16 x bfloat> %105, i32 1)
  %2831 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2788, i32 0)
  %2832 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2831, <16 x bfloat> %105, i32 1)
  %2833 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %2830, <32 x bfloat> %2832, i32 60)
  %2834 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %2833)
  %2835 = getelementptr inbounds bfloat, ptr %1, i20 992
  store <16 x bfloat> %2834, ptr %2835, align 32, !tbaa !2
  %2836 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2812, i32 0)
  %2837 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2836, <16 x bfloat> %105, i32 1)
  %2838 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2828, i32 0)
  %2839 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2838, <16 x bfloat> %105, i32 1)
  %2840 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %2837, <32 x bfloat> %2839, i32 60)
  %2841 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %2840)
  %2842 = getelementptr inbounds bfloat, ptr %1, i20 1008
  store <16 x bfloat> %2841, ptr %2842, align 32, !tbaa !2
  ret void
}

; Function Attrs: nofree nosync nounwind memory(none)
declare <8 x i64> @llvm.aie2.v16accfloat() #1

; Function Attrs: nofree nounwind memory(inaccessiblemem: read)
declare <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat>, i32) #2

; Function Attrs: nofree nosync nounwind memory(none)
declare <32 x bfloat> @llvm.aie2.v32bfloat16() #1

; Function Attrs: nofree nosync nounwind memory(none)
declare <32 x bfloat> @llvm.aie2.vbroadcast16.bf512(bfloat) #1

; Function Attrs: nofree nosync nounwind memory(none)
declare <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat>, i32) #1

; Function Attrs: nofree nosync nounwind memory(none)
declare <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat>, i32) #1

; Function Attrs: nofree nosync nounwind memory(none)
declare <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat>, <16 x bfloat>, i32) #1

; Function Attrs: nofree nounwind memory(inaccessiblemem: read)
declare <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat>, <32 x bfloat>, i32) #2

; Function Attrs: nofree nounwind memory(inaccessiblemem: read)
declare <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64>) #2

; Function Attrs: nofree nosync nounwind memory(none)
declare <16 x i32> @llvm.aie2.v16int32() #1

; Function Attrs: nofree nosync nounwind memory(none)
declare <16 x i32> @llvm.aie2.vbroadcast32.I512(i32) #1

; Function Attrs: nofree nosync nounwind memory(none)
declare <16 x bfloat> @llvm.aie2.v16bfloat16() #1

; Function Attrs: nofree nosync nounwind memory(none)
declare <16 x i16> @llvm.aie2.v16int16() #1

; Function Attrs: nofree nosync nounwind memory(none)
declare <16 x i32> @llvm.aie2.vshuffle(<16 x i32>, <16 x i32>, i32) #1

; Function Attrs: nofree nosync nounwind memory(none)
declare <32 x i16> @llvm.aie2.v32int16() #1

; Function Attrs: nofree nosync nounwind memory(none)
declare <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32>, i32) #1

; Function Attrs: nofree nosync nounwind memory(none)
declare <16 x i64> @llvm.aie2.v16acc64() #1

; Function Attrs: nofree nounwind memory(inaccessiblemem: read)
declare <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16>, i32, i32) #2

; Function Attrs: nofree nounwind memory(inaccessiblemem: read)
declare <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64>, i32, i32) #2

; Function Attrs: nofree nosync nounwind memory(none)
declare <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32>, <8 x i32>, i32) #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare <16 x i32> @llvm.aie2.vsel32(<16 x i32>, <16 x i32>, i32) #3

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(read)
declare <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32>) #4

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(read)
declare <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32>) #4

attributes #0 = { mustprogress nofree nounwind memory(read, argmem: readwrite) "no-trapping-math"="true" "stack-protector-buffer-size"="8" }
attributes #1 = { nofree nosync nounwind memory(none) }
attributes #2 = { nofree nounwind memory(inaccessiblemem: read) }
attributes #3 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #4 = { mustprogress nocallback nofree nosync nounwind willreturn memory(read) }

!llvm.linker.options = !{}
!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 18.0.0git"}
!2 = !{!3, !3, i64 0}
!3 = !{!"omnipotent char", !4, i64 0}
!4 = !{!"Simple C++ TBAA"}
!5 = !{!6, !8}
!6 = distinct !{!6, !7, !"_ZN3aie6detail15parallel_lookupItNS0_3lutILj4Eu6__bf16u6__bf16EELNS0_14lut_oor_policyE1EE5fetchINS_6vectorItLj16EEELj16EQaaaaleclsrTL0__4sizeELi32EleTL0_0_clsrS9_4sizeEleTL0_0_sr20native_vector_lengthIT0_EE5valueEENS7_Iu6__bf16XT0_EEERKT_: argument 0"}
!7 = distinct !{!7, !"_ZN3aie6detail15parallel_lookupItNS0_3lutILj4Eu6__bf16u6__bf16EELNS0_14lut_oor_policyE1EE5fetchINS_6vectorItLj16EEELj16EQaaaaleclsrTL0__4sizeELi32EleTL0_0_clsrS9_4sizeEleTL0_0_sr20native_vector_lengthIT0_EE5valueEENS7_Iu6__bf16XT0_EEERKT_"}
!8 = distinct !{!8, !9, !"_ZN3aie15parallel_lookupItNS_3lutILj4Eu6__bf16u6__bf16EELNS_6detail14lut_oor_policyE1EE5fetchITkNS_6VectorENS_6vectorItLj16EEELj16EEENS7_Iu6__bf16XT0_EEERKT_: argument 0"}
!9 = distinct !{!9, !"_ZN3aie15parallel_lookupItNS_3lutILj4Eu6__bf16u6__bf16EELNS_6detail14lut_oor_policyE1EE5fetchITkNS_6VectorENS_6vectorItLj16EEELj16EEENS7_Iu6__bf16XT0_EEERKT_"}
!10 = !{!11, !13}
!11 = distinct !{!11, !12, !"_ZN3aie6detail15parallel_lookupItNS0_3lutILj4Eu6__bf16u6__bf16EELNS0_14lut_oor_policyE1EE5fetchINS_6vectorItLj16EEELj16EQaaaaleclsrTL0__4sizeELi32EleTL0_0_clsrS9_4sizeEleTL0_0_sr20native_vector_lengthIT0_EE5valueEENS7_Iu6__bf16XT0_EEERKT_: argument 0"}
!12 = distinct !{!12, !"_ZN3aie6detail15parallel_lookupItNS0_3lutILj4Eu6__bf16u6__bf16EELNS0_14lut_oor_policyE1EE5fetchINS_6vectorItLj16EEELj16EQaaaaleclsrTL0__4sizeELi32EleTL0_0_clsrS9_4sizeEleTL0_0_sr20native_vector_lengthIT0_EE5valueEENS7_Iu6__bf16XT0_EEERKT_"}
!13 = distinct !{!13, !14, !"_ZN3aie15parallel_lookupItNS_3lutILj4Eu6__bf16u6__bf16EELNS_6detail14lut_oor_policyE1EE5fetchITkNS_6VectorENS_6vectorItLj16EEELj16EEENS7_Iu6__bf16XT0_EEERKT_: argument 0"}
!14 = distinct !{!14, !"_ZN3aie15parallel_lookupItNS_3lutILj4Eu6__bf16u6__bf16EELNS_6detail14lut_oor_policyE1EE5fetchITkNS_6VectorENS_6vectorItLj16EEELj16EEENS7_Iu6__bf16XT0_EEERKT_"}
!15 = !{!16, !18}
!16 = distinct !{!16, !17, !"_ZN3aie6detail15parallel_lookupItNS0_3lutILj4Eu6__bf16u6__bf16EELNS0_14lut_oor_policyE1EE5fetchINS_6vectorItLj16EEELj16EQaaaaleclsrTL0__4sizeELi32EleTL0_0_clsrS9_4sizeEleTL0_0_sr20native_vector_lengthIT0_EE5valueEENS7_Iu6__bf16XT0_EEERKT_: argument 0"}
!17 = distinct !{!17, !"_ZN3aie6detail15parallel_lookupItNS0_3lutILj4Eu6__bf16u6__bf16EELNS0_14lut_oor_policyE1EE5fetchINS_6vectorItLj16EEELj16EQaaaaleclsrTL0__4sizeELi32EleTL0_0_clsrS9_4sizeEleTL0_0_sr20native_vector_lengthIT0_EE5valueEENS7_Iu6__bf16XT0_EEERKT_"}
!18 = distinct !{!18, !19, !"_ZN3aie15parallel_lookupItNS_3lutILj4Eu6__bf16u6__bf16EELNS_6detail14lut_oor_policyE1EE5fetchITkNS_6VectorENS_6vectorItLj16EEELj16EEENS7_Iu6__bf16XT0_EEERKT_: argument 0"}
!19 = distinct !{!19, !"_ZN3aie15parallel_lookupItNS_3lutILj4Eu6__bf16u6__bf16EELNS_6detail14lut_oor_policyE1EE5fetchITkNS_6VectorENS_6vectorItLj16EEELj16EEENS7_Iu6__bf16XT0_EEERKT_"}
!20 = !{!21, !23}
!21 = distinct !{!21, !22, !"_ZN3aie6detail15parallel_lookupItNS0_3lutILj4Eu6__bf16u6__bf16EELNS0_14lut_oor_policyE1EE5fetchINS_6vectorItLj16EEELj16EQaaaaleclsrTL0__4sizeELi32EleTL0_0_clsrS9_4sizeEleTL0_0_sr20native_vector_lengthIT0_EE5valueEENS7_Iu6__bf16XT0_EEERKT_: argument 0"}
!22 = distinct !{!22, !"_ZN3aie6detail15parallel_lookupItNS0_3lutILj4Eu6__bf16u6__bf16EELNS0_14lut_oor_policyE1EE5fetchINS_6vectorItLj16EEELj16EQaaaaleclsrTL0__4sizeELi32EleTL0_0_clsrS9_4sizeEleTL0_0_sr20native_vector_lengthIT0_EE5valueEENS7_Iu6__bf16XT0_EEERKT_"}
!23 = distinct !{!23, !24, !"_ZN3aie15parallel_lookupItNS_3lutILj4Eu6__bf16u6__bf16EELNS_6detail14lut_oor_policyE1EE5fetchITkNS_6VectorENS_6vectorItLj16EEELj16EEENS7_Iu6__bf16XT0_EEERKT_: argument 0"}
!24 = distinct !{!24, !"_ZN3aie15parallel_lookupItNS_3lutILj4Eu6__bf16u6__bf16EELNS_6detail14lut_oor_policyE1EE5fetchITkNS_6VectorENS_6vectorItLj16EEELj16EEENS7_Iu6__bf16XT0_EEERKT_"}
!25 = !{!26, !28}
!26 = distinct !{!26, !27, !"_ZN3aie6detail15parallel_lookupItNS0_3lutILj4Eu6__bf16u6__bf16EELNS0_14lut_oor_policyE1EE5fetchINS_6vectorItLj16EEELj16EQaaaaleclsrTL0__4sizeELi32EleTL0_0_clsrS9_4sizeEleTL0_0_sr20native_vector_lengthIT0_EE5valueEENS7_Iu6__bf16XT0_EEERKT_: argument 0"}
!27 = distinct !{!27, !"_ZN3aie6detail15parallel_lookupItNS0_3lutILj4Eu6__bf16u6__bf16EELNS0_14lut_oor_policyE1EE5fetchINS_6vectorItLj16EEELj16EQaaaaleclsrTL0__4sizeELi32EleTL0_0_clsrS9_4sizeEleTL0_0_sr20native_vector_lengthIT0_EE5valueEENS7_Iu6__bf16XT0_EEERKT_"}
!28 = distinct !{!28, !29, !"_ZN3aie15parallel_lookupItNS_3lutILj4Eu6__bf16u6__bf16EELNS_6detail14lut_oor_policyE1EE5fetchITkNS_6VectorENS_6vectorItLj16EEELj16EEENS7_Iu6__bf16XT0_EEERKT_: argument 0"}
!29 = distinct !{!29, !"_ZN3aie15parallel_lookupItNS_3lutILj4Eu6__bf16u6__bf16EELNS_6detail14lut_oor_policyE1EE5fetchITkNS_6VectorENS_6vectorItLj16EEELj16EEENS7_Iu6__bf16XT0_EEERKT_"}
!30 = !{!31, !33}
!31 = distinct !{!31, !32, !"_ZN3aie6detail15parallel_lookupItNS0_3lutILj4Eu6__bf16u6__bf16EELNS0_14lut_oor_policyE1EE5fetchINS_6vectorItLj16EEELj16EQaaaaleclsrTL0__4sizeELi32EleTL0_0_clsrS9_4sizeEleTL0_0_sr20native_vector_lengthIT0_EE5valueEENS7_Iu6__bf16XT0_EEERKT_: argument 0"}
!32 = distinct !{!32, !"_ZN3aie6detail15parallel_lookupItNS0_3lutILj4Eu6__bf16u6__bf16EELNS0_14lut_oor_policyE1EE5fetchINS_6vectorItLj16EEELj16EQaaaaleclsrTL0__4sizeELi32EleTL0_0_clsrS9_4sizeEleTL0_0_sr20native_vector_lengthIT0_EE5valueEENS7_Iu6__bf16XT0_EEERKT_"}
!33 = distinct !{!33, !34, !"_ZN3aie15parallel_lookupItNS_3lutILj4Eu6__bf16u6__bf16EELNS_6detail14lut_oor_policyE1EE5fetchITkNS_6VectorENS_6vectorItLj16EEELj16EEENS7_Iu6__bf16XT0_EEERKT_: argument 0"}
!34 = distinct !{!34, !"_ZN3aie15parallel_lookupItNS_3lutILj4Eu6__bf16u6__bf16EELNS_6detail14lut_oor_policyE1EE5fetchITkNS_6VectorENS_6vectorItLj16EEELj16EEENS7_Iu6__bf16XT0_EEERKT_"}
!35 = !{!36, !38}
!36 = distinct !{!36, !37, !"_ZN3aie6detail15parallel_lookupItNS0_3lutILj4Eu6__bf16u6__bf16EELNS0_14lut_oor_policyE1EE5fetchINS_6vectorItLj16EEELj16EQaaaaleclsrTL0__4sizeELi32EleTL0_0_clsrS9_4sizeEleTL0_0_sr20native_vector_lengthIT0_EE5valueEENS7_Iu6__bf16XT0_EEERKT_: argument 0"}
!37 = distinct !{!37, !"_ZN3aie6detail15parallel_lookupItNS0_3lutILj4Eu6__bf16u6__bf16EELNS0_14lut_oor_policyE1EE5fetchINS_6vectorItLj16EEELj16EQaaaaleclsrTL0__4sizeELi32EleTL0_0_clsrS9_4sizeEleTL0_0_sr20native_vector_lengthIT0_EE5valueEENS7_Iu6__bf16XT0_EEERKT_"}
!38 = distinct !{!38, !39, !"_ZN3aie15parallel_lookupItNS_3lutILj4Eu6__bf16u6__bf16EELNS_6detail14lut_oor_policyE1EE5fetchITkNS_6VectorENS_6vectorItLj16EEELj16EEENS7_Iu6__bf16XT0_EEERKT_: argument 0"}
!39 = distinct !{!39, !"_ZN3aie15parallel_lookupItNS_3lutILj4Eu6__bf16u6__bf16EELNS_6detail14lut_oor_policyE1EE5fetchITkNS_6VectorENS_6vectorItLj16EEELj16EEENS7_Iu6__bf16XT0_EEERKT_"}
!40 = !{!41, !43}
!41 = distinct !{!41, !42, !"_ZN3aie6detail15parallel_lookupItNS0_3lutILj4Eu6__bf16u6__bf16EELNS0_14lut_oor_policyE1EE5fetchINS_6vectorItLj16EEELj16EQaaaaleclsrTL0__4sizeELi32EleTL0_0_clsrS9_4sizeEleTL0_0_sr20native_vector_lengthIT0_EE5valueEENS7_Iu6__bf16XT0_EEERKT_: argument 0"}
!42 = distinct !{!42, !"_ZN3aie6detail15parallel_lookupItNS0_3lutILj4Eu6__bf16u6__bf16EELNS0_14lut_oor_policyE1EE5fetchINS_6vectorItLj16EEELj16EQaaaaleclsrTL0__4sizeELi32EleTL0_0_clsrS9_4sizeEleTL0_0_sr20native_vector_lengthIT0_EE5valueEENS7_Iu6__bf16XT0_EEERKT_"}
!43 = distinct !{!43, !44, !"_ZN3aie15parallel_lookupItNS_3lutILj4Eu6__bf16u6__bf16EELNS_6detail14lut_oor_policyE1EE5fetchITkNS_6VectorENS_6vectorItLj16EEELj16EEENS7_Iu6__bf16XT0_EEERKT_: argument 0"}
!44 = distinct !{!44, !"_ZN3aie15parallel_lookupItNS_3lutILj4Eu6__bf16u6__bf16EELNS_6detail14lut_oor_policyE1EE5fetchITkNS_6VectorENS_6vectorItLj16EEELj16EEENS7_Iu6__bf16XT0_EEERKT_"}
