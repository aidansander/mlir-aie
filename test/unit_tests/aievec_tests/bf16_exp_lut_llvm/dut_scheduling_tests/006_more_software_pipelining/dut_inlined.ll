; ModuleID = 'dut_inlined.cc'
source_filename = "dut_inlined.cc"
target datalayout = "e-m:e-p:20:32-i1:8:32-i8:8:32-i16:16:32-i32:32:32-f32:32:32-i64:32-f64:32-a:0:32-n32"
target triple = "aie2"

@exp_ilut_ab = external dso_local global [512 x i16], align 32
@exp_ilut_cd = external dso_local global [512 x i16], align 32
@exp_flut_ab = external dso_local global [512 x i16], align 32
@exp_flut_cd = external dso_local global [512 x i16], align 32

; Function Attrs: mustprogress nofree nounwind memory(read, argmem: readwrite)
define dso_local void @dut(ptr noalias nocapture readonly %0, ptr noalias nocapture writeonly %1) local_unnamed_addr #0 {
  %3 = tail call noundef <16 x i32> @llvm.aie2.v16int32()
  %4 = tail call noundef <16 x i32> @llvm.aie2.vbroadcast32.I512(i32 1023)
  %5 = tail call noundef <16 x i32> @llvm.aie2.vbroadcast32.I512(i32 0)
  %6 = tail call noundef <16 x bfloat> @llvm.aie2.v16bfloat16()
  %7 = tail call noundef <8 x i64> @llvm.aie2.v16accfloat()
  %8 = tail call noundef <16 x i16> @llvm.aie2.v16int16()
  %9 = load <16 x bfloat>, ptr %0, align 32, !tbaa !2
  %10 = getelementptr inbounds bfloat, ptr %0, i20 16
  %11 = load <16 x bfloat>, ptr %10, align 32, !tbaa !2
  %12 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %9, i32 8)
  %13 = getelementptr inbounds bfloat, ptr %0, i20 32
  %14 = load <16 x bfloat>, ptr %13, align 32, !tbaa !2
  %15 = tail call noundef <32 x i16> @llvm.aie2.v32int16()
  %16 = bitcast <32 x i16> %15 to <16 x i32>
  %17 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %12, <16 x i32> %16, i32 2)
  %18 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %17, i32 0)
  %19 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %11, i32 8)
  %20 = getelementptr inbounds bfloat, ptr %0, i20 48
  %21 = load <16 x bfloat>, ptr %20, align 32, !tbaa !2
  %22 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %19, <16 x i32> %16, i32 2)
  %23 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %22, i32 0)
  %24 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %14, i32 8)
  %25 = bitcast <8 x i32> %18 to <16 x i16>
  %26 = tail call noundef <32 x bfloat> @llvm.aie2.v32bfloat16()
  %27 = tail call noundef <16 x i64> @llvm.aie2.v16acc64()
  %28 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %25, i32 0, i32 0)
  %29 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %28, i32 6, i32 1)
  %30 = zext i20 ptrtoint (ptr @exp_ilut_ab to i20) to i32
  %31 = tail call noundef <16 x i32> @llvm.aie2.vbroadcast32.I512(i32 %30)
  %32 = zext i20 ptrtoint (ptr @exp_ilut_cd to i20) to i32
  %33 = tail call noundef <16 x i32> @llvm.aie2.vbroadcast32.I512(i32 %32)
  %34 = tail call noundef <16 x i32> @llvm.aie2.vsel32(<16 x i32> %31, <16 x i32> %33, i32 52428)
  %35 = add <16 x i32> %34, %29
  %36 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %35, i32 0)
  %37 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %36), !noalias !5
  %38 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %37, i32 0)
  %39 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %36), !noalias !5
  %40 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %38, <8 x i32> %39, i32 1)
  %41 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %35, i32 1)
  %42 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %41), !noalias !5
  %43 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %42, i32 0)
  %44 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %41), !noalias !5
  %45 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %43, <8 x i32> %44, i32 1)
  %46 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %40, <16 x i32> %45, i32 24)
  %47 = bitcast <16 x i32> %46 to <32 x bfloat>
  %48 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %47, i32 0)
  %49 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %28, i32 -2, i32 1)
  %50 = and <16 x i32> %49, %4
  %51 = zext i20 ptrtoint (ptr @exp_flut_ab to i20) to i32
  %52 = tail call noundef <16 x i32> @llvm.aie2.vbroadcast32.I512(i32 %51)
  %53 = zext i20 ptrtoint (ptr @exp_flut_cd to i20) to i32
  %54 = tail call noundef <16 x i32> @llvm.aie2.vbroadcast32.I512(i32 %53)
  %55 = tail call noundef <16 x i32> @llvm.aie2.vsel32(<16 x i32> %52, <16 x i32> %54, i32 52428)
  %56 = add <16 x i32> %55, %50
  %57 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %56, i32 0)
  %58 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %57), !noalias !10
  %59 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %58, i32 0)
  %60 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %57), !noalias !10
  %61 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %59, <8 x i32> %60, i32 1)
  %62 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %56, i32 1)
  %63 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %62), !noalias !10
  %64 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %63, i32 0)
  %65 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %62), !noalias !10
  %66 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %64, <8 x i32> %65, i32 1)
  %67 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %61, <16 x i32> %66, i32 24)
  %68 = bitcast <16 x i32> %67 to <32 x bfloat>
  %69 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %68, i32 0)
  %70 = getelementptr bfloat, ptr %0, i20 64
  %71 = bitcast <8 x i32> %23 to <16 x i16>
  %72 = load <16 x bfloat>, ptr %70, align 32, !tbaa !2
  %73 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %24, <16 x i32> %16, i32 2)
  %74 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %73, i32 0)
  %75 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %21, i32 8)
  %76 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %71, i32 0, i32 0)
  %77 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %76, i32 6, i32 1)
  %78 = add <16 x i32> %77, %34
  %79 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %78, i32 0)
  %80 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %79), !noalias !15
  %81 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %80, i32 0)
  %82 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %79), !noalias !15
  %83 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %81, <8 x i32> %82, i32 1)
  %84 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %78, i32 1)
  %85 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %84), !noalias !15
  %86 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %85, i32 0)
  %87 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %84), !noalias !15
  %88 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %86, <8 x i32> %87, i32 1)
  %89 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %83, <16 x i32> %88, i32 24)
  %90 = bitcast <16 x i32> %89 to <32 x bfloat>
  %91 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %90, i32 0)
  %92 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %76, i32 -2, i32 1)
  %93 = and <16 x i32> %92, %4
  %94 = add <16 x i32> %93, %55
  %95 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %94, i32 0)
  %96 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %95), !noalias !20
  %97 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %96, i32 0)
  %98 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %95), !noalias !20
  %99 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %97, <8 x i32> %98, i32 1)
  %100 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %94, i32 1)
  %101 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %100), !noalias !20
  %102 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %101, i32 0)
  %103 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %100), !noalias !20
  %104 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %102, <8 x i32> %103, i32 1)
  %105 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %99, <16 x i32> %104, i32 24)
  %106 = bitcast <16 x i32> %105 to <32 x bfloat>
  %107 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %106, i32 0)
  %108 = tail call noundef <32 x bfloat> @llvm.aie2.vbroadcast16.bf512(bfloat 0xR0000)
  %109 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %108, i32 0)
  %110 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %48, i32 0)
  %111 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %110, <16 x bfloat> %109, i32 1)
  %112 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %69, i32 0)
  %113 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %112, <16 x bfloat> %109, i32 1)
  %114 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %111, <32 x bfloat> %113, i32 60)
  %115 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %114)
  store <16 x bfloat> %115, ptr %1, align 32, !tbaa !2
  %116 = bitcast <8 x i32> %74 to <16 x i16>
  %117 = getelementptr bfloat, ptr %0, i20 80
  %118 = load <16 x bfloat>, ptr %117, align 32, !tbaa !2
  %119 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %75, <16 x i32> %16, i32 2)
  %120 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %119, i32 0)
  %121 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %72, i32 8)
  %122 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %116, i32 0, i32 0)
  %123 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %122, i32 6, i32 1)
  %124 = add <16 x i32> %123, %34
  %125 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %124, i32 0)
  %126 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %125), !noalias !15
  %127 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %126, i32 0)
  %128 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %125), !noalias !15
  %129 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %127, <8 x i32> %128, i32 1)
  %130 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %124, i32 1)
  %131 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %130), !noalias !15
  %132 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %131, i32 0)
  %133 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %130), !noalias !15
  %134 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %132, <8 x i32> %133, i32 1)
  %135 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %129, <16 x i32> %134, i32 24)
  %136 = bitcast <16 x i32> %135 to <32 x bfloat>
  %137 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %136, i32 0)
  %138 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %122, i32 -2, i32 1)
  %139 = and <16 x i32> %138, %4
  %140 = add <16 x i32> %139, %55
  %141 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %140, i32 0)
  %142 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %141), !noalias !20
  %143 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %142, i32 0)
  %144 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %141), !noalias !20
  %145 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %143, <8 x i32> %144, i32 1)
  %146 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %140, i32 1)
  %147 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %146), !noalias !20
  %148 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %147, i32 0)
  %149 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %146), !noalias !20
  %150 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %148, <8 x i32> %149, i32 1)
  %151 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %145, <16 x i32> %150, i32 24)
  %152 = bitcast <16 x i32> %151 to <32 x bfloat>
  %153 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %152, i32 0)
  %154 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %91, i32 0)
  %155 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %154, <16 x bfloat> %109, i32 1)
  %156 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %107, i32 0)
  %157 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %156, <16 x bfloat> %109, i32 1)
  %158 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %155, <32 x bfloat> %157, i32 60)
  %159 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %158)
  %160 = getelementptr inbounds bfloat, ptr %1, i20 16
  store <16 x bfloat> %159, ptr %160, align 32, !tbaa !2
  %161 = bitcast <8 x i32> %120 to <16 x i16>
  %162 = getelementptr bfloat, ptr %0, i20 96
  %163 = load <16 x bfloat>, ptr %162, align 32, !tbaa !2
  %164 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %121, <16 x i32> %16, i32 2)
  %165 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %164, i32 0)
  %166 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %118, i32 8)
  %167 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %161, i32 0, i32 0)
  %168 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %167, i32 6, i32 1)
  %169 = add <16 x i32> %168, %34
  %170 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %169, i32 0)
  %171 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %170), !noalias !15
  %172 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %171, i32 0)
  %173 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %170), !noalias !15
  %174 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %172, <8 x i32> %173, i32 1)
  %175 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %169, i32 1)
  %176 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %175), !noalias !15
  %177 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %176, i32 0)
  %178 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %175), !noalias !15
  %179 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %177, <8 x i32> %178, i32 1)
  %180 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %174, <16 x i32> %179, i32 24)
  %181 = bitcast <16 x i32> %180 to <32 x bfloat>
  %182 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %181, i32 0)
  %183 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %167, i32 -2, i32 1)
  %184 = and <16 x i32> %183, %4
  %185 = add <16 x i32> %184, %55
  %186 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %185, i32 0)
  %187 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %186), !noalias !20
  %188 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %187, i32 0)
  %189 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %186), !noalias !20
  %190 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %188, <8 x i32> %189, i32 1)
  %191 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %185, i32 1)
  %192 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %191), !noalias !20
  %193 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %192, i32 0)
  %194 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %191), !noalias !20
  %195 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %193, <8 x i32> %194, i32 1)
  %196 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %190, <16 x i32> %195, i32 24)
  %197 = bitcast <16 x i32> %196 to <32 x bfloat>
  %198 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %197, i32 0)
  %199 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %137, i32 0)
  %200 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %199, <16 x bfloat> %109, i32 1)
  %201 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %153, i32 0)
  %202 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %201, <16 x bfloat> %109, i32 1)
  %203 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %200, <32 x bfloat> %202, i32 60)
  %204 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %203)
  %205 = getelementptr inbounds bfloat, ptr %1, i20 32
  store <16 x bfloat> %204, ptr %205, align 32, !tbaa !2
  %206 = bitcast <8 x i32> %165 to <16 x i16>
  %207 = getelementptr bfloat, ptr %0, i20 112
  %208 = load <16 x bfloat>, ptr %207, align 32, !tbaa !2
  %209 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %166, <16 x i32> %16, i32 2)
  %210 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %209, i32 0)
  %211 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %163, i32 8)
  %212 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %206, i32 0, i32 0)
  %213 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %212, i32 6, i32 1)
  %214 = add <16 x i32> %213, %34
  %215 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %214, i32 0)
  %216 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %215), !noalias !15
  %217 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %216, i32 0)
  %218 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %215), !noalias !15
  %219 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %217, <8 x i32> %218, i32 1)
  %220 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %214, i32 1)
  %221 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %220), !noalias !15
  %222 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %221, i32 0)
  %223 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %220), !noalias !15
  %224 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %222, <8 x i32> %223, i32 1)
  %225 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %219, <16 x i32> %224, i32 24)
  %226 = bitcast <16 x i32> %225 to <32 x bfloat>
  %227 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %226, i32 0)
  %228 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %212, i32 -2, i32 1)
  %229 = and <16 x i32> %228, %4
  %230 = add <16 x i32> %229, %55
  %231 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %230, i32 0)
  %232 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %231), !noalias !20
  %233 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %232, i32 0)
  %234 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %231), !noalias !20
  %235 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %233, <8 x i32> %234, i32 1)
  %236 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %230, i32 1)
  %237 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %236), !noalias !20
  %238 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %237, i32 0)
  %239 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %236), !noalias !20
  %240 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %238, <8 x i32> %239, i32 1)
  %241 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %235, <16 x i32> %240, i32 24)
  %242 = bitcast <16 x i32> %241 to <32 x bfloat>
  %243 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %242, i32 0)
  %244 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %182, i32 0)
  %245 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %244, <16 x bfloat> %109, i32 1)
  %246 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %198, i32 0)
  %247 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %246, <16 x bfloat> %109, i32 1)
  %248 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %245, <32 x bfloat> %247, i32 60)
  %249 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %248)
  %250 = getelementptr inbounds bfloat, ptr %1, i20 48
  store <16 x bfloat> %249, ptr %250, align 32, !tbaa !2
  %251 = bitcast <8 x i32> %210 to <16 x i16>
  %252 = getelementptr bfloat, ptr %0, i20 128
  %253 = load <16 x bfloat>, ptr %252, align 32, !tbaa !2
  %254 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %211, <16 x i32> %16, i32 2)
  %255 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %254, i32 0)
  %256 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %208, i32 8)
  %257 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %251, i32 0, i32 0)
  %258 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %257, i32 6, i32 1)
  %259 = add <16 x i32> %258, %34
  %260 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %259, i32 0)
  %261 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %260), !noalias !15
  %262 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %261, i32 0)
  %263 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %260), !noalias !15
  %264 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %262, <8 x i32> %263, i32 1)
  %265 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %259, i32 1)
  %266 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %265), !noalias !15
  %267 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %266, i32 0)
  %268 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %265), !noalias !15
  %269 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %267, <8 x i32> %268, i32 1)
  %270 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %264, <16 x i32> %269, i32 24)
  %271 = bitcast <16 x i32> %270 to <32 x bfloat>
  %272 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %271, i32 0)
  %273 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %257, i32 -2, i32 1)
  %274 = and <16 x i32> %273, %4
  %275 = add <16 x i32> %274, %55
  %276 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %275, i32 0)
  %277 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %276), !noalias !20
  %278 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %277, i32 0)
  %279 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %276), !noalias !20
  %280 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %278, <8 x i32> %279, i32 1)
  %281 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %275, i32 1)
  %282 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %281), !noalias !20
  %283 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %282, i32 0)
  %284 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %281), !noalias !20
  %285 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %283, <8 x i32> %284, i32 1)
  %286 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %280, <16 x i32> %285, i32 24)
  %287 = bitcast <16 x i32> %286 to <32 x bfloat>
  %288 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %287, i32 0)
  %289 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %227, i32 0)
  %290 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %289, <16 x bfloat> %109, i32 1)
  %291 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %243, i32 0)
  %292 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %291, <16 x bfloat> %109, i32 1)
  %293 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %290, <32 x bfloat> %292, i32 60)
  %294 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %293)
  %295 = getelementptr inbounds bfloat, ptr %1, i20 64
  store <16 x bfloat> %294, ptr %295, align 32, !tbaa !2
  %296 = bitcast <8 x i32> %255 to <16 x i16>
  %297 = getelementptr bfloat, ptr %0, i20 144
  %298 = load <16 x bfloat>, ptr %297, align 32, !tbaa !2
  %299 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %256, <16 x i32> %16, i32 2)
  %300 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %299, i32 0)
  %301 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %253, i32 8)
  %302 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %296, i32 0, i32 0)
  %303 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %302, i32 6, i32 1)
  %304 = add <16 x i32> %303, %34
  %305 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %304, i32 0)
  %306 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %305), !noalias !15
  %307 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %306, i32 0)
  %308 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %305), !noalias !15
  %309 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %307, <8 x i32> %308, i32 1)
  %310 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %304, i32 1)
  %311 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %310), !noalias !15
  %312 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %311, i32 0)
  %313 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %310), !noalias !15
  %314 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %312, <8 x i32> %313, i32 1)
  %315 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %309, <16 x i32> %314, i32 24)
  %316 = bitcast <16 x i32> %315 to <32 x bfloat>
  %317 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %316, i32 0)
  %318 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %302, i32 -2, i32 1)
  %319 = and <16 x i32> %318, %4
  %320 = add <16 x i32> %319, %55
  %321 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %320, i32 0)
  %322 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %321), !noalias !20
  %323 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %322, i32 0)
  %324 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %321), !noalias !20
  %325 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %323, <8 x i32> %324, i32 1)
  %326 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %320, i32 1)
  %327 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %326), !noalias !20
  %328 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %327, i32 0)
  %329 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %326), !noalias !20
  %330 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %328, <8 x i32> %329, i32 1)
  %331 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %325, <16 x i32> %330, i32 24)
  %332 = bitcast <16 x i32> %331 to <32 x bfloat>
  %333 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %332, i32 0)
  %334 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %272, i32 0)
  %335 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %334, <16 x bfloat> %109, i32 1)
  %336 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %288, i32 0)
  %337 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %336, <16 x bfloat> %109, i32 1)
  %338 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %335, <32 x bfloat> %337, i32 60)
  %339 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %338)
  %340 = getelementptr inbounds bfloat, ptr %1, i20 80
  store <16 x bfloat> %339, ptr %340, align 32, !tbaa !2
  %341 = bitcast <8 x i32> %300 to <16 x i16>
  %342 = getelementptr bfloat, ptr %0, i20 160
  %343 = load <16 x bfloat>, ptr %342, align 32, !tbaa !2
  %344 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %301, <16 x i32> %16, i32 2)
  %345 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %344, i32 0)
  %346 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %298, i32 8)
  %347 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %341, i32 0, i32 0)
  %348 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %347, i32 6, i32 1)
  %349 = add <16 x i32> %348, %34
  %350 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %349, i32 0)
  %351 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %350), !noalias !15
  %352 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %351, i32 0)
  %353 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %350), !noalias !15
  %354 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %352, <8 x i32> %353, i32 1)
  %355 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %349, i32 1)
  %356 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %355), !noalias !15
  %357 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %356, i32 0)
  %358 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %355), !noalias !15
  %359 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %357, <8 x i32> %358, i32 1)
  %360 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %354, <16 x i32> %359, i32 24)
  %361 = bitcast <16 x i32> %360 to <32 x bfloat>
  %362 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %361, i32 0)
  %363 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %347, i32 -2, i32 1)
  %364 = and <16 x i32> %363, %4
  %365 = add <16 x i32> %364, %55
  %366 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %365, i32 0)
  %367 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %366), !noalias !20
  %368 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %367, i32 0)
  %369 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %366), !noalias !20
  %370 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %368, <8 x i32> %369, i32 1)
  %371 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %365, i32 1)
  %372 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %371), !noalias !20
  %373 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %372, i32 0)
  %374 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %371), !noalias !20
  %375 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %373, <8 x i32> %374, i32 1)
  %376 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %370, <16 x i32> %375, i32 24)
  %377 = bitcast <16 x i32> %376 to <32 x bfloat>
  %378 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %377, i32 0)
  %379 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %317, i32 0)
  %380 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %379, <16 x bfloat> %109, i32 1)
  %381 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %333, i32 0)
  %382 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %381, <16 x bfloat> %109, i32 1)
  %383 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %380, <32 x bfloat> %382, i32 60)
  %384 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %383)
  %385 = getelementptr inbounds bfloat, ptr %1, i20 96
  store <16 x bfloat> %384, ptr %385, align 32, !tbaa !2
  %386 = bitcast <8 x i32> %345 to <16 x i16>
  %387 = getelementptr bfloat, ptr %0, i20 176
  %388 = load <16 x bfloat>, ptr %387, align 32, !tbaa !2
  %389 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %346, <16 x i32> %16, i32 2)
  %390 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %389, i32 0)
  %391 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %343, i32 8)
  %392 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %386, i32 0, i32 0)
  %393 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %392, i32 6, i32 1)
  %394 = add <16 x i32> %393, %34
  %395 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %394, i32 0)
  %396 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %395), !noalias !15
  %397 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %396, i32 0)
  %398 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %395), !noalias !15
  %399 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %397, <8 x i32> %398, i32 1)
  %400 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %394, i32 1)
  %401 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %400), !noalias !15
  %402 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %401, i32 0)
  %403 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %400), !noalias !15
  %404 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %402, <8 x i32> %403, i32 1)
  %405 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %399, <16 x i32> %404, i32 24)
  %406 = bitcast <16 x i32> %405 to <32 x bfloat>
  %407 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %406, i32 0)
  %408 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %392, i32 -2, i32 1)
  %409 = and <16 x i32> %408, %4
  %410 = add <16 x i32> %409, %55
  %411 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %410, i32 0)
  %412 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %411), !noalias !20
  %413 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %412, i32 0)
  %414 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %411), !noalias !20
  %415 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %413, <8 x i32> %414, i32 1)
  %416 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %410, i32 1)
  %417 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %416), !noalias !20
  %418 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %417, i32 0)
  %419 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %416), !noalias !20
  %420 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %418, <8 x i32> %419, i32 1)
  %421 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %415, <16 x i32> %420, i32 24)
  %422 = bitcast <16 x i32> %421 to <32 x bfloat>
  %423 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %422, i32 0)
  %424 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %362, i32 0)
  %425 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %424, <16 x bfloat> %109, i32 1)
  %426 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %378, i32 0)
  %427 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %426, <16 x bfloat> %109, i32 1)
  %428 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %425, <32 x bfloat> %427, i32 60)
  %429 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %428)
  %430 = getelementptr inbounds bfloat, ptr %1, i20 112
  store <16 x bfloat> %429, ptr %430, align 32, !tbaa !2
  %431 = bitcast <8 x i32> %390 to <16 x i16>
  %432 = getelementptr bfloat, ptr %0, i20 192
  %433 = load <16 x bfloat>, ptr %432, align 32, !tbaa !2
  %434 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %391, <16 x i32> %16, i32 2)
  %435 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %434, i32 0)
  %436 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %388, i32 8)
  %437 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %431, i32 0, i32 0)
  %438 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %437, i32 6, i32 1)
  %439 = add <16 x i32> %438, %34
  %440 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %439, i32 0)
  %441 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %440), !noalias !15
  %442 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %441, i32 0)
  %443 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %440), !noalias !15
  %444 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %442, <8 x i32> %443, i32 1)
  %445 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %439, i32 1)
  %446 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %445), !noalias !15
  %447 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %446, i32 0)
  %448 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %445), !noalias !15
  %449 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %447, <8 x i32> %448, i32 1)
  %450 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %444, <16 x i32> %449, i32 24)
  %451 = bitcast <16 x i32> %450 to <32 x bfloat>
  %452 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %451, i32 0)
  %453 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %437, i32 -2, i32 1)
  %454 = and <16 x i32> %453, %4
  %455 = add <16 x i32> %454, %55
  %456 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %455, i32 0)
  %457 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %456), !noalias !20
  %458 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %457, i32 0)
  %459 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %456), !noalias !20
  %460 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %458, <8 x i32> %459, i32 1)
  %461 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %455, i32 1)
  %462 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %461), !noalias !20
  %463 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %462, i32 0)
  %464 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %461), !noalias !20
  %465 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %463, <8 x i32> %464, i32 1)
  %466 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %460, <16 x i32> %465, i32 24)
  %467 = bitcast <16 x i32> %466 to <32 x bfloat>
  %468 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %467, i32 0)
  %469 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %407, i32 0)
  %470 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %469, <16 x bfloat> %109, i32 1)
  %471 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %423, i32 0)
  %472 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %471, <16 x bfloat> %109, i32 1)
  %473 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %470, <32 x bfloat> %472, i32 60)
  %474 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %473)
  %475 = getelementptr inbounds bfloat, ptr %1, i20 128
  store <16 x bfloat> %474, ptr %475, align 32, !tbaa !2
  %476 = bitcast <8 x i32> %435 to <16 x i16>
  %477 = getelementptr bfloat, ptr %0, i20 208
  %478 = load <16 x bfloat>, ptr %477, align 32, !tbaa !2
  %479 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %436, <16 x i32> %16, i32 2)
  %480 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %479, i32 0)
  %481 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %433, i32 8)
  %482 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %476, i32 0, i32 0)
  %483 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %482, i32 6, i32 1)
  %484 = add <16 x i32> %483, %34
  %485 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %484, i32 0)
  %486 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %485), !noalias !15
  %487 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %486, i32 0)
  %488 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %485), !noalias !15
  %489 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %487, <8 x i32> %488, i32 1)
  %490 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %484, i32 1)
  %491 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %490), !noalias !15
  %492 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %491, i32 0)
  %493 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %490), !noalias !15
  %494 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %492, <8 x i32> %493, i32 1)
  %495 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %489, <16 x i32> %494, i32 24)
  %496 = bitcast <16 x i32> %495 to <32 x bfloat>
  %497 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %496, i32 0)
  %498 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %482, i32 -2, i32 1)
  %499 = and <16 x i32> %498, %4
  %500 = add <16 x i32> %499, %55
  %501 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %500, i32 0)
  %502 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %501), !noalias !20
  %503 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %502, i32 0)
  %504 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %501), !noalias !20
  %505 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %503, <8 x i32> %504, i32 1)
  %506 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %500, i32 1)
  %507 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %506), !noalias !20
  %508 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %507, i32 0)
  %509 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %506), !noalias !20
  %510 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %508, <8 x i32> %509, i32 1)
  %511 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %505, <16 x i32> %510, i32 24)
  %512 = bitcast <16 x i32> %511 to <32 x bfloat>
  %513 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %512, i32 0)
  %514 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %452, i32 0)
  %515 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %514, <16 x bfloat> %109, i32 1)
  %516 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %468, i32 0)
  %517 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %516, <16 x bfloat> %109, i32 1)
  %518 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %515, <32 x bfloat> %517, i32 60)
  %519 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %518)
  %520 = getelementptr inbounds bfloat, ptr %1, i20 144
  store <16 x bfloat> %519, ptr %520, align 32, !tbaa !2
  %521 = bitcast <8 x i32> %480 to <16 x i16>
  %522 = getelementptr bfloat, ptr %0, i20 224
  %523 = load <16 x bfloat>, ptr %522, align 32, !tbaa !2
  %524 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %481, <16 x i32> %16, i32 2)
  %525 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %524, i32 0)
  %526 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %478, i32 8)
  %527 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %521, i32 0, i32 0)
  %528 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %527, i32 6, i32 1)
  %529 = add <16 x i32> %528, %34
  %530 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %529, i32 0)
  %531 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %530), !noalias !15
  %532 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %531, i32 0)
  %533 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %530), !noalias !15
  %534 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %532, <8 x i32> %533, i32 1)
  %535 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %529, i32 1)
  %536 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %535), !noalias !15
  %537 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %536, i32 0)
  %538 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %535), !noalias !15
  %539 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %537, <8 x i32> %538, i32 1)
  %540 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %534, <16 x i32> %539, i32 24)
  %541 = bitcast <16 x i32> %540 to <32 x bfloat>
  %542 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %541, i32 0)
  %543 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %527, i32 -2, i32 1)
  %544 = and <16 x i32> %543, %4
  %545 = add <16 x i32> %544, %55
  %546 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %545, i32 0)
  %547 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %546), !noalias !20
  %548 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %547, i32 0)
  %549 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %546), !noalias !20
  %550 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %548, <8 x i32> %549, i32 1)
  %551 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %545, i32 1)
  %552 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %551), !noalias !20
  %553 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %552, i32 0)
  %554 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %551), !noalias !20
  %555 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %553, <8 x i32> %554, i32 1)
  %556 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %550, <16 x i32> %555, i32 24)
  %557 = bitcast <16 x i32> %556 to <32 x bfloat>
  %558 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %557, i32 0)
  %559 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %497, i32 0)
  %560 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %559, <16 x bfloat> %109, i32 1)
  %561 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %513, i32 0)
  %562 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %561, <16 x bfloat> %109, i32 1)
  %563 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %560, <32 x bfloat> %562, i32 60)
  %564 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %563)
  %565 = getelementptr inbounds bfloat, ptr %1, i20 160
  store <16 x bfloat> %564, ptr %565, align 32, !tbaa !2
  %566 = bitcast <8 x i32> %525 to <16 x i16>
  %567 = getelementptr bfloat, ptr %0, i20 240
  %568 = load <16 x bfloat>, ptr %567, align 32, !tbaa !2
  %569 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %526, <16 x i32> %16, i32 2)
  %570 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %569, i32 0)
  %571 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %523, i32 8)
  %572 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %566, i32 0, i32 0)
  %573 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %572, i32 6, i32 1)
  %574 = add <16 x i32> %573, %34
  %575 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %574, i32 0)
  %576 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %575), !noalias !15
  %577 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %576, i32 0)
  %578 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %575), !noalias !15
  %579 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %577, <8 x i32> %578, i32 1)
  %580 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %574, i32 1)
  %581 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %580), !noalias !15
  %582 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %581, i32 0)
  %583 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %580), !noalias !15
  %584 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %582, <8 x i32> %583, i32 1)
  %585 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %579, <16 x i32> %584, i32 24)
  %586 = bitcast <16 x i32> %585 to <32 x bfloat>
  %587 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %586, i32 0)
  %588 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %572, i32 -2, i32 1)
  %589 = and <16 x i32> %588, %4
  %590 = add <16 x i32> %589, %55
  %591 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %590, i32 0)
  %592 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %591), !noalias !20
  %593 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %592, i32 0)
  %594 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %591), !noalias !20
  %595 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %593, <8 x i32> %594, i32 1)
  %596 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %590, i32 1)
  %597 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %596), !noalias !20
  %598 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %597, i32 0)
  %599 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %596), !noalias !20
  %600 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %598, <8 x i32> %599, i32 1)
  %601 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %595, <16 x i32> %600, i32 24)
  %602 = bitcast <16 x i32> %601 to <32 x bfloat>
  %603 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %602, i32 0)
  %604 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %542, i32 0)
  %605 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %604, <16 x bfloat> %109, i32 1)
  %606 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %558, i32 0)
  %607 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %606, <16 x bfloat> %109, i32 1)
  %608 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %605, <32 x bfloat> %607, i32 60)
  %609 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %608)
  %610 = getelementptr inbounds bfloat, ptr %1, i20 176
  store <16 x bfloat> %609, ptr %610, align 32, !tbaa !2
  %611 = bitcast <8 x i32> %570 to <16 x i16>
  %612 = getelementptr bfloat, ptr %0, i20 256
  %613 = load <16 x bfloat>, ptr %612, align 32, !tbaa !2
  %614 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %571, <16 x i32> %16, i32 2)
  %615 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %614, i32 0)
  %616 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %568, i32 8)
  %617 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %611, i32 0, i32 0)
  %618 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %617, i32 6, i32 1)
  %619 = add <16 x i32> %618, %34
  %620 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %619, i32 0)
  %621 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %620), !noalias !15
  %622 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %621, i32 0)
  %623 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %620), !noalias !15
  %624 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %622, <8 x i32> %623, i32 1)
  %625 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %619, i32 1)
  %626 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %625), !noalias !15
  %627 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %626, i32 0)
  %628 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %625), !noalias !15
  %629 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %627, <8 x i32> %628, i32 1)
  %630 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %624, <16 x i32> %629, i32 24)
  %631 = bitcast <16 x i32> %630 to <32 x bfloat>
  %632 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %631, i32 0)
  %633 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %617, i32 -2, i32 1)
  %634 = and <16 x i32> %633, %4
  %635 = add <16 x i32> %634, %55
  %636 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %635, i32 0)
  %637 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %636), !noalias !20
  %638 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %637, i32 0)
  %639 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %636), !noalias !20
  %640 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %638, <8 x i32> %639, i32 1)
  %641 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %635, i32 1)
  %642 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %641), !noalias !20
  %643 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %642, i32 0)
  %644 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %641), !noalias !20
  %645 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %643, <8 x i32> %644, i32 1)
  %646 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %640, <16 x i32> %645, i32 24)
  %647 = bitcast <16 x i32> %646 to <32 x bfloat>
  %648 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %647, i32 0)
  %649 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %587, i32 0)
  %650 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %649, <16 x bfloat> %109, i32 1)
  %651 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %603, i32 0)
  %652 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %651, <16 x bfloat> %109, i32 1)
  %653 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %650, <32 x bfloat> %652, i32 60)
  %654 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %653)
  %655 = getelementptr inbounds bfloat, ptr %1, i20 192
  store <16 x bfloat> %654, ptr %655, align 32, !tbaa !2
  %656 = bitcast <8 x i32> %615 to <16 x i16>
  %657 = getelementptr bfloat, ptr %0, i20 272
  %658 = load <16 x bfloat>, ptr %657, align 32, !tbaa !2
  %659 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %616, <16 x i32> %16, i32 2)
  %660 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %659, i32 0)
  %661 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %613, i32 8)
  %662 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %656, i32 0, i32 0)
  %663 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %662, i32 6, i32 1)
  %664 = add <16 x i32> %663, %34
  %665 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %664, i32 0)
  %666 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %665), !noalias !15
  %667 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %666, i32 0)
  %668 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %665), !noalias !15
  %669 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %667, <8 x i32> %668, i32 1)
  %670 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %664, i32 1)
  %671 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %670), !noalias !15
  %672 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %671, i32 0)
  %673 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %670), !noalias !15
  %674 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %672, <8 x i32> %673, i32 1)
  %675 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %669, <16 x i32> %674, i32 24)
  %676 = bitcast <16 x i32> %675 to <32 x bfloat>
  %677 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %676, i32 0)
  %678 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %662, i32 -2, i32 1)
  %679 = and <16 x i32> %678, %4
  %680 = add <16 x i32> %679, %55
  %681 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %680, i32 0)
  %682 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %681), !noalias !20
  %683 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %682, i32 0)
  %684 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %681), !noalias !20
  %685 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %683, <8 x i32> %684, i32 1)
  %686 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %680, i32 1)
  %687 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %686), !noalias !20
  %688 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %687, i32 0)
  %689 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %686), !noalias !20
  %690 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %688, <8 x i32> %689, i32 1)
  %691 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %685, <16 x i32> %690, i32 24)
  %692 = bitcast <16 x i32> %691 to <32 x bfloat>
  %693 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %692, i32 0)
  %694 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %632, i32 0)
  %695 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %694, <16 x bfloat> %109, i32 1)
  %696 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %648, i32 0)
  %697 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %696, <16 x bfloat> %109, i32 1)
  %698 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %695, <32 x bfloat> %697, i32 60)
  %699 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %698)
  %700 = getelementptr inbounds bfloat, ptr %1, i20 208
  store <16 x bfloat> %699, ptr %700, align 32, !tbaa !2
  %701 = bitcast <8 x i32> %660 to <16 x i16>
  %702 = getelementptr bfloat, ptr %0, i20 288
  %703 = load <16 x bfloat>, ptr %702, align 32, !tbaa !2
  %704 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %661, <16 x i32> %16, i32 2)
  %705 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %704, i32 0)
  %706 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %658, i32 8)
  %707 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %701, i32 0, i32 0)
  %708 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %707, i32 6, i32 1)
  %709 = add <16 x i32> %708, %34
  %710 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %709, i32 0)
  %711 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %710), !noalias !15
  %712 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %711, i32 0)
  %713 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %710), !noalias !15
  %714 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %712, <8 x i32> %713, i32 1)
  %715 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %709, i32 1)
  %716 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %715), !noalias !15
  %717 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %716, i32 0)
  %718 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %715), !noalias !15
  %719 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %717, <8 x i32> %718, i32 1)
  %720 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %714, <16 x i32> %719, i32 24)
  %721 = bitcast <16 x i32> %720 to <32 x bfloat>
  %722 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %721, i32 0)
  %723 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %707, i32 -2, i32 1)
  %724 = and <16 x i32> %723, %4
  %725 = add <16 x i32> %724, %55
  %726 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %725, i32 0)
  %727 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %726), !noalias !20
  %728 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %727, i32 0)
  %729 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %726), !noalias !20
  %730 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %728, <8 x i32> %729, i32 1)
  %731 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %725, i32 1)
  %732 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %731), !noalias !20
  %733 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %732, i32 0)
  %734 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %731), !noalias !20
  %735 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %733, <8 x i32> %734, i32 1)
  %736 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %730, <16 x i32> %735, i32 24)
  %737 = bitcast <16 x i32> %736 to <32 x bfloat>
  %738 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %737, i32 0)
  %739 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %677, i32 0)
  %740 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %739, <16 x bfloat> %109, i32 1)
  %741 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %693, i32 0)
  %742 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %741, <16 x bfloat> %109, i32 1)
  %743 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %740, <32 x bfloat> %742, i32 60)
  %744 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %743)
  %745 = getelementptr inbounds bfloat, ptr %1, i20 224
  store <16 x bfloat> %744, ptr %745, align 32, !tbaa !2
  %746 = bitcast <8 x i32> %705 to <16 x i16>
  %747 = getelementptr bfloat, ptr %0, i20 304
  %748 = load <16 x bfloat>, ptr %747, align 32, !tbaa !2
  %749 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %706, <16 x i32> %16, i32 2)
  %750 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %749, i32 0)
  %751 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %703, i32 8)
  %752 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %746, i32 0, i32 0)
  %753 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %752, i32 6, i32 1)
  %754 = add <16 x i32> %753, %34
  %755 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %754, i32 0)
  %756 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %755), !noalias !15
  %757 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %756, i32 0)
  %758 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %755), !noalias !15
  %759 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %757, <8 x i32> %758, i32 1)
  %760 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %754, i32 1)
  %761 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %760), !noalias !15
  %762 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %761, i32 0)
  %763 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %760), !noalias !15
  %764 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %762, <8 x i32> %763, i32 1)
  %765 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %759, <16 x i32> %764, i32 24)
  %766 = bitcast <16 x i32> %765 to <32 x bfloat>
  %767 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %766, i32 0)
  %768 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %752, i32 -2, i32 1)
  %769 = and <16 x i32> %768, %4
  %770 = add <16 x i32> %769, %55
  %771 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %770, i32 0)
  %772 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %771), !noalias !20
  %773 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %772, i32 0)
  %774 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %771), !noalias !20
  %775 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %773, <8 x i32> %774, i32 1)
  %776 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %770, i32 1)
  %777 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %776), !noalias !20
  %778 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %777, i32 0)
  %779 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %776), !noalias !20
  %780 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %778, <8 x i32> %779, i32 1)
  %781 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %775, <16 x i32> %780, i32 24)
  %782 = bitcast <16 x i32> %781 to <32 x bfloat>
  %783 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %782, i32 0)
  %784 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %722, i32 0)
  %785 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %784, <16 x bfloat> %109, i32 1)
  %786 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %738, i32 0)
  %787 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %786, <16 x bfloat> %109, i32 1)
  %788 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %785, <32 x bfloat> %787, i32 60)
  %789 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %788)
  %790 = getelementptr inbounds bfloat, ptr %1, i20 240
  store <16 x bfloat> %789, ptr %790, align 32, !tbaa !2
  %791 = bitcast <8 x i32> %750 to <16 x i16>
  %792 = getelementptr bfloat, ptr %0, i20 320
  %793 = load <16 x bfloat>, ptr %792, align 32, !tbaa !2
  %794 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %751, <16 x i32> %16, i32 2)
  %795 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %794, i32 0)
  %796 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %748, i32 8)
  %797 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %791, i32 0, i32 0)
  %798 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %797, i32 6, i32 1)
  %799 = add <16 x i32> %798, %34
  %800 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %799, i32 0)
  %801 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %800), !noalias !15
  %802 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %801, i32 0)
  %803 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %800), !noalias !15
  %804 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %802, <8 x i32> %803, i32 1)
  %805 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %799, i32 1)
  %806 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %805), !noalias !15
  %807 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %806, i32 0)
  %808 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %805), !noalias !15
  %809 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %807, <8 x i32> %808, i32 1)
  %810 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %804, <16 x i32> %809, i32 24)
  %811 = bitcast <16 x i32> %810 to <32 x bfloat>
  %812 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %811, i32 0)
  %813 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %797, i32 -2, i32 1)
  %814 = and <16 x i32> %813, %4
  %815 = add <16 x i32> %814, %55
  %816 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %815, i32 0)
  %817 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %816), !noalias !20
  %818 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %817, i32 0)
  %819 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %816), !noalias !20
  %820 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %818, <8 x i32> %819, i32 1)
  %821 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %815, i32 1)
  %822 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %821), !noalias !20
  %823 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %822, i32 0)
  %824 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %821), !noalias !20
  %825 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %823, <8 x i32> %824, i32 1)
  %826 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %820, <16 x i32> %825, i32 24)
  %827 = bitcast <16 x i32> %826 to <32 x bfloat>
  %828 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %827, i32 0)
  %829 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %767, i32 0)
  %830 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %829, <16 x bfloat> %109, i32 1)
  %831 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %783, i32 0)
  %832 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %831, <16 x bfloat> %109, i32 1)
  %833 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %830, <32 x bfloat> %832, i32 60)
  %834 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %833)
  %835 = getelementptr inbounds bfloat, ptr %1, i20 256
  store <16 x bfloat> %834, ptr %835, align 32, !tbaa !2
  %836 = bitcast <8 x i32> %795 to <16 x i16>
  %837 = getelementptr bfloat, ptr %0, i20 336
  %838 = load <16 x bfloat>, ptr %837, align 32, !tbaa !2
  %839 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %796, <16 x i32> %16, i32 2)
  %840 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %839, i32 0)
  %841 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %793, i32 8)
  %842 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %836, i32 0, i32 0)
  %843 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %842, i32 6, i32 1)
  %844 = add <16 x i32> %843, %34
  %845 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %844, i32 0)
  %846 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %845), !noalias !15
  %847 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %846, i32 0)
  %848 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %845), !noalias !15
  %849 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %847, <8 x i32> %848, i32 1)
  %850 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %844, i32 1)
  %851 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %850), !noalias !15
  %852 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %851, i32 0)
  %853 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %850), !noalias !15
  %854 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %852, <8 x i32> %853, i32 1)
  %855 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %849, <16 x i32> %854, i32 24)
  %856 = bitcast <16 x i32> %855 to <32 x bfloat>
  %857 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %856, i32 0)
  %858 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %842, i32 -2, i32 1)
  %859 = and <16 x i32> %858, %4
  %860 = add <16 x i32> %859, %55
  %861 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %860, i32 0)
  %862 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %861), !noalias !20
  %863 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %862, i32 0)
  %864 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %861), !noalias !20
  %865 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %863, <8 x i32> %864, i32 1)
  %866 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %860, i32 1)
  %867 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %866), !noalias !20
  %868 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %867, i32 0)
  %869 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %866), !noalias !20
  %870 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %868, <8 x i32> %869, i32 1)
  %871 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %865, <16 x i32> %870, i32 24)
  %872 = bitcast <16 x i32> %871 to <32 x bfloat>
  %873 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %872, i32 0)
  %874 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %812, i32 0)
  %875 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %874, <16 x bfloat> %109, i32 1)
  %876 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %828, i32 0)
  %877 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %876, <16 x bfloat> %109, i32 1)
  %878 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %875, <32 x bfloat> %877, i32 60)
  %879 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %878)
  %880 = getelementptr inbounds bfloat, ptr %1, i20 272
  store <16 x bfloat> %879, ptr %880, align 32, !tbaa !2
  %881 = bitcast <8 x i32> %840 to <16 x i16>
  %882 = getelementptr bfloat, ptr %0, i20 352
  %883 = load <16 x bfloat>, ptr %882, align 32, !tbaa !2
  %884 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %841, <16 x i32> %16, i32 2)
  %885 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %884, i32 0)
  %886 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %838, i32 8)
  %887 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %881, i32 0, i32 0)
  %888 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %887, i32 6, i32 1)
  %889 = add <16 x i32> %888, %34
  %890 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %889, i32 0)
  %891 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %890), !noalias !15
  %892 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %891, i32 0)
  %893 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %890), !noalias !15
  %894 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %892, <8 x i32> %893, i32 1)
  %895 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %889, i32 1)
  %896 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %895), !noalias !15
  %897 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %896, i32 0)
  %898 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %895), !noalias !15
  %899 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %897, <8 x i32> %898, i32 1)
  %900 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %894, <16 x i32> %899, i32 24)
  %901 = bitcast <16 x i32> %900 to <32 x bfloat>
  %902 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %901, i32 0)
  %903 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %887, i32 -2, i32 1)
  %904 = and <16 x i32> %903, %4
  %905 = add <16 x i32> %904, %55
  %906 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %905, i32 0)
  %907 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %906), !noalias !20
  %908 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %907, i32 0)
  %909 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %906), !noalias !20
  %910 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %908, <8 x i32> %909, i32 1)
  %911 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %905, i32 1)
  %912 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %911), !noalias !20
  %913 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %912, i32 0)
  %914 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %911), !noalias !20
  %915 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %913, <8 x i32> %914, i32 1)
  %916 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %910, <16 x i32> %915, i32 24)
  %917 = bitcast <16 x i32> %916 to <32 x bfloat>
  %918 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %917, i32 0)
  %919 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %857, i32 0)
  %920 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %919, <16 x bfloat> %109, i32 1)
  %921 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %873, i32 0)
  %922 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %921, <16 x bfloat> %109, i32 1)
  %923 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %920, <32 x bfloat> %922, i32 60)
  %924 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %923)
  %925 = getelementptr inbounds bfloat, ptr %1, i20 288
  store <16 x bfloat> %924, ptr %925, align 32, !tbaa !2
  %926 = bitcast <8 x i32> %885 to <16 x i16>
  %927 = getelementptr bfloat, ptr %0, i20 368
  %928 = load <16 x bfloat>, ptr %927, align 32, !tbaa !2
  %929 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %886, <16 x i32> %16, i32 2)
  %930 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %929, i32 0)
  %931 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %883, i32 8)
  %932 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %926, i32 0, i32 0)
  %933 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %932, i32 6, i32 1)
  %934 = add <16 x i32> %933, %34
  %935 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %934, i32 0)
  %936 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %935), !noalias !15
  %937 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %936, i32 0)
  %938 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %935), !noalias !15
  %939 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %937, <8 x i32> %938, i32 1)
  %940 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %934, i32 1)
  %941 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %940), !noalias !15
  %942 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %941, i32 0)
  %943 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %940), !noalias !15
  %944 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %942, <8 x i32> %943, i32 1)
  %945 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %939, <16 x i32> %944, i32 24)
  %946 = bitcast <16 x i32> %945 to <32 x bfloat>
  %947 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %946, i32 0)
  %948 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %932, i32 -2, i32 1)
  %949 = and <16 x i32> %948, %4
  %950 = add <16 x i32> %949, %55
  %951 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %950, i32 0)
  %952 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %951), !noalias !20
  %953 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %952, i32 0)
  %954 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %951), !noalias !20
  %955 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %953, <8 x i32> %954, i32 1)
  %956 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %950, i32 1)
  %957 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %956), !noalias !20
  %958 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %957, i32 0)
  %959 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %956), !noalias !20
  %960 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %958, <8 x i32> %959, i32 1)
  %961 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %955, <16 x i32> %960, i32 24)
  %962 = bitcast <16 x i32> %961 to <32 x bfloat>
  %963 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %962, i32 0)
  %964 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %902, i32 0)
  %965 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %964, <16 x bfloat> %109, i32 1)
  %966 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %918, i32 0)
  %967 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %966, <16 x bfloat> %109, i32 1)
  %968 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %965, <32 x bfloat> %967, i32 60)
  %969 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %968)
  %970 = getelementptr inbounds bfloat, ptr %1, i20 304
  store <16 x bfloat> %969, ptr %970, align 32, !tbaa !2
  %971 = bitcast <8 x i32> %930 to <16 x i16>
  %972 = getelementptr bfloat, ptr %0, i20 384
  %973 = load <16 x bfloat>, ptr %972, align 32, !tbaa !2
  %974 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %931, <16 x i32> %16, i32 2)
  %975 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %974, i32 0)
  %976 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %928, i32 8)
  %977 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %971, i32 0, i32 0)
  %978 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %977, i32 6, i32 1)
  %979 = add <16 x i32> %978, %34
  %980 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %979, i32 0)
  %981 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %980), !noalias !15
  %982 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %981, i32 0)
  %983 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %980), !noalias !15
  %984 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %982, <8 x i32> %983, i32 1)
  %985 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %979, i32 1)
  %986 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %985), !noalias !15
  %987 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %986, i32 0)
  %988 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %985), !noalias !15
  %989 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %987, <8 x i32> %988, i32 1)
  %990 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %984, <16 x i32> %989, i32 24)
  %991 = bitcast <16 x i32> %990 to <32 x bfloat>
  %992 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %991, i32 0)
  %993 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %977, i32 -2, i32 1)
  %994 = and <16 x i32> %993, %4
  %995 = add <16 x i32> %994, %55
  %996 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %995, i32 0)
  %997 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %996), !noalias !20
  %998 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %997, i32 0)
  %999 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %996), !noalias !20
  %1000 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %998, <8 x i32> %999, i32 1)
  %1001 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %995, i32 1)
  %1002 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1001), !noalias !20
  %1003 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1002, i32 0)
  %1004 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1001), !noalias !20
  %1005 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1003, <8 x i32> %1004, i32 1)
  %1006 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1000, <16 x i32> %1005, i32 24)
  %1007 = bitcast <16 x i32> %1006 to <32 x bfloat>
  %1008 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1007, i32 0)
  %1009 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %947, i32 0)
  %1010 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1009, <16 x bfloat> %109, i32 1)
  %1011 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %963, i32 0)
  %1012 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1011, <16 x bfloat> %109, i32 1)
  %1013 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1010, <32 x bfloat> %1012, i32 60)
  %1014 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %1013)
  %1015 = getelementptr inbounds bfloat, ptr %1, i20 320
  store <16 x bfloat> %1014, ptr %1015, align 32, !tbaa !2
  %1016 = bitcast <8 x i32> %975 to <16 x i16>
  %1017 = getelementptr bfloat, ptr %0, i20 400
  %1018 = load <16 x bfloat>, ptr %1017, align 32, !tbaa !2
  %1019 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %976, <16 x i32> %16, i32 2)
  %1020 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1019, i32 0)
  %1021 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %973, i32 8)
  %1022 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %1016, i32 0, i32 0)
  %1023 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1022, i32 6, i32 1)
  %1024 = add <16 x i32> %1023, %34
  %1025 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1024, i32 0)
  %1026 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1025), !noalias !15
  %1027 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1026, i32 0)
  %1028 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1025), !noalias !15
  %1029 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1027, <8 x i32> %1028, i32 1)
  %1030 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1024, i32 1)
  %1031 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1030), !noalias !15
  %1032 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1031, i32 0)
  %1033 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1030), !noalias !15
  %1034 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1032, <8 x i32> %1033, i32 1)
  %1035 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1029, <16 x i32> %1034, i32 24)
  %1036 = bitcast <16 x i32> %1035 to <32 x bfloat>
  %1037 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1036, i32 0)
  %1038 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1022, i32 -2, i32 1)
  %1039 = and <16 x i32> %1038, %4
  %1040 = add <16 x i32> %1039, %55
  %1041 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1040, i32 0)
  %1042 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1041), !noalias !20
  %1043 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1042, i32 0)
  %1044 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1041), !noalias !20
  %1045 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1043, <8 x i32> %1044, i32 1)
  %1046 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1040, i32 1)
  %1047 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1046), !noalias !20
  %1048 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1047, i32 0)
  %1049 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1046), !noalias !20
  %1050 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1048, <8 x i32> %1049, i32 1)
  %1051 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1045, <16 x i32> %1050, i32 24)
  %1052 = bitcast <16 x i32> %1051 to <32 x bfloat>
  %1053 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1052, i32 0)
  %1054 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %992, i32 0)
  %1055 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1054, <16 x bfloat> %109, i32 1)
  %1056 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1008, i32 0)
  %1057 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1056, <16 x bfloat> %109, i32 1)
  %1058 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1055, <32 x bfloat> %1057, i32 60)
  %1059 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %1058)
  %1060 = getelementptr inbounds bfloat, ptr %1, i20 336
  store <16 x bfloat> %1059, ptr %1060, align 32, !tbaa !2
  %1061 = bitcast <8 x i32> %1020 to <16 x i16>
  %1062 = getelementptr bfloat, ptr %0, i20 416
  %1063 = load <16 x bfloat>, ptr %1062, align 32, !tbaa !2
  %1064 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1021, <16 x i32> %16, i32 2)
  %1065 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1064, i32 0)
  %1066 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %1018, i32 8)
  %1067 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %1061, i32 0, i32 0)
  %1068 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1067, i32 6, i32 1)
  %1069 = add <16 x i32> %1068, %34
  %1070 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1069, i32 0)
  %1071 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1070), !noalias !15
  %1072 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1071, i32 0)
  %1073 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1070), !noalias !15
  %1074 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1072, <8 x i32> %1073, i32 1)
  %1075 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1069, i32 1)
  %1076 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1075), !noalias !15
  %1077 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1076, i32 0)
  %1078 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1075), !noalias !15
  %1079 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1077, <8 x i32> %1078, i32 1)
  %1080 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1074, <16 x i32> %1079, i32 24)
  %1081 = bitcast <16 x i32> %1080 to <32 x bfloat>
  %1082 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1081, i32 0)
  %1083 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1067, i32 -2, i32 1)
  %1084 = and <16 x i32> %1083, %4
  %1085 = add <16 x i32> %1084, %55
  %1086 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1085, i32 0)
  %1087 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1086), !noalias !20
  %1088 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1087, i32 0)
  %1089 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1086), !noalias !20
  %1090 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1088, <8 x i32> %1089, i32 1)
  %1091 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1085, i32 1)
  %1092 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1091), !noalias !20
  %1093 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1092, i32 0)
  %1094 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1091), !noalias !20
  %1095 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1093, <8 x i32> %1094, i32 1)
  %1096 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1090, <16 x i32> %1095, i32 24)
  %1097 = bitcast <16 x i32> %1096 to <32 x bfloat>
  %1098 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1097, i32 0)
  %1099 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1037, i32 0)
  %1100 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1099, <16 x bfloat> %109, i32 1)
  %1101 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1053, i32 0)
  %1102 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1101, <16 x bfloat> %109, i32 1)
  %1103 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1100, <32 x bfloat> %1102, i32 60)
  %1104 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %1103)
  %1105 = getelementptr inbounds bfloat, ptr %1, i20 352
  store <16 x bfloat> %1104, ptr %1105, align 32, !tbaa !2
  %1106 = bitcast <8 x i32> %1065 to <16 x i16>
  %1107 = getelementptr bfloat, ptr %0, i20 432
  %1108 = load <16 x bfloat>, ptr %1107, align 32, !tbaa !2
  %1109 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1066, <16 x i32> %16, i32 2)
  %1110 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1109, i32 0)
  %1111 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %1063, i32 8)
  %1112 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %1106, i32 0, i32 0)
  %1113 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1112, i32 6, i32 1)
  %1114 = add <16 x i32> %1113, %34
  %1115 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1114, i32 0)
  %1116 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1115), !noalias !15
  %1117 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1116, i32 0)
  %1118 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1115), !noalias !15
  %1119 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1117, <8 x i32> %1118, i32 1)
  %1120 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1114, i32 1)
  %1121 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1120), !noalias !15
  %1122 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1121, i32 0)
  %1123 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1120), !noalias !15
  %1124 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1122, <8 x i32> %1123, i32 1)
  %1125 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1119, <16 x i32> %1124, i32 24)
  %1126 = bitcast <16 x i32> %1125 to <32 x bfloat>
  %1127 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1126, i32 0)
  %1128 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1112, i32 -2, i32 1)
  %1129 = and <16 x i32> %1128, %4
  %1130 = add <16 x i32> %1129, %55
  %1131 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1130, i32 0)
  %1132 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1131), !noalias !20
  %1133 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1132, i32 0)
  %1134 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1131), !noalias !20
  %1135 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1133, <8 x i32> %1134, i32 1)
  %1136 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1130, i32 1)
  %1137 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1136), !noalias !20
  %1138 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1137, i32 0)
  %1139 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1136), !noalias !20
  %1140 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1138, <8 x i32> %1139, i32 1)
  %1141 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1135, <16 x i32> %1140, i32 24)
  %1142 = bitcast <16 x i32> %1141 to <32 x bfloat>
  %1143 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1142, i32 0)
  %1144 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1082, i32 0)
  %1145 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1144, <16 x bfloat> %109, i32 1)
  %1146 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1098, i32 0)
  %1147 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1146, <16 x bfloat> %109, i32 1)
  %1148 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1145, <32 x bfloat> %1147, i32 60)
  %1149 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %1148)
  %1150 = getelementptr inbounds bfloat, ptr %1, i20 368
  store <16 x bfloat> %1149, ptr %1150, align 32, !tbaa !2
  %1151 = bitcast <8 x i32> %1110 to <16 x i16>
  %1152 = getelementptr bfloat, ptr %0, i20 448
  %1153 = load <16 x bfloat>, ptr %1152, align 32, !tbaa !2
  %1154 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1111, <16 x i32> %16, i32 2)
  %1155 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1154, i32 0)
  %1156 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %1108, i32 8)
  %1157 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %1151, i32 0, i32 0)
  %1158 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1157, i32 6, i32 1)
  %1159 = add <16 x i32> %1158, %34
  %1160 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1159, i32 0)
  %1161 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1160), !noalias !15
  %1162 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1161, i32 0)
  %1163 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1160), !noalias !15
  %1164 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1162, <8 x i32> %1163, i32 1)
  %1165 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1159, i32 1)
  %1166 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1165), !noalias !15
  %1167 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1166, i32 0)
  %1168 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1165), !noalias !15
  %1169 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1167, <8 x i32> %1168, i32 1)
  %1170 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1164, <16 x i32> %1169, i32 24)
  %1171 = bitcast <16 x i32> %1170 to <32 x bfloat>
  %1172 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1171, i32 0)
  %1173 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1157, i32 -2, i32 1)
  %1174 = and <16 x i32> %1173, %4
  %1175 = add <16 x i32> %1174, %55
  %1176 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1175, i32 0)
  %1177 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1176), !noalias !20
  %1178 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1177, i32 0)
  %1179 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1176), !noalias !20
  %1180 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1178, <8 x i32> %1179, i32 1)
  %1181 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1175, i32 1)
  %1182 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1181), !noalias !20
  %1183 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1182, i32 0)
  %1184 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1181), !noalias !20
  %1185 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1183, <8 x i32> %1184, i32 1)
  %1186 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1180, <16 x i32> %1185, i32 24)
  %1187 = bitcast <16 x i32> %1186 to <32 x bfloat>
  %1188 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1187, i32 0)
  %1189 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1127, i32 0)
  %1190 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1189, <16 x bfloat> %109, i32 1)
  %1191 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1143, i32 0)
  %1192 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1191, <16 x bfloat> %109, i32 1)
  %1193 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1190, <32 x bfloat> %1192, i32 60)
  %1194 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %1193)
  %1195 = getelementptr inbounds bfloat, ptr %1, i20 384
  store <16 x bfloat> %1194, ptr %1195, align 32, !tbaa !2
  %1196 = bitcast <8 x i32> %1155 to <16 x i16>
  %1197 = getelementptr bfloat, ptr %0, i20 464
  %1198 = load <16 x bfloat>, ptr %1197, align 32, !tbaa !2
  %1199 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1156, <16 x i32> %16, i32 2)
  %1200 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1199, i32 0)
  %1201 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %1153, i32 8)
  %1202 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %1196, i32 0, i32 0)
  %1203 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1202, i32 6, i32 1)
  %1204 = add <16 x i32> %1203, %34
  %1205 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1204, i32 0)
  %1206 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1205), !noalias !15
  %1207 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1206, i32 0)
  %1208 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1205), !noalias !15
  %1209 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1207, <8 x i32> %1208, i32 1)
  %1210 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1204, i32 1)
  %1211 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1210), !noalias !15
  %1212 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1211, i32 0)
  %1213 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1210), !noalias !15
  %1214 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1212, <8 x i32> %1213, i32 1)
  %1215 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1209, <16 x i32> %1214, i32 24)
  %1216 = bitcast <16 x i32> %1215 to <32 x bfloat>
  %1217 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1216, i32 0)
  %1218 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1202, i32 -2, i32 1)
  %1219 = and <16 x i32> %1218, %4
  %1220 = add <16 x i32> %1219, %55
  %1221 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1220, i32 0)
  %1222 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1221), !noalias !20
  %1223 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1222, i32 0)
  %1224 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1221), !noalias !20
  %1225 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1223, <8 x i32> %1224, i32 1)
  %1226 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1220, i32 1)
  %1227 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1226), !noalias !20
  %1228 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1227, i32 0)
  %1229 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1226), !noalias !20
  %1230 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1228, <8 x i32> %1229, i32 1)
  %1231 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1225, <16 x i32> %1230, i32 24)
  %1232 = bitcast <16 x i32> %1231 to <32 x bfloat>
  %1233 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1232, i32 0)
  %1234 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1172, i32 0)
  %1235 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1234, <16 x bfloat> %109, i32 1)
  %1236 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1188, i32 0)
  %1237 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1236, <16 x bfloat> %109, i32 1)
  %1238 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1235, <32 x bfloat> %1237, i32 60)
  %1239 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %1238)
  %1240 = getelementptr inbounds bfloat, ptr %1, i20 400
  store <16 x bfloat> %1239, ptr %1240, align 32, !tbaa !2
  %1241 = bitcast <8 x i32> %1200 to <16 x i16>
  %1242 = getelementptr bfloat, ptr %0, i20 480
  %1243 = load <16 x bfloat>, ptr %1242, align 32, !tbaa !2
  %1244 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1201, <16 x i32> %16, i32 2)
  %1245 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1244, i32 0)
  %1246 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %1198, i32 8)
  %1247 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %1241, i32 0, i32 0)
  %1248 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1247, i32 6, i32 1)
  %1249 = add <16 x i32> %1248, %34
  %1250 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1249, i32 0)
  %1251 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1250), !noalias !15
  %1252 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1251, i32 0)
  %1253 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1250), !noalias !15
  %1254 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1252, <8 x i32> %1253, i32 1)
  %1255 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1249, i32 1)
  %1256 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1255), !noalias !15
  %1257 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1256, i32 0)
  %1258 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1255), !noalias !15
  %1259 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1257, <8 x i32> %1258, i32 1)
  %1260 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1254, <16 x i32> %1259, i32 24)
  %1261 = bitcast <16 x i32> %1260 to <32 x bfloat>
  %1262 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1261, i32 0)
  %1263 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1247, i32 -2, i32 1)
  %1264 = and <16 x i32> %1263, %4
  %1265 = add <16 x i32> %1264, %55
  %1266 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1265, i32 0)
  %1267 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1266), !noalias !20
  %1268 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1267, i32 0)
  %1269 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1266), !noalias !20
  %1270 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1268, <8 x i32> %1269, i32 1)
  %1271 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1265, i32 1)
  %1272 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1271), !noalias !20
  %1273 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1272, i32 0)
  %1274 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1271), !noalias !20
  %1275 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1273, <8 x i32> %1274, i32 1)
  %1276 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1270, <16 x i32> %1275, i32 24)
  %1277 = bitcast <16 x i32> %1276 to <32 x bfloat>
  %1278 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1277, i32 0)
  %1279 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1217, i32 0)
  %1280 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1279, <16 x bfloat> %109, i32 1)
  %1281 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1233, i32 0)
  %1282 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1281, <16 x bfloat> %109, i32 1)
  %1283 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1280, <32 x bfloat> %1282, i32 60)
  %1284 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %1283)
  %1285 = getelementptr inbounds bfloat, ptr %1, i20 416
  store <16 x bfloat> %1284, ptr %1285, align 32, !tbaa !2
  %1286 = bitcast <8 x i32> %1245 to <16 x i16>
  %1287 = getelementptr bfloat, ptr %0, i20 496
  %1288 = load <16 x bfloat>, ptr %1287, align 32, !tbaa !2
  %1289 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1246, <16 x i32> %16, i32 2)
  %1290 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1289, i32 0)
  %1291 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %1243, i32 8)
  %1292 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %1286, i32 0, i32 0)
  %1293 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1292, i32 6, i32 1)
  %1294 = add <16 x i32> %1293, %34
  %1295 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1294, i32 0)
  %1296 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1295), !noalias !15
  %1297 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1296, i32 0)
  %1298 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1295), !noalias !15
  %1299 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1297, <8 x i32> %1298, i32 1)
  %1300 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1294, i32 1)
  %1301 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1300), !noalias !15
  %1302 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1301, i32 0)
  %1303 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1300), !noalias !15
  %1304 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1302, <8 x i32> %1303, i32 1)
  %1305 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1299, <16 x i32> %1304, i32 24)
  %1306 = bitcast <16 x i32> %1305 to <32 x bfloat>
  %1307 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1306, i32 0)
  %1308 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1292, i32 -2, i32 1)
  %1309 = and <16 x i32> %1308, %4
  %1310 = add <16 x i32> %1309, %55
  %1311 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1310, i32 0)
  %1312 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1311), !noalias !20
  %1313 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1312, i32 0)
  %1314 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1311), !noalias !20
  %1315 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1313, <8 x i32> %1314, i32 1)
  %1316 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1310, i32 1)
  %1317 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1316), !noalias !20
  %1318 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1317, i32 0)
  %1319 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1316), !noalias !20
  %1320 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1318, <8 x i32> %1319, i32 1)
  %1321 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1315, <16 x i32> %1320, i32 24)
  %1322 = bitcast <16 x i32> %1321 to <32 x bfloat>
  %1323 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1322, i32 0)
  %1324 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1262, i32 0)
  %1325 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1324, <16 x bfloat> %109, i32 1)
  %1326 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1278, i32 0)
  %1327 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1326, <16 x bfloat> %109, i32 1)
  %1328 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1325, <32 x bfloat> %1327, i32 60)
  %1329 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %1328)
  %1330 = getelementptr inbounds bfloat, ptr %1, i20 432
  store <16 x bfloat> %1329, ptr %1330, align 32, !tbaa !2
  %1331 = bitcast <8 x i32> %1290 to <16 x i16>
  %1332 = getelementptr bfloat, ptr %0, i20 512
  %1333 = load <16 x bfloat>, ptr %1332, align 32, !tbaa !2
  %1334 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1291, <16 x i32> %16, i32 2)
  %1335 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1334, i32 0)
  %1336 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %1288, i32 8)
  %1337 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %1331, i32 0, i32 0)
  %1338 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1337, i32 6, i32 1)
  %1339 = add <16 x i32> %1338, %34
  %1340 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1339, i32 0)
  %1341 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1340), !noalias !15
  %1342 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1341, i32 0)
  %1343 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1340), !noalias !15
  %1344 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1342, <8 x i32> %1343, i32 1)
  %1345 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1339, i32 1)
  %1346 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1345), !noalias !15
  %1347 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1346, i32 0)
  %1348 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1345), !noalias !15
  %1349 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1347, <8 x i32> %1348, i32 1)
  %1350 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1344, <16 x i32> %1349, i32 24)
  %1351 = bitcast <16 x i32> %1350 to <32 x bfloat>
  %1352 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1351, i32 0)
  %1353 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1337, i32 -2, i32 1)
  %1354 = and <16 x i32> %1353, %4
  %1355 = add <16 x i32> %1354, %55
  %1356 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1355, i32 0)
  %1357 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1356), !noalias !20
  %1358 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1357, i32 0)
  %1359 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1356), !noalias !20
  %1360 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1358, <8 x i32> %1359, i32 1)
  %1361 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1355, i32 1)
  %1362 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1361), !noalias !20
  %1363 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1362, i32 0)
  %1364 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1361), !noalias !20
  %1365 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1363, <8 x i32> %1364, i32 1)
  %1366 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1360, <16 x i32> %1365, i32 24)
  %1367 = bitcast <16 x i32> %1366 to <32 x bfloat>
  %1368 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1367, i32 0)
  %1369 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1307, i32 0)
  %1370 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1369, <16 x bfloat> %109, i32 1)
  %1371 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1323, i32 0)
  %1372 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1371, <16 x bfloat> %109, i32 1)
  %1373 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1370, <32 x bfloat> %1372, i32 60)
  %1374 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %1373)
  %1375 = getelementptr inbounds bfloat, ptr %1, i20 448
  store <16 x bfloat> %1374, ptr %1375, align 32, !tbaa !2
  %1376 = bitcast <8 x i32> %1335 to <16 x i16>
  %1377 = getelementptr bfloat, ptr %0, i20 528
  %1378 = load <16 x bfloat>, ptr %1377, align 32, !tbaa !2
  %1379 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1336, <16 x i32> %16, i32 2)
  %1380 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1379, i32 0)
  %1381 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %1333, i32 8)
  %1382 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %1376, i32 0, i32 0)
  %1383 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1382, i32 6, i32 1)
  %1384 = add <16 x i32> %1383, %34
  %1385 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1384, i32 0)
  %1386 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1385), !noalias !15
  %1387 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1386, i32 0)
  %1388 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1385), !noalias !15
  %1389 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1387, <8 x i32> %1388, i32 1)
  %1390 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1384, i32 1)
  %1391 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1390), !noalias !15
  %1392 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1391, i32 0)
  %1393 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1390), !noalias !15
  %1394 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1392, <8 x i32> %1393, i32 1)
  %1395 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1389, <16 x i32> %1394, i32 24)
  %1396 = bitcast <16 x i32> %1395 to <32 x bfloat>
  %1397 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1396, i32 0)
  %1398 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1382, i32 -2, i32 1)
  %1399 = and <16 x i32> %1398, %4
  %1400 = add <16 x i32> %1399, %55
  %1401 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1400, i32 0)
  %1402 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1401), !noalias !20
  %1403 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1402, i32 0)
  %1404 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1401), !noalias !20
  %1405 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1403, <8 x i32> %1404, i32 1)
  %1406 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1400, i32 1)
  %1407 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1406), !noalias !20
  %1408 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1407, i32 0)
  %1409 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1406), !noalias !20
  %1410 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1408, <8 x i32> %1409, i32 1)
  %1411 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1405, <16 x i32> %1410, i32 24)
  %1412 = bitcast <16 x i32> %1411 to <32 x bfloat>
  %1413 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1412, i32 0)
  %1414 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1352, i32 0)
  %1415 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1414, <16 x bfloat> %109, i32 1)
  %1416 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1368, i32 0)
  %1417 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1416, <16 x bfloat> %109, i32 1)
  %1418 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1415, <32 x bfloat> %1417, i32 60)
  %1419 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %1418)
  %1420 = getelementptr inbounds bfloat, ptr %1, i20 464
  store <16 x bfloat> %1419, ptr %1420, align 32, !tbaa !2
  %1421 = bitcast <8 x i32> %1380 to <16 x i16>
  %1422 = getelementptr bfloat, ptr %0, i20 544
  %1423 = load <16 x bfloat>, ptr %1422, align 32, !tbaa !2
  %1424 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1381, <16 x i32> %16, i32 2)
  %1425 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1424, i32 0)
  %1426 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %1378, i32 8)
  %1427 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %1421, i32 0, i32 0)
  %1428 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1427, i32 6, i32 1)
  %1429 = add <16 x i32> %1428, %34
  %1430 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1429, i32 0)
  %1431 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1430), !noalias !15
  %1432 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1431, i32 0)
  %1433 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1430), !noalias !15
  %1434 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1432, <8 x i32> %1433, i32 1)
  %1435 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1429, i32 1)
  %1436 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1435), !noalias !15
  %1437 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1436, i32 0)
  %1438 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1435), !noalias !15
  %1439 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1437, <8 x i32> %1438, i32 1)
  %1440 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1434, <16 x i32> %1439, i32 24)
  %1441 = bitcast <16 x i32> %1440 to <32 x bfloat>
  %1442 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1441, i32 0)
  %1443 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1427, i32 -2, i32 1)
  %1444 = and <16 x i32> %1443, %4
  %1445 = add <16 x i32> %1444, %55
  %1446 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1445, i32 0)
  %1447 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1446), !noalias !20
  %1448 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1447, i32 0)
  %1449 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1446), !noalias !20
  %1450 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1448, <8 x i32> %1449, i32 1)
  %1451 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1445, i32 1)
  %1452 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1451), !noalias !20
  %1453 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1452, i32 0)
  %1454 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1451), !noalias !20
  %1455 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1453, <8 x i32> %1454, i32 1)
  %1456 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1450, <16 x i32> %1455, i32 24)
  %1457 = bitcast <16 x i32> %1456 to <32 x bfloat>
  %1458 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1457, i32 0)
  %1459 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1397, i32 0)
  %1460 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1459, <16 x bfloat> %109, i32 1)
  %1461 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1413, i32 0)
  %1462 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1461, <16 x bfloat> %109, i32 1)
  %1463 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1460, <32 x bfloat> %1462, i32 60)
  %1464 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %1463)
  %1465 = getelementptr inbounds bfloat, ptr %1, i20 480
  store <16 x bfloat> %1464, ptr %1465, align 32, !tbaa !2
  %1466 = bitcast <8 x i32> %1425 to <16 x i16>
  %1467 = getelementptr bfloat, ptr %0, i20 560
  %1468 = load <16 x bfloat>, ptr %1467, align 32, !tbaa !2
  %1469 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1426, <16 x i32> %16, i32 2)
  %1470 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1469, i32 0)
  %1471 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %1423, i32 8)
  %1472 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %1466, i32 0, i32 0)
  %1473 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1472, i32 6, i32 1)
  %1474 = add <16 x i32> %1473, %34
  %1475 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1474, i32 0)
  %1476 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1475), !noalias !15
  %1477 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1476, i32 0)
  %1478 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1475), !noalias !15
  %1479 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1477, <8 x i32> %1478, i32 1)
  %1480 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1474, i32 1)
  %1481 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1480), !noalias !15
  %1482 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1481, i32 0)
  %1483 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1480), !noalias !15
  %1484 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1482, <8 x i32> %1483, i32 1)
  %1485 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1479, <16 x i32> %1484, i32 24)
  %1486 = bitcast <16 x i32> %1485 to <32 x bfloat>
  %1487 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1486, i32 0)
  %1488 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1472, i32 -2, i32 1)
  %1489 = and <16 x i32> %1488, %4
  %1490 = add <16 x i32> %1489, %55
  %1491 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1490, i32 0)
  %1492 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1491), !noalias !20
  %1493 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1492, i32 0)
  %1494 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1491), !noalias !20
  %1495 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1493, <8 x i32> %1494, i32 1)
  %1496 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1490, i32 1)
  %1497 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1496), !noalias !20
  %1498 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1497, i32 0)
  %1499 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1496), !noalias !20
  %1500 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1498, <8 x i32> %1499, i32 1)
  %1501 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1495, <16 x i32> %1500, i32 24)
  %1502 = bitcast <16 x i32> %1501 to <32 x bfloat>
  %1503 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1502, i32 0)
  %1504 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1442, i32 0)
  %1505 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1504, <16 x bfloat> %109, i32 1)
  %1506 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1458, i32 0)
  %1507 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1506, <16 x bfloat> %109, i32 1)
  %1508 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1505, <32 x bfloat> %1507, i32 60)
  %1509 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %1508)
  %1510 = getelementptr inbounds bfloat, ptr %1, i20 496
  store <16 x bfloat> %1509, ptr %1510, align 32, !tbaa !2
  %1511 = bitcast <8 x i32> %1470 to <16 x i16>
  %1512 = getelementptr bfloat, ptr %0, i20 576
  %1513 = load <16 x bfloat>, ptr %1512, align 32, !tbaa !2
  %1514 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1471, <16 x i32> %16, i32 2)
  %1515 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1514, i32 0)
  %1516 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %1468, i32 8)
  %1517 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %1511, i32 0, i32 0)
  %1518 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1517, i32 6, i32 1)
  %1519 = add <16 x i32> %1518, %34
  %1520 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1519, i32 0)
  %1521 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1520), !noalias !15
  %1522 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1521, i32 0)
  %1523 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1520), !noalias !15
  %1524 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1522, <8 x i32> %1523, i32 1)
  %1525 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1519, i32 1)
  %1526 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1525), !noalias !15
  %1527 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1526, i32 0)
  %1528 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1525), !noalias !15
  %1529 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1527, <8 x i32> %1528, i32 1)
  %1530 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1524, <16 x i32> %1529, i32 24)
  %1531 = bitcast <16 x i32> %1530 to <32 x bfloat>
  %1532 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1531, i32 0)
  %1533 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1517, i32 -2, i32 1)
  %1534 = and <16 x i32> %1533, %4
  %1535 = add <16 x i32> %1534, %55
  %1536 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1535, i32 0)
  %1537 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1536), !noalias !20
  %1538 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1537, i32 0)
  %1539 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1536), !noalias !20
  %1540 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1538, <8 x i32> %1539, i32 1)
  %1541 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1535, i32 1)
  %1542 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1541), !noalias !20
  %1543 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1542, i32 0)
  %1544 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1541), !noalias !20
  %1545 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1543, <8 x i32> %1544, i32 1)
  %1546 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1540, <16 x i32> %1545, i32 24)
  %1547 = bitcast <16 x i32> %1546 to <32 x bfloat>
  %1548 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1547, i32 0)
  %1549 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1487, i32 0)
  %1550 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1549, <16 x bfloat> %109, i32 1)
  %1551 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1503, i32 0)
  %1552 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1551, <16 x bfloat> %109, i32 1)
  %1553 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1550, <32 x bfloat> %1552, i32 60)
  %1554 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %1553)
  %1555 = getelementptr inbounds bfloat, ptr %1, i20 512
  store <16 x bfloat> %1554, ptr %1555, align 32, !tbaa !2
  %1556 = bitcast <8 x i32> %1515 to <16 x i16>
  %1557 = getelementptr bfloat, ptr %0, i20 592
  %1558 = load <16 x bfloat>, ptr %1557, align 32, !tbaa !2
  %1559 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1516, <16 x i32> %16, i32 2)
  %1560 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1559, i32 0)
  %1561 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %1513, i32 8)
  %1562 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %1556, i32 0, i32 0)
  %1563 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1562, i32 6, i32 1)
  %1564 = add <16 x i32> %1563, %34
  %1565 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1564, i32 0)
  %1566 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1565), !noalias !15
  %1567 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1566, i32 0)
  %1568 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1565), !noalias !15
  %1569 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1567, <8 x i32> %1568, i32 1)
  %1570 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1564, i32 1)
  %1571 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1570), !noalias !15
  %1572 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1571, i32 0)
  %1573 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1570), !noalias !15
  %1574 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1572, <8 x i32> %1573, i32 1)
  %1575 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1569, <16 x i32> %1574, i32 24)
  %1576 = bitcast <16 x i32> %1575 to <32 x bfloat>
  %1577 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1576, i32 0)
  %1578 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1562, i32 -2, i32 1)
  %1579 = and <16 x i32> %1578, %4
  %1580 = add <16 x i32> %1579, %55
  %1581 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1580, i32 0)
  %1582 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1581), !noalias !20
  %1583 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1582, i32 0)
  %1584 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1581), !noalias !20
  %1585 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1583, <8 x i32> %1584, i32 1)
  %1586 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1580, i32 1)
  %1587 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1586), !noalias !20
  %1588 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1587, i32 0)
  %1589 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1586), !noalias !20
  %1590 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1588, <8 x i32> %1589, i32 1)
  %1591 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1585, <16 x i32> %1590, i32 24)
  %1592 = bitcast <16 x i32> %1591 to <32 x bfloat>
  %1593 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1592, i32 0)
  %1594 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1532, i32 0)
  %1595 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1594, <16 x bfloat> %109, i32 1)
  %1596 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1548, i32 0)
  %1597 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1596, <16 x bfloat> %109, i32 1)
  %1598 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1595, <32 x bfloat> %1597, i32 60)
  %1599 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %1598)
  %1600 = getelementptr inbounds bfloat, ptr %1, i20 528
  store <16 x bfloat> %1599, ptr %1600, align 32, !tbaa !2
  %1601 = bitcast <8 x i32> %1560 to <16 x i16>
  %1602 = getelementptr bfloat, ptr %0, i20 608
  %1603 = load <16 x bfloat>, ptr %1602, align 32, !tbaa !2
  %1604 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1561, <16 x i32> %16, i32 2)
  %1605 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1604, i32 0)
  %1606 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %1558, i32 8)
  %1607 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %1601, i32 0, i32 0)
  %1608 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1607, i32 6, i32 1)
  %1609 = add <16 x i32> %1608, %34
  %1610 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1609, i32 0)
  %1611 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1610), !noalias !15
  %1612 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1611, i32 0)
  %1613 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1610), !noalias !15
  %1614 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1612, <8 x i32> %1613, i32 1)
  %1615 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1609, i32 1)
  %1616 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1615), !noalias !15
  %1617 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1616, i32 0)
  %1618 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1615), !noalias !15
  %1619 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1617, <8 x i32> %1618, i32 1)
  %1620 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1614, <16 x i32> %1619, i32 24)
  %1621 = bitcast <16 x i32> %1620 to <32 x bfloat>
  %1622 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1621, i32 0)
  %1623 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1607, i32 -2, i32 1)
  %1624 = and <16 x i32> %1623, %4
  %1625 = add <16 x i32> %1624, %55
  %1626 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1625, i32 0)
  %1627 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1626), !noalias !20
  %1628 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1627, i32 0)
  %1629 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1626), !noalias !20
  %1630 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1628, <8 x i32> %1629, i32 1)
  %1631 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1625, i32 1)
  %1632 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1631), !noalias !20
  %1633 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1632, i32 0)
  %1634 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1631), !noalias !20
  %1635 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1633, <8 x i32> %1634, i32 1)
  %1636 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1630, <16 x i32> %1635, i32 24)
  %1637 = bitcast <16 x i32> %1636 to <32 x bfloat>
  %1638 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1637, i32 0)
  %1639 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1577, i32 0)
  %1640 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1639, <16 x bfloat> %109, i32 1)
  %1641 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1593, i32 0)
  %1642 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1641, <16 x bfloat> %109, i32 1)
  %1643 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1640, <32 x bfloat> %1642, i32 60)
  %1644 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %1643)
  %1645 = getelementptr inbounds bfloat, ptr %1, i20 544
  store <16 x bfloat> %1644, ptr %1645, align 32, !tbaa !2
  %1646 = bitcast <8 x i32> %1605 to <16 x i16>
  %1647 = getelementptr bfloat, ptr %0, i20 624
  %1648 = load <16 x bfloat>, ptr %1647, align 32, !tbaa !2
  %1649 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1606, <16 x i32> %16, i32 2)
  %1650 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1649, i32 0)
  %1651 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %1603, i32 8)
  %1652 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %1646, i32 0, i32 0)
  %1653 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1652, i32 6, i32 1)
  %1654 = add <16 x i32> %1653, %34
  %1655 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1654, i32 0)
  %1656 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1655), !noalias !15
  %1657 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1656, i32 0)
  %1658 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1655), !noalias !15
  %1659 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1657, <8 x i32> %1658, i32 1)
  %1660 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1654, i32 1)
  %1661 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1660), !noalias !15
  %1662 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1661, i32 0)
  %1663 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1660), !noalias !15
  %1664 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1662, <8 x i32> %1663, i32 1)
  %1665 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1659, <16 x i32> %1664, i32 24)
  %1666 = bitcast <16 x i32> %1665 to <32 x bfloat>
  %1667 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1666, i32 0)
  %1668 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1652, i32 -2, i32 1)
  %1669 = and <16 x i32> %1668, %4
  %1670 = add <16 x i32> %1669, %55
  %1671 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1670, i32 0)
  %1672 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1671), !noalias !20
  %1673 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1672, i32 0)
  %1674 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1671), !noalias !20
  %1675 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1673, <8 x i32> %1674, i32 1)
  %1676 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1670, i32 1)
  %1677 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1676), !noalias !20
  %1678 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1677, i32 0)
  %1679 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1676), !noalias !20
  %1680 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1678, <8 x i32> %1679, i32 1)
  %1681 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1675, <16 x i32> %1680, i32 24)
  %1682 = bitcast <16 x i32> %1681 to <32 x bfloat>
  %1683 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1682, i32 0)
  %1684 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1622, i32 0)
  %1685 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1684, <16 x bfloat> %109, i32 1)
  %1686 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1638, i32 0)
  %1687 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1686, <16 x bfloat> %109, i32 1)
  %1688 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1685, <32 x bfloat> %1687, i32 60)
  %1689 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %1688)
  %1690 = getelementptr inbounds bfloat, ptr %1, i20 560
  store <16 x bfloat> %1689, ptr %1690, align 32, !tbaa !2
  %1691 = bitcast <8 x i32> %1650 to <16 x i16>
  %1692 = getelementptr bfloat, ptr %0, i20 640
  %1693 = load <16 x bfloat>, ptr %1692, align 32, !tbaa !2
  %1694 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1651, <16 x i32> %16, i32 2)
  %1695 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1694, i32 0)
  %1696 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %1648, i32 8)
  %1697 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %1691, i32 0, i32 0)
  %1698 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1697, i32 6, i32 1)
  %1699 = add <16 x i32> %1698, %34
  %1700 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1699, i32 0)
  %1701 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1700), !noalias !15
  %1702 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1701, i32 0)
  %1703 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1700), !noalias !15
  %1704 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1702, <8 x i32> %1703, i32 1)
  %1705 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1699, i32 1)
  %1706 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1705), !noalias !15
  %1707 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1706, i32 0)
  %1708 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1705), !noalias !15
  %1709 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1707, <8 x i32> %1708, i32 1)
  %1710 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1704, <16 x i32> %1709, i32 24)
  %1711 = bitcast <16 x i32> %1710 to <32 x bfloat>
  %1712 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1711, i32 0)
  %1713 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1697, i32 -2, i32 1)
  %1714 = and <16 x i32> %1713, %4
  %1715 = add <16 x i32> %1714, %55
  %1716 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1715, i32 0)
  %1717 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1716), !noalias !20
  %1718 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1717, i32 0)
  %1719 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1716), !noalias !20
  %1720 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1718, <8 x i32> %1719, i32 1)
  %1721 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1715, i32 1)
  %1722 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1721), !noalias !20
  %1723 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1722, i32 0)
  %1724 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1721), !noalias !20
  %1725 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1723, <8 x i32> %1724, i32 1)
  %1726 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1720, <16 x i32> %1725, i32 24)
  %1727 = bitcast <16 x i32> %1726 to <32 x bfloat>
  %1728 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1727, i32 0)
  %1729 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1667, i32 0)
  %1730 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1729, <16 x bfloat> %109, i32 1)
  %1731 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1683, i32 0)
  %1732 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1731, <16 x bfloat> %109, i32 1)
  %1733 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1730, <32 x bfloat> %1732, i32 60)
  %1734 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %1733)
  %1735 = getelementptr inbounds bfloat, ptr %1, i20 576
  store <16 x bfloat> %1734, ptr %1735, align 32, !tbaa !2
  %1736 = bitcast <8 x i32> %1695 to <16 x i16>
  %1737 = getelementptr bfloat, ptr %0, i20 656
  %1738 = load <16 x bfloat>, ptr %1737, align 32, !tbaa !2
  %1739 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1696, <16 x i32> %16, i32 2)
  %1740 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1739, i32 0)
  %1741 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %1693, i32 8)
  %1742 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %1736, i32 0, i32 0)
  %1743 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1742, i32 6, i32 1)
  %1744 = add <16 x i32> %1743, %34
  %1745 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1744, i32 0)
  %1746 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1745), !noalias !15
  %1747 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1746, i32 0)
  %1748 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1745), !noalias !15
  %1749 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1747, <8 x i32> %1748, i32 1)
  %1750 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1744, i32 1)
  %1751 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1750), !noalias !15
  %1752 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1751, i32 0)
  %1753 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1750), !noalias !15
  %1754 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1752, <8 x i32> %1753, i32 1)
  %1755 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1749, <16 x i32> %1754, i32 24)
  %1756 = bitcast <16 x i32> %1755 to <32 x bfloat>
  %1757 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1756, i32 0)
  %1758 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1742, i32 -2, i32 1)
  %1759 = and <16 x i32> %1758, %4
  %1760 = add <16 x i32> %1759, %55
  %1761 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1760, i32 0)
  %1762 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1761), !noalias !20
  %1763 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1762, i32 0)
  %1764 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1761), !noalias !20
  %1765 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1763, <8 x i32> %1764, i32 1)
  %1766 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1760, i32 1)
  %1767 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1766), !noalias !20
  %1768 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1767, i32 0)
  %1769 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1766), !noalias !20
  %1770 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1768, <8 x i32> %1769, i32 1)
  %1771 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1765, <16 x i32> %1770, i32 24)
  %1772 = bitcast <16 x i32> %1771 to <32 x bfloat>
  %1773 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1772, i32 0)
  %1774 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1712, i32 0)
  %1775 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1774, <16 x bfloat> %109, i32 1)
  %1776 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1728, i32 0)
  %1777 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1776, <16 x bfloat> %109, i32 1)
  %1778 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1775, <32 x bfloat> %1777, i32 60)
  %1779 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %1778)
  %1780 = getelementptr inbounds bfloat, ptr %1, i20 592
  store <16 x bfloat> %1779, ptr %1780, align 32, !tbaa !2
  %1781 = bitcast <8 x i32> %1740 to <16 x i16>
  %1782 = getelementptr bfloat, ptr %0, i20 672
  %1783 = load <16 x bfloat>, ptr %1782, align 32, !tbaa !2
  %1784 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1741, <16 x i32> %16, i32 2)
  %1785 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1784, i32 0)
  %1786 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %1738, i32 8)
  %1787 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %1781, i32 0, i32 0)
  %1788 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1787, i32 6, i32 1)
  %1789 = add <16 x i32> %1788, %34
  %1790 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1789, i32 0)
  %1791 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1790), !noalias !15
  %1792 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1791, i32 0)
  %1793 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1790), !noalias !15
  %1794 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1792, <8 x i32> %1793, i32 1)
  %1795 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1789, i32 1)
  %1796 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1795), !noalias !15
  %1797 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1796, i32 0)
  %1798 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1795), !noalias !15
  %1799 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1797, <8 x i32> %1798, i32 1)
  %1800 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1794, <16 x i32> %1799, i32 24)
  %1801 = bitcast <16 x i32> %1800 to <32 x bfloat>
  %1802 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1801, i32 0)
  %1803 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1787, i32 -2, i32 1)
  %1804 = and <16 x i32> %1803, %4
  %1805 = add <16 x i32> %1804, %55
  %1806 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1805, i32 0)
  %1807 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1806), !noalias !20
  %1808 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1807, i32 0)
  %1809 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1806), !noalias !20
  %1810 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1808, <8 x i32> %1809, i32 1)
  %1811 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1805, i32 1)
  %1812 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1811), !noalias !20
  %1813 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1812, i32 0)
  %1814 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1811), !noalias !20
  %1815 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1813, <8 x i32> %1814, i32 1)
  %1816 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1810, <16 x i32> %1815, i32 24)
  %1817 = bitcast <16 x i32> %1816 to <32 x bfloat>
  %1818 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1817, i32 0)
  %1819 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1757, i32 0)
  %1820 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1819, <16 x bfloat> %109, i32 1)
  %1821 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1773, i32 0)
  %1822 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1821, <16 x bfloat> %109, i32 1)
  %1823 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1820, <32 x bfloat> %1822, i32 60)
  %1824 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %1823)
  %1825 = getelementptr inbounds bfloat, ptr %1, i20 608
  store <16 x bfloat> %1824, ptr %1825, align 32, !tbaa !2
  %1826 = bitcast <8 x i32> %1785 to <16 x i16>
  %1827 = getelementptr bfloat, ptr %0, i20 688
  %1828 = load <16 x bfloat>, ptr %1827, align 32, !tbaa !2
  %1829 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1786, <16 x i32> %16, i32 2)
  %1830 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1829, i32 0)
  %1831 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %1783, i32 8)
  %1832 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %1826, i32 0, i32 0)
  %1833 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1832, i32 6, i32 1)
  %1834 = add <16 x i32> %1833, %34
  %1835 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1834, i32 0)
  %1836 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1835), !noalias !15
  %1837 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1836, i32 0)
  %1838 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1835), !noalias !15
  %1839 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1837, <8 x i32> %1838, i32 1)
  %1840 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1834, i32 1)
  %1841 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1840), !noalias !15
  %1842 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1841, i32 0)
  %1843 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1840), !noalias !15
  %1844 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1842, <8 x i32> %1843, i32 1)
  %1845 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1839, <16 x i32> %1844, i32 24)
  %1846 = bitcast <16 x i32> %1845 to <32 x bfloat>
  %1847 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1846, i32 0)
  %1848 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1832, i32 -2, i32 1)
  %1849 = and <16 x i32> %1848, %4
  %1850 = add <16 x i32> %1849, %55
  %1851 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1850, i32 0)
  %1852 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1851), !noalias !20
  %1853 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1852, i32 0)
  %1854 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1851), !noalias !20
  %1855 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1853, <8 x i32> %1854, i32 1)
  %1856 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1850, i32 1)
  %1857 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1856), !noalias !20
  %1858 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1857, i32 0)
  %1859 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1856), !noalias !20
  %1860 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1858, <8 x i32> %1859, i32 1)
  %1861 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1855, <16 x i32> %1860, i32 24)
  %1862 = bitcast <16 x i32> %1861 to <32 x bfloat>
  %1863 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1862, i32 0)
  %1864 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1802, i32 0)
  %1865 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1864, <16 x bfloat> %109, i32 1)
  %1866 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1818, i32 0)
  %1867 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1866, <16 x bfloat> %109, i32 1)
  %1868 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1865, <32 x bfloat> %1867, i32 60)
  %1869 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %1868)
  %1870 = getelementptr inbounds bfloat, ptr %1, i20 624
  store <16 x bfloat> %1869, ptr %1870, align 32, !tbaa !2
  %1871 = bitcast <8 x i32> %1830 to <16 x i16>
  %1872 = getelementptr bfloat, ptr %0, i20 704
  %1873 = load <16 x bfloat>, ptr %1872, align 32, !tbaa !2
  %1874 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1831, <16 x i32> %16, i32 2)
  %1875 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1874, i32 0)
  %1876 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %1828, i32 8)
  %1877 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %1871, i32 0, i32 0)
  %1878 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1877, i32 6, i32 1)
  %1879 = add <16 x i32> %1878, %34
  %1880 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1879, i32 0)
  %1881 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1880), !noalias !15
  %1882 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1881, i32 0)
  %1883 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1880), !noalias !15
  %1884 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1882, <8 x i32> %1883, i32 1)
  %1885 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1879, i32 1)
  %1886 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1885), !noalias !15
  %1887 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1886, i32 0)
  %1888 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1885), !noalias !15
  %1889 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1887, <8 x i32> %1888, i32 1)
  %1890 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1884, <16 x i32> %1889, i32 24)
  %1891 = bitcast <16 x i32> %1890 to <32 x bfloat>
  %1892 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1891, i32 0)
  %1893 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1877, i32 -2, i32 1)
  %1894 = and <16 x i32> %1893, %4
  %1895 = add <16 x i32> %1894, %55
  %1896 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1895, i32 0)
  %1897 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1896), !noalias !20
  %1898 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1897, i32 0)
  %1899 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1896), !noalias !20
  %1900 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1898, <8 x i32> %1899, i32 1)
  %1901 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1895, i32 1)
  %1902 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1901), !noalias !20
  %1903 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1902, i32 0)
  %1904 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1901), !noalias !20
  %1905 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1903, <8 x i32> %1904, i32 1)
  %1906 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1900, <16 x i32> %1905, i32 24)
  %1907 = bitcast <16 x i32> %1906 to <32 x bfloat>
  %1908 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1907, i32 0)
  %1909 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1847, i32 0)
  %1910 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1909, <16 x bfloat> %109, i32 1)
  %1911 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1863, i32 0)
  %1912 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1911, <16 x bfloat> %109, i32 1)
  %1913 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1910, <32 x bfloat> %1912, i32 60)
  %1914 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %1913)
  %1915 = getelementptr inbounds bfloat, ptr %1, i20 640
  store <16 x bfloat> %1914, ptr %1915, align 32, !tbaa !2
  %1916 = bitcast <8 x i32> %1875 to <16 x i16>
  %1917 = getelementptr bfloat, ptr %0, i20 720
  %1918 = load <16 x bfloat>, ptr %1917, align 32, !tbaa !2
  %1919 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1876, <16 x i32> %16, i32 2)
  %1920 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1919, i32 0)
  %1921 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %1873, i32 8)
  %1922 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %1916, i32 0, i32 0)
  %1923 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1922, i32 6, i32 1)
  %1924 = add <16 x i32> %1923, %34
  %1925 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1924, i32 0)
  %1926 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1925), !noalias !15
  %1927 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1926, i32 0)
  %1928 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1925), !noalias !15
  %1929 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1927, <8 x i32> %1928, i32 1)
  %1930 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1924, i32 1)
  %1931 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1930), !noalias !15
  %1932 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1931, i32 0)
  %1933 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1930), !noalias !15
  %1934 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1932, <8 x i32> %1933, i32 1)
  %1935 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1929, <16 x i32> %1934, i32 24)
  %1936 = bitcast <16 x i32> %1935 to <32 x bfloat>
  %1937 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1936, i32 0)
  %1938 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1922, i32 -2, i32 1)
  %1939 = and <16 x i32> %1938, %4
  %1940 = add <16 x i32> %1939, %55
  %1941 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1940, i32 0)
  %1942 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1941), !noalias !20
  %1943 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1942, i32 0)
  %1944 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1941), !noalias !20
  %1945 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1943, <8 x i32> %1944, i32 1)
  %1946 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1940, i32 1)
  %1947 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1946), !noalias !20
  %1948 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1947, i32 0)
  %1949 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1946), !noalias !20
  %1950 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1948, <8 x i32> %1949, i32 1)
  %1951 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1945, <16 x i32> %1950, i32 24)
  %1952 = bitcast <16 x i32> %1951 to <32 x bfloat>
  %1953 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1952, i32 0)
  %1954 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1892, i32 0)
  %1955 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1954, <16 x bfloat> %109, i32 1)
  %1956 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1908, i32 0)
  %1957 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1956, <16 x bfloat> %109, i32 1)
  %1958 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1955, <32 x bfloat> %1957, i32 60)
  %1959 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %1958)
  %1960 = getelementptr inbounds bfloat, ptr %1, i20 656
  store <16 x bfloat> %1959, ptr %1960, align 32, !tbaa !2
  %1961 = bitcast <8 x i32> %1920 to <16 x i16>
  %1962 = getelementptr bfloat, ptr %0, i20 736
  %1963 = load <16 x bfloat>, ptr %1962, align 32, !tbaa !2
  %1964 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1921, <16 x i32> %16, i32 2)
  %1965 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1964, i32 0)
  %1966 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %1918, i32 8)
  %1967 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %1961, i32 0, i32 0)
  %1968 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1967, i32 6, i32 1)
  %1969 = add <16 x i32> %1968, %34
  %1970 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1969, i32 0)
  %1971 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1970), !noalias !15
  %1972 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1971, i32 0)
  %1973 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1970), !noalias !15
  %1974 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1972, <8 x i32> %1973, i32 1)
  %1975 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1969, i32 1)
  %1976 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1975), !noalias !15
  %1977 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1976, i32 0)
  %1978 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1975), !noalias !15
  %1979 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1977, <8 x i32> %1978, i32 1)
  %1980 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1974, <16 x i32> %1979, i32 24)
  %1981 = bitcast <16 x i32> %1980 to <32 x bfloat>
  %1982 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1981, i32 0)
  %1983 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1967, i32 -2, i32 1)
  %1984 = and <16 x i32> %1983, %4
  %1985 = add <16 x i32> %1984, %55
  %1986 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1985, i32 0)
  %1987 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1986), !noalias !20
  %1988 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1987, i32 0)
  %1989 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1986), !noalias !20
  %1990 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1988, <8 x i32> %1989, i32 1)
  %1991 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1985, i32 1)
  %1992 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1991), !noalias !20
  %1993 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1992, i32 0)
  %1994 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1991), !noalias !20
  %1995 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1993, <8 x i32> %1994, i32 1)
  %1996 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1990, <16 x i32> %1995, i32 24)
  %1997 = bitcast <16 x i32> %1996 to <32 x bfloat>
  %1998 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1997, i32 0)
  %1999 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1937, i32 0)
  %2000 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1999, <16 x bfloat> %109, i32 1)
  %2001 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1953, i32 0)
  %2002 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2001, <16 x bfloat> %109, i32 1)
  %2003 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %2000, <32 x bfloat> %2002, i32 60)
  %2004 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %2003)
  %2005 = getelementptr inbounds bfloat, ptr %1, i20 672
  store <16 x bfloat> %2004, ptr %2005, align 32, !tbaa !2
  %2006 = bitcast <8 x i32> %1965 to <16 x i16>
  %2007 = getelementptr bfloat, ptr %0, i20 752
  %2008 = load <16 x bfloat>, ptr %2007, align 32, !tbaa !2
  %2009 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1966, <16 x i32> %16, i32 2)
  %2010 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2009, i32 0)
  %2011 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %1963, i32 8)
  %2012 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %2006, i32 0, i32 0)
  %2013 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2012, i32 6, i32 1)
  %2014 = add <16 x i32> %2013, %34
  %2015 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2014, i32 0)
  %2016 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2015), !noalias !15
  %2017 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2016, i32 0)
  %2018 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2015), !noalias !15
  %2019 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2017, <8 x i32> %2018, i32 1)
  %2020 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2014, i32 1)
  %2021 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2020), !noalias !15
  %2022 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2021, i32 0)
  %2023 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2020), !noalias !15
  %2024 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2022, <8 x i32> %2023, i32 1)
  %2025 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2019, <16 x i32> %2024, i32 24)
  %2026 = bitcast <16 x i32> %2025 to <32 x bfloat>
  %2027 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2026, i32 0)
  %2028 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2012, i32 -2, i32 1)
  %2029 = and <16 x i32> %2028, %4
  %2030 = add <16 x i32> %2029, %55
  %2031 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2030, i32 0)
  %2032 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2031), !noalias !20
  %2033 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2032, i32 0)
  %2034 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2031), !noalias !20
  %2035 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2033, <8 x i32> %2034, i32 1)
  %2036 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2030, i32 1)
  %2037 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2036), !noalias !20
  %2038 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2037, i32 0)
  %2039 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2036), !noalias !20
  %2040 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2038, <8 x i32> %2039, i32 1)
  %2041 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2035, <16 x i32> %2040, i32 24)
  %2042 = bitcast <16 x i32> %2041 to <32 x bfloat>
  %2043 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2042, i32 0)
  %2044 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1982, i32 0)
  %2045 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2044, <16 x bfloat> %109, i32 1)
  %2046 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1998, i32 0)
  %2047 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2046, <16 x bfloat> %109, i32 1)
  %2048 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %2045, <32 x bfloat> %2047, i32 60)
  %2049 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %2048)
  %2050 = getelementptr inbounds bfloat, ptr %1, i20 688
  store <16 x bfloat> %2049, ptr %2050, align 32, !tbaa !2
  %2051 = bitcast <8 x i32> %2010 to <16 x i16>
  %2052 = getelementptr bfloat, ptr %0, i20 768
  %2053 = load <16 x bfloat>, ptr %2052, align 32, !tbaa !2
  %2054 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2011, <16 x i32> %16, i32 2)
  %2055 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2054, i32 0)
  %2056 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %2008, i32 8)
  %2057 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %2051, i32 0, i32 0)
  %2058 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2057, i32 6, i32 1)
  %2059 = add <16 x i32> %2058, %34
  %2060 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2059, i32 0)
  %2061 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2060), !noalias !15
  %2062 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2061, i32 0)
  %2063 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2060), !noalias !15
  %2064 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2062, <8 x i32> %2063, i32 1)
  %2065 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2059, i32 1)
  %2066 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2065), !noalias !15
  %2067 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2066, i32 0)
  %2068 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2065), !noalias !15
  %2069 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2067, <8 x i32> %2068, i32 1)
  %2070 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2064, <16 x i32> %2069, i32 24)
  %2071 = bitcast <16 x i32> %2070 to <32 x bfloat>
  %2072 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2071, i32 0)
  %2073 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2057, i32 -2, i32 1)
  %2074 = and <16 x i32> %2073, %4
  %2075 = add <16 x i32> %2074, %55
  %2076 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2075, i32 0)
  %2077 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2076), !noalias !20
  %2078 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2077, i32 0)
  %2079 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2076), !noalias !20
  %2080 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2078, <8 x i32> %2079, i32 1)
  %2081 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2075, i32 1)
  %2082 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2081), !noalias !20
  %2083 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2082, i32 0)
  %2084 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2081), !noalias !20
  %2085 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2083, <8 x i32> %2084, i32 1)
  %2086 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2080, <16 x i32> %2085, i32 24)
  %2087 = bitcast <16 x i32> %2086 to <32 x bfloat>
  %2088 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2087, i32 0)
  %2089 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2027, i32 0)
  %2090 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2089, <16 x bfloat> %109, i32 1)
  %2091 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2043, i32 0)
  %2092 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2091, <16 x bfloat> %109, i32 1)
  %2093 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %2090, <32 x bfloat> %2092, i32 60)
  %2094 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %2093)
  %2095 = getelementptr inbounds bfloat, ptr %1, i20 704
  store <16 x bfloat> %2094, ptr %2095, align 32, !tbaa !2
  %2096 = bitcast <8 x i32> %2055 to <16 x i16>
  %2097 = getelementptr bfloat, ptr %0, i20 784
  %2098 = load <16 x bfloat>, ptr %2097, align 32, !tbaa !2
  %2099 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2056, <16 x i32> %16, i32 2)
  %2100 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2099, i32 0)
  %2101 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %2053, i32 8)
  %2102 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %2096, i32 0, i32 0)
  %2103 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2102, i32 6, i32 1)
  %2104 = add <16 x i32> %2103, %34
  %2105 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2104, i32 0)
  %2106 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2105), !noalias !15
  %2107 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2106, i32 0)
  %2108 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2105), !noalias !15
  %2109 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2107, <8 x i32> %2108, i32 1)
  %2110 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2104, i32 1)
  %2111 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2110), !noalias !15
  %2112 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2111, i32 0)
  %2113 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2110), !noalias !15
  %2114 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2112, <8 x i32> %2113, i32 1)
  %2115 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2109, <16 x i32> %2114, i32 24)
  %2116 = bitcast <16 x i32> %2115 to <32 x bfloat>
  %2117 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2116, i32 0)
  %2118 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2102, i32 -2, i32 1)
  %2119 = and <16 x i32> %2118, %4
  %2120 = add <16 x i32> %2119, %55
  %2121 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2120, i32 0)
  %2122 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2121), !noalias !20
  %2123 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2122, i32 0)
  %2124 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2121), !noalias !20
  %2125 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2123, <8 x i32> %2124, i32 1)
  %2126 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2120, i32 1)
  %2127 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2126), !noalias !20
  %2128 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2127, i32 0)
  %2129 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2126), !noalias !20
  %2130 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2128, <8 x i32> %2129, i32 1)
  %2131 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2125, <16 x i32> %2130, i32 24)
  %2132 = bitcast <16 x i32> %2131 to <32 x bfloat>
  %2133 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2132, i32 0)
  %2134 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2072, i32 0)
  %2135 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2134, <16 x bfloat> %109, i32 1)
  %2136 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2088, i32 0)
  %2137 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2136, <16 x bfloat> %109, i32 1)
  %2138 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %2135, <32 x bfloat> %2137, i32 60)
  %2139 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %2138)
  %2140 = getelementptr inbounds bfloat, ptr %1, i20 720
  store <16 x bfloat> %2139, ptr %2140, align 32, !tbaa !2
  %2141 = bitcast <8 x i32> %2100 to <16 x i16>
  %2142 = getelementptr bfloat, ptr %0, i20 800
  %2143 = load <16 x bfloat>, ptr %2142, align 32, !tbaa !2
  %2144 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2101, <16 x i32> %16, i32 2)
  %2145 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2144, i32 0)
  %2146 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %2098, i32 8)
  %2147 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %2141, i32 0, i32 0)
  %2148 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2147, i32 6, i32 1)
  %2149 = add <16 x i32> %2148, %34
  %2150 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2149, i32 0)
  %2151 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2150), !noalias !15
  %2152 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2151, i32 0)
  %2153 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2150), !noalias !15
  %2154 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2152, <8 x i32> %2153, i32 1)
  %2155 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2149, i32 1)
  %2156 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2155), !noalias !15
  %2157 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2156, i32 0)
  %2158 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2155), !noalias !15
  %2159 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2157, <8 x i32> %2158, i32 1)
  %2160 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2154, <16 x i32> %2159, i32 24)
  %2161 = bitcast <16 x i32> %2160 to <32 x bfloat>
  %2162 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2161, i32 0)
  %2163 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2147, i32 -2, i32 1)
  %2164 = and <16 x i32> %2163, %4
  %2165 = add <16 x i32> %2164, %55
  %2166 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2165, i32 0)
  %2167 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2166), !noalias !20
  %2168 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2167, i32 0)
  %2169 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2166), !noalias !20
  %2170 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2168, <8 x i32> %2169, i32 1)
  %2171 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2165, i32 1)
  %2172 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2171), !noalias !20
  %2173 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2172, i32 0)
  %2174 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2171), !noalias !20
  %2175 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2173, <8 x i32> %2174, i32 1)
  %2176 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2170, <16 x i32> %2175, i32 24)
  %2177 = bitcast <16 x i32> %2176 to <32 x bfloat>
  %2178 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2177, i32 0)
  %2179 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2117, i32 0)
  %2180 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2179, <16 x bfloat> %109, i32 1)
  %2181 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2133, i32 0)
  %2182 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2181, <16 x bfloat> %109, i32 1)
  %2183 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %2180, <32 x bfloat> %2182, i32 60)
  %2184 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %2183)
  %2185 = getelementptr inbounds bfloat, ptr %1, i20 736
  store <16 x bfloat> %2184, ptr %2185, align 32, !tbaa !2
  %2186 = bitcast <8 x i32> %2145 to <16 x i16>
  %2187 = getelementptr bfloat, ptr %0, i20 816
  %2188 = load <16 x bfloat>, ptr %2187, align 32, !tbaa !2
  %2189 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2146, <16 x i32> %16, i32 2)
  %2190 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2189, i32 0)
  %2191 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %2143, i32 8)
  %2192 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %2186, i32 0, i32 0)
  %2193 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2192, i32 6, i32 1)
  %2194 = add <16 x i32> %2193, %34
  %2195 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2194, i32 0)
  %2196 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2195), !noalias !15
  %2197 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2196, i32 0)
  %2198 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2195), !noalias !15
  %2199 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2197, <8 x i32> %2198, i32 1)
  %2200 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2194, i32 1)
  %2201 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2200), !noalias !15
  %2202 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2201, i32 0)
  %2203 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2200), !noalias !15
  %2204 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2202, <8 x i32> %2203, i32 1)
  %2205 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2199, <16 x i32> %2204, i32 24)
  %2206 = bitcast <16 x i32> %2205 to <32 x bfloat>
  %2207 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2206, i32 0)
  %2208 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2192, i32 -2, i32 1)
  %2209 = and <16 x i32> %2208, %4
  %2210 = add <16 x i32> %2209, %55
  %2211 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2210, i32 0)
  %2212 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2211), !noalias !20
  %2213 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2212, i32 0)
  %2214 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2211), !noalias !20
  %2215 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2213, <8 x i32> %2214, i32 1)
  %2216 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2210, i32 1)
  %2217 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2216), !noalias !20
  %2218 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2217, i32 0)
  %2219 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2216), !noalias !20
  %2220 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2218, <8 x i32> %2219, i32 1)
  %2221 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2215, <16 x i32> %2220, i32 24)
  %2222 = bitcast <16 x i32> %2221 to <32 x bfloat>
  %2223 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2222, i32 0)
  %2224 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2162, i32 0)
  %2225 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2224, <16 x bfloat> %109, i32 1)
  %2226 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2178, i32 0)
  %2227 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2226, <16 x bfloat> %109, i32 1)
  %2228 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %2225, <32 x bfloat> %2227, i32 60)
  %2229 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %2228)
  %2230 = getelementptr inbounds bfloat, ptr %1, i20 752
  store <16 x bfloat> %2229, ptr %2230, align 32, !tbaa !2
  %2231 = bitcast <8 x i32> %2190 to <16 x i16>
  %2232 = getelementptr bfloat, ptr %0, i20 832
  %2233 = load <16 x bfloat>, ptr %2232, align 32, !tbaa !2
  %2234 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2191, <16 x i32> %16, i32 2)
  %2235 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2234, i32 0)
  %2236 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %2188, i32 8)
  %2237 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %2231, i32 0, i32 0)
  %2238 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2237, i32 6, i32 1)
  %2239 = add <16 x i32> %2238, %34
  %2240 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2239, i32 0)
  %2241 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2240), !noalias !15
  %2242 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2241, i32 0)
  %2243 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2240), !noalias !15
  %2244 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2242, <8 x i32> %2243, i32 1)
  %2245 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2239, i32 1)
  %2246 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2245), !noalias !15
  %2247 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2246, i32 0)
  %2248 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2245), !noalias !15
  %2249 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2247, <8 x i32> %2248, i32 1)
  %2250 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2244, <16 x i32> %2249, i32 24)
  %2251 = bitcast <16 x i32> %2250 to <32 x bfloat>
  %2252 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2251, i32 0)
  %2253 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2237, i32 -2, i32 1)
  %2254 = and <16 x i32> %2253, %4
  %2255 = add <16 x i32> %2254, %55
  %2256 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2255, i32 0)
  %2257 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2256), !noalias !20
  %2258 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2257, i32 0)
  %2259 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2256), !noalias !20
  %2260 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2258, <8 x i32> %2259, i32 1)
  %2261 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2255, i32 1)
  %2262 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2261), !noalias !20
  %2263 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2262, i32 0)
  %2264 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2261), !noalias !20
  %2265 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2263, <8 x i32> %2264, i32 1)
  %2266 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2260, <16 x i32> %2265, i32 24)
  %2267 = bitcast <16 x i32> %2266 to <32 x bfloat>
  %2268 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2267, i32 0)
  %2269 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2207, i32 0)
  %2270 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2269, <16 x bfloat> %109, i32 1)
  %2271 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2223, i32 0)
  %2272 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2271, <16 x bfloat> %109, i32 1)
  %2273 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %2270, <32 x bfloat> %2272, i32 60)
  %2274 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %2273)
  %2275 = getelementptr inbounds bfloat, ptr %1, i20 768
  store <16 x bfloat> %2274, ptr %2275, align 32, !tbaa !2
  %2276 = bitcast <8 x i32> %2235 to <16 x i16>
  %2277 = getelementptr bfloat, ptr %0, i20 848
  %2278 = load <16 x bfloat>, ptr %2277, align 32, !tbaa !2
  %2279 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2236, <16 x i32> %16, i32 2)
  %2280 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2279, i32 0)
  %2281 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %2233, i32 8)
  %2282 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %2276, i32 0, i32 0)
  %2283 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2282, i32 6, i32 1)
  %2284 = add <16 x i32> %2283, %34
  %2285 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2284, i32 0)
  %2286 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2285), !noalias !15
  %2287 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2286, i32 0)
  %2288 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2285), !noalias !15
  %2289 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2287, <8 x i32> %2288, i32 1)
  %2290 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2284, i32 1)
  %2291 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2290), !noalias !15
  %2292 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2291, i32 0)
  %2293 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2290), !noalias !15
  %2294 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2292, <8 x i32> %2293, i32 1)
  %2295 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2289, <16 x i32> %2294, i32 24)
  %2296 = bitcast <16 x i32> %2295 to <32 x bfloat>
  %2297 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2296, i32 0)
  %2298 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2282, i32 -2, i32 1)
  %2299 = and <16 x i32> %2298, %4
  %2300 = add <16 x i32> %2299, %55
  %2301 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2300, i32 0)
  %2302 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2301), !noalias !20
  %2303 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2302, i32 0)
  %2304 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2301), !noalias !20
  %2305 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2303, <8 x i32> %2304, i32 1)
  %2306 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2300, i32 1)
  %2307 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2306), !noalias !20
  %2308 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2307, i32 0)
  %2309 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2306), !noalias !20
  %2310 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2308, <8 x i32> %2309, i32 1)
  %2311 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2305, <16 x i32> %2310, i32 24)
  %2312 = bitcast <16 x i32> %2311 to <32 x bfloat>
  %2313 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2312, i32 0)
  %2314 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2252, i32 0)
  %2315 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2314, <16 x bfloat> %109, i32 1)
  %2316 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2268, i32 0)
  %2317 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2316, <16 x bfloat> %109, i32 1)
  %2318 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %2315, <32 x bfloat> %2317, i32 60)
  %2319 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %2318)
  %2320 = getelementptr inbounds bfloat, ptr %1, i20 784
  store <16 x bfloat> %2319, ptr %2320, align 32, !tbaa !2
  %2321 = bitcast <8 x i32> %2280 to <16 x i16>
  %2322 = getelementptr bfloat, ptr %0, i20 864
  %2323 = load <16 x bfloat>, ptr %2322, align 32, !tbaa !2
  %2324 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2281, <16 x i32> %16, i32 2)
  %2325 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2324, i32 0)
  %2326 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %2278, i32 8)
  %2327 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %2321, i32 0, i32 0)
  %2328 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2327, i32 6, i32 1)
  %2329 = add <16 x i32> %2328, %34
  %2330 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2329, i32 0)
  %2331 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2330), !noalias !15
  %2332 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2331, i32 0)
  %2333 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2330), !noalias !15
  %2334 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2332, <8 x i32> %2333, i32 1)
  %2335 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2329, i32 1)
  %2336 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2335), !noalias !15
  %2337 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2336, i32 0)
  %2338 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2335), !noalias !15
  %2339 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2337, <8 x i32> %2338, i32 1)
  %2340 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2334, <16 x i32> %2339, i32 24)
  %2341 = bitcast <16 x i32> %2340 to <32 x bfloat>
  %2342 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2341, i32 0)
  %2343 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2327, i32 -2, i32 1)
  %2344 = and <16 x i32> %2343, %4
  %2345 = add <16 x i32> %2344, %55
  %2346 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2345, i32 0)
  %2347 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2346), !noalias !20
  %2348 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2347, i32 0)
  %2349 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2346), !noalias !20
  %2350 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2348, <8 x i32> %2349, i32 1)
  %2351 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2345, i32 1)
  %2352 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2351), !noalias !20
  %2353 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2352, i32 0)
  %2354 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2351), !noalias !20
  %2355 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2353, <8 x i32> %2354, i32 1)
  %2356 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2350, <16 x i32> %2355, i32 24)
  %2357 = bitcast <16 x i32> %2356 to <32 x bfloat>
  %2358 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2357, i32 0)
  %2359 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2297, i32 0)
  %2360 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2359, <16 x bfloat> %109, i32 1)
  %2361 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2313, i32 0)
  %2362 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2361, <16 x bfloat> %109, i32 1)
  %2363 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %2360, <32 x bfloat> %2362, i32 60)
  %2364 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %2363)
  %2365 = getelementptr inbounds bfloat, ptr %1, i20 800
  store <16 x bfloat> %2364, ptr %2365, align 32, !tbaa !2
  %2366 = bitcast <8 x i32> %2325 to <16 x i16>
  %2367 = getelementptr bfloat, ptr %0, i20 880
  %2368 = load <16 x bfloat>, ptr %2367, align 32, !tbaa !2
  %2369 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2326, <16 x i32> %16, i32 2)
  %2370 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2369, i32 0)
  %2371 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %2323, i32 8)
  %2372 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %2366, i32 0, i32 0)
  %2373 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2372, i32 6, i32 1)
  %2374 = add <16 x i32> %2373, %34
  %2375 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2374, i32 0)
  %2376 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2375), !noalias !15
  %2377 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2376, i32 0)
  %2378 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2375), !noalias !15
  %2379 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2377, <8 x i32> %2378, i32 1)
  %2380 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2374, i32 1)
  %2381 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2380), !noalias !15
  %2382 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2381, i32 0)
  %2383 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2380), !noalias !15
  %2384 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2382, <8 x i32> %2383, i32 1)
  %2385 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2379, <16 x i32> %2384, i32 24)
  %2386 = bitcast <16 x i32> %2385 to <32 x bfloat>
  %2387 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2386, i32 0)
  %2388 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2372, i32 -2, i32 1)
  %2389 = and <16 x i32> %2388, %4
  %2390 = add <16 x i32> %2389, %55
  %2391 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2390, i32 0)
  %2392 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2391), !noalias !20
  %2393 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2392, i32 0)
  %2394 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2391), !noalias !20
  %2395 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2393, <8 x i32> %2394, i32 1)
  %2396 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2390, i32 1)
  %2397 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2396), !noalias !20
  %2398 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2397, i32 0)
  %2399 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2396), !noalias !20
  %2400 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2398, <8 x i32> %2399, i32 1)
  %2401 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2395, <16 x i32> %2400, i32 24)
  %2402 = bitcast <16 x i32> %2401 to <32 x bfloat>
  %2403 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2402, i32 0)
  %2404 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2342, i32 0)
  %2405 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2404, <16 x bfloat> %109, i32 1)
  %2406 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2358, i32 0)
  %2407 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2406, <16 x bfloat> %109, i32 1)
  %2408 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %2405, <32 x bfloat> %2407, i32 60)
  %2409 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %2408)
  %2410 = getelementptr inbounds bfloat, ptr %1, i20 816
  store <16 x bfloat> %2409, ptr %2410, align 32, !tbaa !2
  %2411 = bitcast <8 x i32> %2370 to <16 x i16>
  %2412 = getelementptr bfloat, ptr %0, i20 896
  %2413 = load <16 x bfloat>, ptr %2412, align 32, !tbaa !2
  %2414 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2371, <16 x i32> %16, i32 2)
  %2415 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2414, i32 0)
  %2416 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %2368, i32 8)
  %2417 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %2411, i32 0, i32 0)
  %2418 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2417, i32 6, i32 1)
  %2419 = add <16 x i32> %2418, %34
  %2420 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2419, i32 0)
  %2421 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2420), !noalias !15
  %2422 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2421, i32 0)
  %2423 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2420), !noalias !15
  %2424 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2422, <8 x i32> %2423, i32 1)
  %2425 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2419, i32 1)
  %2426 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2425), !noalias !15
  %2427 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2426, i32 0)
  %2428 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2425), !noalias !15
  %2429 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2427, <8 x i32> %2428, i32 1)
  %2430 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2424, <16 x i32> %2429, i32 24)
  %2431 = bitcast <16 x i32> %2430 to <32 x bfloat>
  %2432 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2431, i32 0)
  %2433 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2417, i32 -2, i32 1)
  %2434 = and <16 x i32> %2433, %4
  %2435 = add <16 x i32> %2434, %55
  %2436 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2435, i32 0)
  %2437 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2436), !noalias !20
  %2438 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2437, i32 0)
  %2439 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2436), !noalias !20
  %2440 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2438, <8 x i32> %2439, i32 1)
  %2441 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2435, i32 1)
  %2442 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2441), !noalias !20
  %2443 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2442, i32 0)
  %2444 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2441), !noalias !20
  %2445 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2443, <8 x i32> %2444, i32 1)
  %2446 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2440, <16 x i32> %2445, i32 24)
  %2447 = bitcast <16 x i32> %2446 to <32 x bfloat>
  %2448 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2447, i32 0)
  %2449 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2387, i32 0)
  %2450 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2449, <16 x bfloat> %109, i32 1)
  %2451 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2403, i32 0)
  %2452 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2451, <16 x bfloat> %109, i32 1)
  %2453 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %2450, <32 x bfloat> %2452, i32 60)
  %2454 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %2453)
  %2455 = getelementptr inbounds bfloat, ptr %1, i20 832
  store <16 x bfloat> %2454, ptr %2455, align 32, !tbaa !2
  %2456 = bitcast <8 x i32> %2415 to <16 x i16>
  %2457 = getelementptr bfloat, ptr %0, i20 912
  %2458 = load <16 x bfloat>, ptr %2457, align 32, !tbaa !2
  %2459 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2416, <16 x i32> %16, i32 2)
  %2460 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2459, i32 0)
  %2461 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %2413, i32 8)
  %2462 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %2456, i32 0, i32 0)
  %2463 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2462, i32 6, i32 1)
  %2464 = add <16 x i32> %2463, %34
  %2465 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2464, i32 0)
  %2466 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2465), !noalias !15
  %2467 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2466, i32 0)
  %2468 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2465), !noalias !15
  %2469 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2467, <8 x i32> %2468, i32 1)
  %2470 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2464, i32 1)
  %2471 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2470), !noalias !15
  %2472 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2471, i32 0)
  %2473 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2470), !noalias !15
  %2474 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2472, <8 x i32> %2473, i32 1)
  %2475 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2469, <16 x i32> %2474, i32 24)
  %2476 = bitcast <16 x i32> %2475 to <32 x bfloat>
  %2477 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2476, i32 0)
  %2478 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2462, i32 -2, i32 1)
  %2479 = and <16 x i32> %2478, %4
  %2480 = add <16 x i32> %2479, %55
  %2481 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2480, i32 0)
  %2482 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2481), !noalias !20
  %2483 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2482, i32 0)
  %2484 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2481), !noalias !20
  %2485 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2483, <8 x i32> %2484, i32 1)
  %2486 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2480, i32 1)
  %2487 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2486), !noalias !20
  %2488 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2487, i32 0)
  %2489 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2486), !noalias !20
  %2490 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2488, <8 x i32> %2489, i32 1)
  %2491 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2485, <16 x i32> %2490, i32 24)
  %2492 = bitcast <16 x i32> %2491 to <32 x bfloat>
  %2493 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2492, i32 0)
  %2494 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2432, i32 0)
  %2495 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2494, <16 x bfloat> %109, i32 1)
  %2496 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2448, i32 0)
  %2497 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2496, <16 x bfloat> %109, i32 1)
  %2498 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %2495, <32 x bfloat> %2497, i32 60)
  %2499 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %2498)
  %2500 = getelementptr inbounds bfloat, ptr %1, i20 848
  store <16 x bfloat> %2499, ptr %2500, align 32, !tbaa !2
  %2501 = bitcast <8 x i32> %2460 to <16 x i16>
  %2502 = getelementptr bfloat, ptr %0, i20 928
  %2503 = load <16 x bfloat>, ptr %2502, align 32, !tbaa !2
  %2504 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2461, <16 x i32> %16, i32 2)
  %2505 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2504, i32 0)
  %2506 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %2458, i32 8)
  %2507 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %2501, i32 0, i32 0)
  %2508 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2507, i32 6, i32 1)
  %2509 = add <16 x i32> %2508, %34
  %2510 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2509, i32 0)
  %2511 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2510), !noalias !15
  %2512 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2511, i32 0)
  %2513 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2510), !noalias !15
  %2514 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2512, <8 x i32> %2513, i32 1)
  %2515 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2509, i32 1)
  %2516 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2515), !noalias !15
  %2517 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2516, i32 0)
  %2518 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2515), !noalias !15
  %2519 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2517, <8 x i32> %2518, i32 1)
  %2520 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2514, <16 x i32> %2519, i32 24)
  %2521 = bitcast <16 x i32> %2520 to <32 x bfloat>
  %2522 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2521, i32 0)
  %2523 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2507, i32 -2, i32 1)
  %2524 = and <16 x i32> %2523, %4
  %2525 = add <16 x i32> %2524, %55
  %2526 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2525, i32 0)
  %2527 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2526), !noalias !20
  %2528 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2527, i32 0)
  %2529 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2526), !noalias !20
  %2530 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2528, <8 x i32> %2529, i32 1)
  %2531 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2525, i32 1)
  %2532 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2531), !noalias !20
  %2533 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2532, i32 0)
  %2534 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2531), !noalias !20
  %2535 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2533, <8 x i32> %2534, i32 1)
  %2536 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2530, <16 x i32> %2535, i32 24)
  %2537 = bitcast <16 x i32> %2536 to <32 x bfloat>
  %2538 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2537, i32 0)
  %2539 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2477, i32 0)
  %2540 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2539, <16 x bfloat> %109, i32 1)
  %2541 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2493, i32 0)
  %2542 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2541, <16 x bfloat> %109, i32 1)
  %2543 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %2540, <32 x bfloat> %2542, i32 60)
  %2544 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %2543)
  %2545 = getelementptr inbounds bfloat, ptr %1, i20 864
  store <16 x bfloat> %2544, ptr %2545, align 32, !tbaa !2
  %2546 = bitcast <8 x i32> %2505 to <16 x i16>
  %2547 = getelementptr bfloat, ptr %0, i20 944
  %2548 = load <16 x bfloat>, ptr %2547, align 32, !tbaa !2
  %2549 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2506, <16 x i32> %16, i32 2)
  %2550 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2549, i32 0)
  %2551 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %2503, i32 8)
  %2552 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %2546, i32 0, i32 0)
  %2553 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2552, i32 6, i32 1)
  %2554 = add <16 x i32> %2553, %34
  %2555 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2554, i32 0)
  %2556 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2555), !noalias !15
  %2557 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2556, i32 0)
  %2558 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2555), !noalias !15
  %2559 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2557, <8 x i32> %2558, i32 1)
  %2560 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2554, i32 1)
  %2561 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2560), !noalias !15
  %2562 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2561, i32 0)
  %2563 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2560), !noalias !15
  %2564 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2562, <8 x i32> %2563, i32 1)
  %2565 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2559, <16 x i32> %2564, i32 24)
  %2566 = bitcast <16 x i32> %2565 to <32 x bfloat>
  %2567 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2566, i32 0)
  %2568 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2552, i32 -2, i32 1)
  %2569 = and <16 x i32> %2568, %4
  %2570 = add <16 x i32> %2569, %55
  %2571 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2570, i32 0)
  %2572 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2571), !noalias !20
  %2573 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2572, i32 0)
  %2574 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2571), !noalias !20
  %2575 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2573, <8 x i32> %2574, i32 1)
  %2576 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2570, i32 1)
  %2577 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2576), !noalias !20
  %2578 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2577, i32 0)
  %2579 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2576), !noalias !20
  %2580 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2578, <8 x i32> %2579, i32 1)
  %2581 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2575, <16 x i32> %2580, i32 24)
  %2582 = bitcast <16 x i32> %2581 to <32 x bfloat>
  %2583 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2582, i32 0)
  %2584 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2522, i32 0)
  %2585 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2584, <16 x bfloat> %109, i32 1)
  %2586 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2538, i32 0)
  %2587 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2586, <16 x bfloat> %109, i32 1)
  %2588 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %2585, <32 x bfloat> %2587, i32 60)
  %2589 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %2588)
  %2590 = getelementptr inbounds bfloat, ptr %1, i20 880
  store <16 x bfloat> %2589, ptr %2590, align 32, !tbaa !2
  %2591 = bitcast <8 x i32> %2550 to <16 x i16>
  %2592 = getelementptr bfloat, ptr %0, i20 960
  %2593 = load <16 x bfloat>, ptr %2592, align 32, !tbaa !2
  %2594 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2551, <16 x i32> %16, i32 2)
  %2595 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2594, i32 0)
  %2596 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %2548, i32 8)
  %2597 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %2591, i32 0, i32 0)
  %2598 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2597, i32 6, i32 1)
  %2599 = add <16 x i32> %2598, %34
  %2600 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2599, i32 0)
  %2601 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2600), !noalias !15
  %2602 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2601, i32 0)
  %2603 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2600), !noalias !15
  %2604 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2602, <8 x i32> %2603, i32 1)
  %2605 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2599, i32 1)
  %2606 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2605), !noalias !15
  %2607 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2606, i32 0)
  %2608 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2605), !noalias !15
  %2609 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2607, <8 x i32> %2608, i32 1)
  %2610 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2604, <16 x i32> %2609, i32 24)
  %2611 = bitcast <16 x i32> %2610 to <32 x bfloat>
  %2612 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2611, i32 0)
  %2613 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2597, i32 -2, i32 1)
  %2614 = and <16 x i32> %2613, %4
  %2615 = add <16 x i32> %2614, %55
  %2616 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2615, i32 0)
  %2617 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2616), !noalias !20
  %2618 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2617, i32 0)
  %2619 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2616), !noalias !20
  %2620 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2618, <8 x i32> %2619, i32 1)
  %2621 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2615, i32 1)
  %2622 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2621), !noalias !20
  %2623 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2622, i32 0)
  %2624 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2621), !noalias !20
  %2625 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2623, <8 x i32> %2624, i32 1)
  %2626 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2620, <16 x i32> %2625, i32 24)
  %2627 = bitcast <16 x i32> %2626 to <32 x bfloat>
  %2628 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2627, i32 0)
  %2629 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2567, i32 0)
  %2630 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2629, <16 x bfloat> %109, i32 1)
  %2631 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2583, i32 0)
  %2632 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2631, <16 x bfloat> %109, i32 1)
  %2633 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %2630, <32 x bfloat> %2632, i32 60)
  %2634 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %2633)
  %2635 = getelementptr inbounds bfloat, ptr %1, i20 896
  store <16 x bfloat> %2634, ptr %2635, align 32, !tbaa !2
  %2636 = bitcast <8 x i32> %2595 to <16 x i16>
  %2637 = getelementptr bfloat, ptr %0, i20 976
  %2638 = load <16 x bfloat>, ptr %2637, align 32, !tbaa !2
  %2639 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2596, <16 x i32> %16, i32 2)
  %2640 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2639, i32 0)
  %2641 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %2593, i32 8)
  %2642 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %2636, i32 0, i32 0)
  %2643 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2642, i32 6, i32 1)
  %2644 = add <16 x i32> %2643, %34
  %2645 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2644, i32 0)
  %2646 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2645), !noalias !15
  %2647 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2646, i32 0)
  %2648 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2645), !noalias !15
  %2649 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2647, <8 x i32> %2648, i32 1)
  %2650 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2644, i32 1)
  %2651 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2650), !noalias !15
  %2652 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2651, i32 0)
  %2653 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2650), !noalias !15
  %2654 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2652, <8 x i32> %2653, i32 1)
  %2655 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2649, <16 x i32> %2654, i32 24)
  %2656 = bitcast <16 x i32> %2655 to <32 x bfloat>
  %2657 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2656, i32 0)
  %2658 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2642, i32 -2, i32 1)
  %2659 = and <16 x i32> %2658, %4
  %2660 = add <16 x i32> %2659, %55
  %2661 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2660, i32 0)
  %2662 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2661), !noalias !20
  %2663 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2662, i32 0)
  %2664 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2661), !noalias !20
  %2665 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2663, <8 x i32> %2664, i32 1)
  %2666 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2660, i32 1)
  %2667 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2666), !noalias !20
  %2668 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2667, i32 0)
  %2669 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2666), !noalias !20
  %2670 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2668, <8 x i32> %2669, i32 1)
  %2671 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2665, <16 x i32> %2670, i32 24)
  %2672 = bitcast <16 x i32> %2671 to <32 x bfloat>
  %2673 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2672, i32 0)
  %2674 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2612, i32 0)
  %2675 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2674, <16 x bfloat> %109, i32 1)
  %2676 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2628, i32 0)
  %2677 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2676, <16 x bfloat> %109, i32 1)
  %2678 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %2675, <32 x bfloat> %2677, i32 60)
  %2679 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %2678)
  %2680 = getelementptr inbounds bfloat, ptr %1, i20 912
  store <16 x bfloat> %2679, ptr %2680, align 32, !tbaa !2
  %2681 = bitcast <8 x i32> %2640 to <16 x i16>
  %2682 = getelementptr bfloat, ptr %0, i20 992
  %2683 = load <16 x bfloat>, ptr %2682, align 32, !tbaa !2
  %2684 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2641, <16 x i32> %16, i32 2)
  %2685 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2684, i32 0)
  %2686 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %2638, i32 8)
  %2687 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %2681, i32 0, i32 0)
  %2688 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2687, i32 6, i32 1)
  %2689 = add <16 x i32> %2688, %34
  %2690 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2689, i32 0)
  %2691 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2690), !noalias !15
  %2692 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2691, i32 0)
  %2693 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2690), !noalias !15
  %2694 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2692, <8 x i32> %2693, i32 1)
  %2695 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2689, i32 1)
  %2696 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2695), !noalias !15
  %2697 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2696, i32 0)
  %2698 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2695), !noalias !15
  %2699 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2697, <8 x i32> %2698, i32 1)
  %2700 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2694, <16 x i32> %2699, i32 24)
  %2701 = bitcast <16 x i32> %2700 to <32 x bfloat>
  %2702 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2701, i32 0)
  %2703 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2687, i32 -2, i32 1)
  %2704 = and <16 x i32> %2703, %4
  %2705 = add <16 x i32> %2704, %55
  %2706 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2705, i32 0)
  %2707 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2706), !noalias !20
  %2708 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2707, i32 0)
  %2709 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2706), !noalias !20
  %2710 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2708, <8 x i32> %2709, i32 1)
  %2711 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2705, i32 1)
  %2712 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2711), !noalias !20
  %2713 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2712, i32 0)
  %2714 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2711), !noalias !20
  %2715 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2713, <8 x i32> %2714, i32 1)
  %2716 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2710, <16 x i32> %2715, i32 24)
  %2717 = bitcast <16 x i32> %2716 to <32 x bfloat>
  %2718 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2717, i32 0)
  %2719 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2657, i32 0)
  %2720 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2719, <16 x bfloat> %109, i32 1)
  %2721 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2673, i32 0)
  %2722 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2721, <16 x bfloat> %109, i32 1)
  %2723 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %2720, <32 x bfloat> %2722, i32 60)
  %2724 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %2723)
  %2725 = getelementptr inbounds bfloat, ptr %1, i20 928
  store <16 x bfloat> %2724, ptr %2725, align 32, !tbaa !2
  %2726 = bitcast <8 x i32> %2685 to <16 x i16>
  %2727 = getelementptr bfloat, ptr %0, i20 1008
  %2728 = load <16 x bfloat>, ptr %2727, align 32, !tbaa !2
  %2729 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2686, <16 x i32> %16, i32 2)
  %2730 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2729, i32 0)
  %2731 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %2683, i32 8)
  %2732 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %2726, i32 0, i32 0)
  %2733 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2732, i32 6, i32 1)
  %2734 = add <16 x i32> %2733, %34
  %2735 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2734, i32 0)
  %2736 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2735), !noalias !15
  %2737 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2736, i32 0)
  %2738 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2735), !noalias !15
  %2739 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2737, <8 x i32> %2738, i32 1)
  %2740 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2734, i32 1)
  %2741 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2740), !noalias !15
  %2742 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2741, i32 0)
  %2743 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2740), !noalias !15
  %2744 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2742, <8 x i32> %2743, i32 1)
  %2745 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2739, <16 x i32> %2744, i32 24)
  %2746 = bitcast <16 x i32> %2745 to <32 x bfloat>
  %2747 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2746, i32 0)
  %2748 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2732, i32 -2, i32 1)
  %2749 = and <16 x i32> %2748, %4
  %2750 = add <16 x i32> %2749, %55
  %2751 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2750, i32 0)
  %2752 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2751), !noalias !20
  %2753 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2752, i32 0)
  %2754 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2751), !noalias !20
  %2755 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2753, <8 x i32> %2754, i32 1)
  %2756 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2750, i32 1)
  %2757 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2756), !noalias !20
  %2758 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2757, i32 0)
  %2759 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2756), !noalias !20
  %2760 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2758, <8 x i32> %2759, i32 1)
  %2761 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2755, <16 x i32> %2760, i32 24)
  %2762 = bitcast <16 x i32> %2761 to <32 x bfloat>
  %2763 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2762, i32 0)
  %2764 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2702, i32 0)
  %2765 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2764, <16 x bfloat> %109, i32 1)
  %2766 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2718, i32 0)
  %2767 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2766, <16 x bfloat> %109, i32 1)
  %2768 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %2765, <32 x bfloat> %2767, i32 60)
  %2769 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %2768)
  %2770 = getelementptr inbounds bfloat, ptr %1, i20 944
  store <16 x bfloat> %2769, ptr %2770, align 32, !tbaa !2
  %2771 = bitcast <8 x i32> %2730 to <16 x i16>
  %2772 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2731, <16 x i32> %16, i32 2)
  %2773 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2772, i32 0)
  %2774 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %2728, i32 8)
  %2775 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %2771, i32 0, i32 0)
  %2776 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2775, i32 6, i32 1)
  %2777 = add <16 x i32> %2776, %34
  %2778 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2777, i32 0)
  %2779 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2778), !noalias !25
  %2780 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2779, i32 0)
  %2781 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2778), !noalias !25
  %2782 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2780, <8 x i32> %2781, i32 1)
  %2783 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2777, i32 1)
  %2784 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2783), !noalias !25
  %2785 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2784, i32 0)
  %2786 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2783), !noalias !25
  %2787 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2785, <8 x i32> %2786, i32 1)
  %2788 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2782, <16 x i32> %2787, i32 24)
  %2789 = bitcast <16 x i32> %2788 to <32 x bfloat>
  %2790 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2789, i32 0)
  %2791 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2775, i32 -2, i32 1)
  %2792 = and <16 x i32> %2791, %4
  %2793 = add <16 x i32> %2792, %55
  %2794 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2793, i32 0)
  %2795 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2794), !noalias !30
  %2796 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2795, i32 0)
  %2797 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2794), !noalias !30
  %2798 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2796, <8 x i32> %2797, i32 1)
  %2799 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2793, i32 1)
  %2800 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2799), !noalias !30
  %2801 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2800, i32 0)
  %2802 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2799), !noalias !30
  %2803 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2801, <8 x i32> %2802, i32 1)
  %2804 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2798, <16 x i32> %2803, i32 24)
  %2805 = bitcast <16 x i32> %2804 to <32 x bfloat>
  %2806 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2805, i32 0)
  %2807 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2747, i32 0)
  %2808 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2807, <16 x bfloat> %109, i32 1)
  %2809 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2763, i32 0)
  %2810 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2809, <16 x bfloat> %109, i32 1)
  %2811 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %2808, <32 x bfloat> %2810, i32 60)
  %2812 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %2811)
  %2813 = getelementptr inbounds bfloat, ptr %1, i20 960
  store <16 x bfloat> %2812, ptr %2813, align 32, !tbaa !2
  %2814 = bitcast <8 x i32> %2773 to <16 x i16>
  %2815 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2774, <16 x i32> %16, i32 2)
  %2816 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2815, i32 0)
  %2817 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %2814, i32 0, i32 0)
  %2818 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2817, i32 6, i32 1)
  %2819 = add <16 x i32> %2818, %34
  %2820 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2819, i32 0)
  %2821 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2820), !noalias !35
  %2822 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2821, i32 0)
  %2823 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2820), !noalias !35
  %2824 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2822, <8 x i32> %2823, i32 1)
  %2825 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2819, i32 1)
  %2826 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2825), !noalias !35
  %2827 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2826, i32 0)
  %2828 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2825), !noalias !35
  %2829 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2827, <8 x i32> %2828, i32 1)
  %2830 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2824, <16 x i32> %2829, i32 24)
  %2831 = bitcast <16 x i32> %2830 to <32 x bfloat>
  %2832 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2831, i32 0)
  %2833 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2817, i32 -2, i32 1)
  %2834 = and <16 x i32> %2833, %4
  %2835 = add <16 x i32> %2834, %55
  %2836 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2835, i32 0)
  %2837 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2836), !noalias !40
  %2838 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2837, i32 0)
  %2839 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2836), !noalias !40
  %2840 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2838, <8 x i32> %2839, i32 1)
  %2841 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2835, i32 1)
  %2842 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2841), !noalias !40
  %2843 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2842, i32 0)
  %2844 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2841), !noalias !40
  %2845 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2843, <8 x i32> %2844, i32 1)
  %2846 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2840, <16 x i32> %2845, i32 24)
  %2847 = bitcast <16 x i32> %2846 to <32 x bfloat>
  %2848 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2847, i32 0)
  %2849 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2790, i32 0)
  %2850 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2849, <16 x bfloat> %109, i32 1)
  %2851 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2806, i32 0)
  %2852 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2851, <16 x bfloat> %109, i32 1)
  %2853 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %2850, <32 x bfloat> %2852, i32 60)
  %2854 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %2853)
  %2855 = getelementptr inbounds bfloat, ptr %1, i20 976
  store <16 x bfloat> %2854, ptr %2855, align 32, !tbaa !2
  %2856 = bitcast <8 x i32> %2816 to <16 x i16>
  %2857 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %2856, i32 0, i32 0)
  %2858 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2857, i32 6, i32 1)
  %2859 = add <16 x i32> %2858, %34
  %2860 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2859, i32 0)
  %2861 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2860), !noalias !45
  %2862 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2861, i32 0)
  %2863 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2860), !noalias !45
  %2864 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2862, <8 x i32> %2863, i32 1)
  %2865 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2859, i32 1)
  %2866 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2865), !noalias !45
  %2867 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2866, i32 0)
  %2868 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2865), !noalias !45
  %2869 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2867, <8 x i32> %2868, i32 1)
  %2870 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2864, <16 x i32> %2869, i32 24)
  %2871 = bitcast <16 x i32> %2870 to <32 x bfloat>
  %2872 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2871, i32 0)
  %2873 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2857, i32 -2, i32 1)
  %2874 = and <16 x i32> %2873, %4
  %2875 = add <16 x i32> %2874, %55
  %2876 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2875, i32 0)
  %2877 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2876), !noalias !50
  %2878 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2877, i32 0)
  %2879 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2876), !noalias !50
  %2880 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2878, <8 x i32> %2879, i32 1)
  %2881 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2875, i32 1)
  %2882 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2881), !noalias !50
  %2883 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2882, i32 0)
  %2884 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2881), !noalias !50
  %2885 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2883, <8 x i32> %2884, i32 1)
  %2886 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2880, <16 x i32> %2885, i32 24)
  %2887 = bitcast <16 x i32> %2886 to <32 x bfloat>
  %2888 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2887, i32 0)
  %2889 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2832, i32 0)
  %2890 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2889, <16 x bfloat> %109, i32 1)
  %2891 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2848, i32 0)
  %2892 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2891, <16 x bfloat> %109, i32 1)
  %2893 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %2890, <32 x bfloat> %2892, i32 60)
  %2894 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %2893)
  %2895 = getelementptr inbounds bfloat, ptr %1, i20 992
  store <16 x bfloat> %2894, ptr %2895, align 32, !tbaa !2
  %2896 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2872, i32 0)
  %2897 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2896, <16 x bfloat> %109, i32 1)
  %2898 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2888, i32 0)
  %2899 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2898, <16 x bfloat> %109, i32 1)
  %2900 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %2897, <32 x bfloat> %2899, i32 60)
  %2901 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %2900)
  %2902 = getelementptr inbounds bfloat, ptr %1, i20 1008
  store <16 x bfloat> %2901, ptr %2902, align 32, !tbaa !2
  ret void
}

; Function Attrs: nofree nosync nounwind memory(none)
declare <8 x i64> @llvm.aie2.v16accfloat() #1

; Function Attrs: nofree nounwind memory(inaccessiblemem: read)
declare <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat>, i32) #2

; Function Attrs: nofree nosync nounwind memory(none)
declare <32 x bfloat> @llvm.aie2.v32bfloat16() #1

; Function Attrs: nofree nosync nounwind memory(none)
declare <32 x bfloat> @llvm.aie2.vbroadcast16.bf512(bfloat) #1

; Function Attrs: nofree nosync nounwind memory(none)
declare <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat>, i32) #1

; Function Attrs: nofree nosync nounwind memory(none)
declare <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat>, i32) #1

; Function Attrs: nofree nosync nounwind memory(none)
declare <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat>, <16 x bfloat>, i32) #1

; Function Attrs: nofree nounwind memory(inaccessiblemem: read)
declare <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat>, <32 x bfloat>, i32) #2

; Function Attrs: nofree nounwind memory(inaccessiblemem: read)
declare <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64>) #2

; Function Attrs: nofree nosync nounwind memory(none)
declare <16 x i32> @llvm.aie2.v16int32() #1

; Function Attrs: nofree nosync nounwind memory(none)
declare <16 x i32> @llvm.aie2.vbroadcast32.I512(i32) #1

; Function Attrs: nofree nosync nounwind memory(none)
declare <16 x bfloat> @llvm.aie2.v16bfloat16() #1

; Function Attrs: nofree nosync nounwind memory(none)
declare <16 x i16> @llvm.aie2.v16int16() #1

; Function Attrs: nofree nosync nounwind memory(none)
declare <16 x i32> @llvm.aie2.vshuffle(<16 x i32>, <16 x i32>, i32) #1

; Function Attrs: nofree nosync nounwind memory(none)
declare <32 x i16> @llvm.aie2.v32int16() #1

; Function Attrs: nofree nosync nounwind memory(none)
declare <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32>, i32) #1

; Function Attrs: nofree nosync nounwind memory(none)
declare <16 x i64> @llvm.aie2.v16acc64() #1

; Function Attrs: nofree nounwind memory(inaccessiblemem: read)
declare <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16>, i32, i32) #2

; Function Attrs: nofree nounwind memory(inaccessiblemem: read)
declare <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64>, i32, i32) #2

; Function Attrs: nofree nosync nounwind memory(none)
declare <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32>, <8 x i32>, i32) #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare <16 x i32> @llvm.aie2.vsel32(<16 x i32>, <16 x i32>, i32) #3

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(read)
declare <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32>) #4

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(read)
declare <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32>) #4

attributes #0 = { mustprogress nofree nounwind memory(read, argmem: readwrite) "no-trapping-math"="true" "stack-protector-buffer-size"="8" }
attributes #1 = { nofree nosync nounwind memory(none) }
attributes #2 = { nofree nounwind memory(inaccessiblemem: read) }
attributes #3 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #4 = { mustprogress nocallback nofree nosync nounwind willreturn memory(read) }

!llvm.linker.options = !{}
!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 18.0.0git"}
!2 = !{!3, !3, i64 0}
!3 = !{!"omnipotent char", !4, i64 0}
!4 = !{!"Simple C++ TBAA"}
!5 = !{!6, !8}
!6 = distinct !{!6, !7, !"_ZN3aie6detail15parallel_lookupItNS0_3lutILj4Eu6__bf16u6__bf16EELNS0_14lut_oor_policyE1EE5fetchINS_6vectorItLj16EEELj16EQaaaaleclsrTL0__4sizeELi32EleTL0_0_clsrS9_4sizeEleTL0_0_sr20native_vector_lengthIT0_EE5valueEENS7_Iu6__bf16XT0_EEERKT_: argument 0"}
!7 = distinct !{!7, !"_ZN3aie6detail15parallel_lookupItNS0_3lutILj4Eu6__bf16u6__bf16EELNS0_14lut_oor_policyE1EE5fetchINS_6vectorItLj16EEELj16EQaaaaleclsrTL0__4sizeELi32EleTL0_0_clsrS9_4sizeEleTL0_0_sr20native_vector_lengthIT0_EE5valueEENS7_Iu6__bf16XT0_EEERKT_"}
!8 = distinct !{!8, !9, !"_ZN3aie15parallel_lookupItNS_3lutILj4Eu6__bf16u6__bf16EELNS_6detail14lut_oor_policyE1EE5fetchITkNS_6VectorENS_6vectorItLj16EEELj16EEENS7_Iu6__bf16XT0_EEERKT_: argument 0"}
!9 = distinct !{!9, !"_ZN3aie15parallel_lookupItNS_3lutILj4Eu6__bf16u6__bf16EELNS_6detail14lut_oor_policyE1EE5fetchITkNS_6VectorENS_6vectorItLj16EEELj16EEENS7_Iu6__bf16XT0_EEERKT_"}
!10 = !{!11, !13}
!11 = distinct !{!11, !12, !"_ZN3aie6detail15parallel_lookupItNS0_3lutILj4Eu6__bf16u6__bf16EELNS0_14lut_oor_policyE1EE5fetchINS_6vectorItLj16EEELj16EQaaaaleclsrTL0__4sizeELi32EleTL0_0_clsrS9_4sizeEleTL0_0_sr20native_vector_lengthIT0_EE5valueEENS7_Iu6__bf16XT0_EEERKT_: argument 0"}
!12 = distinct !{!12, !"_ZN3aie6detail15parallel_lookupItNS0_3lutILj4Eu6__bf16u6__bf16EELNS0_14lut_oor_policyE1EE5fetchINS_6vectorItLj16EEELj16EQaaaaleclsrTL0__4sizeELi32EleTL0_0_clsrS9_4sizeEleTL0_0_sr20native_vector_lengthIT0_EE5valueEENS7_Iu6__bf16XT0_EEERKT_"}
!13 = distinct !{!13, !14, !"_ZN3aie15parallel_lookupItNS_3lutILj4Eu6__bf16u6__bf16EELNS_6detail14lut_oor_policyE1EE5fetchITkNS_6VectorENS_6vectorItLj16EEELj16EEENS7_Iu6__bf16XT0_EEERKT_: argument 0"}
!14 = distinct !{!14, !"_ZN3aie15parallel_lookupItNS_3lutILj4Eu6__bf16u6__bf16EELNS_6detail14lut_oor_policyE1EE5fetchITkNS_6VectorENS_6vectorItLj16EEELj16EEENS7_Iu6__bf16XT0_EEERKT_"}
!15 = !{!16, !18}
!16 = distinct !{!16, !17, !"_ZN3aie6detail15parallel_lookupItNS0_3lutILj4Eu6__bf16u6__bf16EELNS0_14lut_oor_policyE1EE5fetchINS_6vectorItLj16EEELj16EQaaaaleclsrTL0__4sizeELi32EleTL0_0_clsrS9_4sizeEleTL0_0_sr20native_vector_lengthIT0_EE5valueEENS7_Iu6__bf16XT0_EEERKT_: argument 0"}
!17 = distinct !{!17, !"_ZN3aie6detail15parallel_lookupItNS0_3lutILj4Eu6__bf16u6__bf16EELNS0_14lut_oor_policyE1EE5fetchINS_6vectorItLj16EEELj16EQaaaaleclsrTL0__4sizeELi32EleTL0_0_clsrS9_4sizeEleTL0_0_sr20native_vector_lengthIT0_EE5valueEENS7_Iu6__bf16XT0_EEERKT_"}
!18 = distinct !{!18, !19, !"_ZN3aie15parallel_lookupItNS_3lutILj4Eu6__bf16u6__bf16EELNS_6detail14lut_oor_policyE1EE5fetchITkNS_6VectorENS_6vectorItLj16EEELj16EEENS7_Iu6__bf16XT0_EEERKT_: argument 0"}
!19 = distinct !{!19, !"_ZN3aie15parallel_lookupItNS_3lutILj4Eu6__bf16u6__bf16EELNS_6detail14lut_oor_policyE1EE5fetchITkNS_6VectorENS_6vectorItLj16EEELj16EEENS7_Iu6__bf16XT0_EEERKT_"}
!20 = !{!21, !23}
!21 = distinct !{!21, !22, !"_ZN3aie6detail15parallel_lookupItNS0_3lutILj4Eu6__bf16u6__bf16EELNS0_14lut_oor_policyE1EE5fetchINS_6vectorItLj16EEELj16EQaaaaleclsrTL0__4sizeELi32EleTL0_0_clsrS9_4sizeEleTL0_0_sr20native_vector_lengthIT0_EE5valueEENS7_Iu6__bf16XT0_EEERKT_: argument 0"}
!22 = distinct !{!22, !"_ZN3aie6detail15parallel_lookupItNS0_3lutILj4Eu6__bf16u6__bf16EELNS0_14lut_oor_policyE1EE5fetchINS_6vectorItLj16EEELj16EQaaaaleclsrTL0__4sizeELi32EleTL0_0_clsrS9_4sizeEleTL0_0_sr20native_vector_lengthIT0_EE5valueEENS7_Iu6__bf16XT0_EEERKT_"}
!23 = distinct !{!23, !24, !"_ZN3aie15parallel_lookupItNS_3lutILj4Eu6__bf16u6__bf16EELNS_6detail14lut_oor_policyE1EE5fetchITkNS_6VectorENS_6vectorItLj16EEELj16EEENS7_Iu6__bf16XT0_EEERKT_: argument 0"}
!24 = distinct !{!24, !"_ZN3aie15parallel_lookupItNS_3lutILj4Eu6__bf16u6__bf16EELNS_6detail14lut_oor_policyE1EE5fetchITkNS_6VectorENS_6vectorItLj16EEELj16EEENS7_Iu6__bf16XT0_EEERKT_"}
!25 = !{!26, !28}
!26 = distinct !{!26, !27, !"_ZN3aie6detail15parallel_lookupItNS0_3lutILj4Eu6__bf16u6__bf16EELNS0_14lut_oor_policyE1EE5fetchINS_6vectorItLj16EEELj16EQaaaaleclsrTL0__4sizeELi32EleTL0_0_clsrS9_4sizeEleTL0_0_sr20native_vector_lengthIT0_EE5valueEENS7_Iu6__bf16XT0_EEERKT_: argument 0"}
!27 = distinct !{!27, !"_ZN3aie6detail15parallel_lookupItNS0_3lutILj4Eu6__bf16u6__bf16EELNS0_14lut_oor_policyE1EE5fetchINS_6vectorItLj16EEELj16EQaaaaleclsrTL0__4sizeELi32EleTL0_0_clsrS9_4sizeEleTL0_0_sr20native_vector_lengthIT0_EE5valueEENS7_Iu6__bf16XT0_EEERKT_"}
!28 = distinct !{!28, !29, !"_ZN3aie15parallel_lookupItNS_3lutILj4Eu6__bf16u6__bf16EELNS_6detail14lut_oor_policyE1EE5fetchITkNS_6VectorENS_6vectorItLj16EEELj16EEENS7_Iu6__bf16XT0_EEERKT_: argument 0"}
!29 = distinct !{!29, !"_ZN3aie15parallel_lookupItNS_3lutILj4Eu6__bf16u6__bf16EELNS_6detail14lut_oor_policyE1EE5fetchITkNS_6VectorENS_6vectorItLj16EEELj16EEENS7_Iu6__bf16XT0_EEERKT_"}
!30 = !{!31, !33}
!31 = distinct !{!31, !32, !"_ZN3aie6detail15parallel_lookupItNS0_3lutILj4Eu6__bf16u6__bf16EELNS0_14lut_oor_policyE1EE5fetchINS_6vectorItLj16EEELj16EQaaaaleclsrTL0__4sizeELi32EleTL0_0_clsrS9_4sizeEleTL0_0_sr20native_vector_lengthIT0_EE5valueEENS7_Iu6__bf16XT0_EEERKT_: argument 0"}
!32 = distinct !{!32, !"_ZN3aie6detail15parallel_lookupItNS0_3lutILj4Eu6__bf16u6__bf16EELNS0_14lut_oor_policyE1EE5fetchINS_6vectorItLj16EEELj16EQaaaaleclsrTL0__4sizeELi32EleTL0_0_clsrS9_4sizeEleTL0_0_sr20native_vector_lengthIT0_EE5valueEENS7_Iu6__bf16XT0_EEERKT_"}
!33 = distinct !{!33, !34, !"_ZN3aie15parallel_lookupItNS_3lutILj4Eu6__bf16u6__bf16EELNS_6detail14lut_oor_policyE1EE5fetchITkNS_6VectorENS_6vectorItLj16EEELj16EEENS7_Iu6__bf16XT0_EEERKT_: argument 0"}
!34 = distinct !{!34, !"_ZN3aie15parallel_lookupItNS_3lutILj4Eu6__bf16u6__bf16EELNS_6detail14lut_oor_policyE1EE5fetchITkNS_6VectorENS_6vectorItLj16EEELj16EEENS7_Iu6__bf16XT0_EEERKT_"}
!35 = !{!36, !38}
!36 = distinct !{!36, !37, !"_ZN3aie6detail15parallel_lookupItNS0_3lutILj4Eu6__bf16u6__bf16EELNS0_14lut_oor_policyE1EE5fetchINS_6vectorItLj16EEELj16EQaaaaleclsrTL0__4sizeELi32EleTL0_0_clsrS9_4sizeEleTL0_0_sr20native_vector_lengthIT0_EE5valueEENS7_Iu6__bf16XT0_EEERKT_: argument 0"}
!37 = distinct !{!37, !"_ZN3aie6detail15parallel_lookupItNS0_3lutILj4Eu6__bf16u6__bf16EELNS0_14lut_oor_policyE1EE5fetchINS_6vectorItLj16EEELj16EQaaaaleclsrTL0__4sizeELi32EleTL0_0_clsrS9_4sizeEleTL0_0_sr20native_vector_lengthIT0_EE5valueEENS7_Iu6__bf16XT0_EEERKT_"}
!38 = distinct !{!38, !39, !"_ZN3aie15parallel_lookupItNS_3lutILj4Eu6__bf16u6__bf16EELNS_6detail14lut_oor_policyE1EE5fetchITkNS_6VectorENS_6vectorItLj16EEELj16EEENS7_Iu6__bf16XT0_EEERKT_: argument 0"}
!39 = distinct !{!39, !"_ZN3aie15parallel_lookupItNS_3lutILj4Eu6__bf16u6__bf16EELNS_6detail14lut_oor_policyE1EE5fetchITkNS_6VectorENS_6vectorItLj16EEELj16EEENS7_Iu6__bf16XT0_EEERKT_"}
!40 = !{!41, !43}
!41 = distinct !{!41, !42, !"_ZN3aie6detail15parallel_lookupItNS0_3lutILj4Eu6__bf16u6__bf16EELNS0_14lut_oor_policyE1EE5fetchINS_6vectorItLj16EEELj16EQaaaaleclsrTL0__4sizeELi32EleTL0_0_clsrS9_4sizeEleTL0_0_sr20native_vector_lengthIT0_EE5valueEENS7_Iu6__bf16XT0_EEERKT_: argument 0"}
!42 = distinct !{!42, !"_ZN3aie6detail15parallel_lookupItNS0_3lutILj4Eu6__bf16u6__bf16EELNS0_14lut_oor_policyE1EE5fetchINS_6vectorItLj16EEELj16EQaaaaleclsrTL0__4sizeELi32EleTL0_0_clsrS9_4sizeEleTL0_0_sr20native_vector_lengthIT0_EE5valueEENS7_Iu6__bf16XT0_EEERKT_"}
!43 = distinct !{!43, !44, !"_ZN3aie15parallel_lookupItNS_3lutILj4Eu6__bf16u6__bf16EELNS_6detail14lut_oor_policyE1EE5fetchITkNS_6VectorENS_6vectorItLj16EEELj16EEENS7_Iu6__bf16XT0_EEERKT_: argument 0"}
!44 = distinct !{!44, !"_ZN3aie15parallel_lookupItNS_3lutILj4Eu6__bf16u6__bf16EELNS_6detail14lut_oor_policyE1EE5fetchITkNS_6VectorENS_6vectorItLj16EEELj16EEENS7_Iu6__bf16XT0_EEERKT_"}
!45 = !{!46, !48}
!46 = distinct !{!46, !47, !"_ZN3aie6detail15parallel_lookupItNS0_3lutILj4Eu6__bf16u6__bf16EELNS0_14lut_oor_policyE1EE5fetchINS_6vectorItLj16EEELj16EQaaaaleclsrTL0__4sizeELi32EleTL0_0_clsrS9_4sizeEleTL0_0_sr20native_vector_lengthIT0_EE5valueEENS7_Iu6__bf16XT0_EEERKT_: argument 0"}
!47 = distinct !{!47, !"_ZN3aie6detail15parallel_lookupItNS0_3lutILj4Eu6__bf16u6__bf16EELNS0_14lut_oor_policyE1EE5fetchINS_6vectorItLj16EEELj16EQaaaaleclsrTL0__4sizeELi32EleTL0_0_clsrS9_4sizeEleTL0_0_sr20native_vector_lengthIT0_EE5valueEENS7_Iu6__bf16XT0_EEERKT_"}
!48 = distinct !{!48, !49, !"_ZN3aie15parallel_lookupItNS_3lutILj4Eu6__bf16u6__bf16EELNS_6detail14lut_oor_policyE1EE5fetchITkNS_6VectorENS_6vectorItLj16EEELj16EEENS7_Iu6__bf16XT0_EEERKT_: argument 0"}
!49 = distinct !{!49, !"_ZN3aie15parallel_lookupItNS_3lutILj4Eu6__bf16u6__bf16EELNS_6detail14lut_oor_policyE1EE5fetchITkNS_6VectorENS_6vectorItLj16EEELj16EEENS7_Iu6__bf16XT0_EEERKT_"}
!50 = !{!51, !53}
!51 = distinct !{!51, !52, !"_ZN3aie6detail15parallel_lookupItNS0_3lutILj4Eu6__bf16u6__bf16EELNS0_14lut_oor_policyE1EE5fetchINS_6vectorItLj16EEELj16EQaaaaleclsrTL0__4sizeELi32EleTL0_0_clsrS9_4sizeEleTL0_0_sr20native_vector_lengthIT0_EE5valueEENS7_Iu6__bf16XT0_EEERKT_: argument 0"}
!52 = distinct !{!52, !"_ZN3aie6detail15parallel_lookupItNS0_3lutILj4Eu6__bf16u6__bf16EELNS0_14lut_oor_policyE1EE5fetchINS_6vectorItLj16EEELj16EQaaaaleclsrTL0__4sizeELi32EleTL0_0_clsrS9_4sizeEleTL0_0_sr20native_vector_lengthIT0_EE5valueEENS7_Iu6__bf16XT0_EEERKT_"}
!53 = distinct !{!53, !54, !"_ZN3aie15parallel_lookupItNS_3lutILj4Eu6__bf16u6__bf16EELNS_6detail14lut_oor_policyE1EE5fetchITkNS_6VectorENS_6vectorItLj16EEELj16EEENS7_Iu6__bf16XT0_EEERKT_: argument 0"}
!54 = distinct !{!54, !"_ZN3aie15parallel_lookupItNS_3lutILj4Eu6__bf16u6__bf16EELNS_6detail14lut_oor_policyE1EE5fetchITkNS_6VectorENS_6vectorItLj16EEELj16EEENS7_Iu6__bf16XT0_EEERKT_"}
