; ModuleID = 'dut_inlined.cc'
source_filename = "dut_inlined.cc"
target datalayout = "e-m:e-p:20:32-i1:8:32-i8:8:32-i16:16:32-i32:32:32-f32:32:32-i64:32-f64:32-a:0:32-n32"
target triple = "aie2"

@exp_ilut_ab = external dso_local global [512 x i16], align 32
@exp_ilut_cd = external dso_local global [512 x i16], align 32
@exp_flut_ab = external dso_local global [512 x i16], align 32
@exp_flut_cd = external dso_local global [512 x i16], align 32

; Function Attrs: mustprogress nofree nounwind memory(read, argmem: readwrite)
define dso_local void @dut(ptr noalias nocapture readonly %0, ptr noalias nocapture writeonly %1) local_unnamed_addr #0 {
  %3 = tail call noundef <16 x i32> @llvm.aie2.v16int32()
  %4 = tail call noundef <16 x i32> @llvm.aie2.vbroadcast32.I512(i32 1023)
  %5 = tail call noundef <16 x i32> @llvm.aie2.vbroadcast32.I512(i32 0)
  %6 = tail call noundef <16 x bfloat> @llvm.aie2.v16bfloat16()
  %7 = tail call noundef <8 x i64> @llvm.aie2.clr16f.conf()
  %8 = tail call noundef <8 x i64> @llvm.aie2.v16accfloat()
  %9 = tail call noundef <16 x i16> @llvm.aie2.v16int16()
  %10 = load <16 x bfloat>, ptr %0, align 32, !tbaa !2
  %11 = getelementptr inbounds bfloat, ptr %0, i20 16
  %12 = load <16 x bfloat>, ptr %11, align 32, !tbaa !2
  %13 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %10, i32 8)
  %14 = tail call noundef <32 x i16> @llvm.aie2.v32int16()
  %15 = bitcast <32 x i16> %14 to <16 x i32>
  %16 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %13, <16 x i32> %15, i32 2)
  %17 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %16, i32 0)
  %18 = getelementptr inbounds bfloat, ptr %0, i20 32
  %19 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %12, i32 8)
  %20 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %19, <16 x i32> %15, i32 2)
  %21 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %20, i32 0)
  %22 = bitcast <8 x i32> %17 to <16 x i16>
  %23 = tail call noundef <32 x bfloat> @llvm.aie2.v32bfloat16()
  %24 = tail call noundef <16 x i64> @llvm.aie2.v16acc64()
  %25 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %22, i32 0, i32 0)
  %26 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %25, i32 6, i32 1)
  %27 = zext i20 ptrtoint (ptr @exp_ilut_ab to i20) to i32
  %28 = tail call noundef <16 x i32> @llvm.aie2.vbroadcast32.I512(i32 %27)
  %29 = zext i20 ptrtoint (ptr @exp_ilut_cd to i20) to i32
  %30 = tail call noundef <16 x i32> @llvm.aie2.vbroadcast32.I512(i32 %29)
  %31 = tail call noundef <16 x i32> @llvm.aie2.vsel32(<16 x i32> %28, <16 x i32> %30, i32 52428)
  %32 = add <16 x i32> %31, %26
  %33 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %32, i32 0)
  %34 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %33), !noalias !5
  %35 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %34, i32 0)
  %36 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %33), !noalias !5
  %37 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %35, <8 x i32> %36, i32 1)
  %38 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %32, i32 1)
  %39 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %38), !noalias !5
  %40 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %39, i32 0)
  %41 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %38), !noalias !5
  %42 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %40, <8 x i32> %41, i32 1)
  %43 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %37, <16 x i32> %42, i32 24)
  %44 = bitcast <16 x i32> %43 to <32 x bfloat>
  %45 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %44, i32 0)
  %46 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %25, i32 -2, i32 1)
  %47 = and <16 x i32> %46, %4
  %48 = zext i20 ptrtoint (ptr @exp_flut_ab to i20) to i32
  %49 = tail call noundef <16 x i32> @llvm.aie2.vbroadcast32.I512(i32 %48)
  %50 = zext i20 ptrtoint (ptr @exp_flut_cd to i20) to i32
  %51 = tail call noundef <16 x i32> @llvm.aie2.vbroadcast32.I512(i32 %50)
  %52 = tail call noundef <16 x i32> @llvm.aie2.vsel32(<16 x i32> %49, <16 x i32> %51, i32 52428)
  %53 = add <16 x i32> %52, %47
  %54 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %53, i32 0)
  %55 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %54), !noalias !10
  %56 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %55, i32 0)
  %57 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %54), !noalias !10
  %58 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %56, <8 x i32> %57, i32 1)
  %59 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %53, i32 1)
  %60 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %59), !noalias !10
  %61 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %60, i32 0)
  %62 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %59), !noalias !10
  %63 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %61, <8 x i32> %62, i32 1)
  %64 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %58, <16 x i32> %63, i32 24)
  %65 = bitcast <16 x i32> %64 to <32 x bfloat>
  %66 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %65, i32 0)
  %67 = getelementptr bfloat, ptr %0, i20 48
  %68 = load <16 x bfloat>, ptr %18, align 32, !tbaa !2
  %69 = bitcast <8 x i32> %21 to <16 x i16>
  %70 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %68, i32 8)
  %71 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %70, <16 x i32> %15, i32 2)
  %72 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %71, i32 0)
  %73 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %69, i32 0, i32 0)
  %74 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %73, i32 6, i32 1)
  %75 = add <16 x i32> %74, %31
  %76 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %75, i32 0)
  %77 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %76), !noalias !15
  %78 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %77, i32 0)
  %79 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %76), !noalias !15
  %80 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %78, <8 x i32> %79, i32 1)
  %81 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %75, i32 1)
  %82 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %81), !noalias !15
  %83 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %82, i32 0)
  %84 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %81), !noalias !15
  %85 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %83, <8 x i32> %84, i32 1)
  %86 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %80, <16 x i32> %85, i32 24)
  %87 = bitcast <16 x i32> %86 to <32 x bfloat>
  %88 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %87, i32 0)
  %89 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %73, i32 -2, i32 1)
  %90 = and <16 x i32> %89, %4
  %91 = add <16 x i32> %90, %52
  %92 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %91, i32 0)
  %93 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %92), !noalias !20
  %94 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %93, i32 0)
  %95 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %92), !noalias !20
  %96 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %94, <8 x i32> %95, i32 1)
  %97 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %91, i32 1)
  %98 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %97), !noalias !20
  %99 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %98, i32 0)
  %100 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %97), !noalias !20
  %101 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %99, <8 x i32> %100, i32 1)
  %102 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %96, <16 x i32> %101, i32 24)
  %103 = bitcast <16 x i32> %102 to <32 x bfloat>
  %104 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %103, i32 0)
  %105 = tail call noundef <32 x bfloat> @llvm.aie2.vbroadcast16.bf512(bfloat 0xR0000)
  %106 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %105, i32 0)
  %107 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %45, i32 0)
  %108 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %107, <16 x bfloat> %106, i32 1)
  %109 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %66, i32 0)
  %110 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %109, <16 x bfloat> %106, i32 1)
  %111 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %108, <32 x bfloat> %110, i32 60)
  %112 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %111)
  %113 = load <16 x bfloat>, ptr %67, align 32, !tbaa !2
  %114 = bitcast <8 x i32> %72 to <16 x i16>
  %115 = getelementptr bfloat, ptr %0, i20 64
  %116 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %113, i32 8)
  %117 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %116, <16 x i32> %15, i32 2)
  %118 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %117, i32 0)
  %119 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %114, i32 0, i32 0)
  %120 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %119, i32 6, i32 1)
  %121 = add <16 x i32> %120, %31
  %122 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %121, i32 0)
  %123 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %122), !noalias !15
  %124 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %123, i32 0)
  %125 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %122), !noalias !15
  %126 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %124, <8 x i32> %125, i32 1)
  %127 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %121, i32 1)
  %128 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %127), !noalias !15
  %129 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %128, i32 0)
  %130 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %127), !noalias !15
  %131 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %129, <8 x i32> %130, i32 1)
  %132 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %126, <16 x i32> %131, i32 24)
  %133 = bitcast <16 x i32> %132 to <32 x bfloat>
  %134 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %133, i32 0)
  %135 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %119, i32 -2, i32 1)
  %136 = and <16 x i32> %135, %4
  %137 = add <16 x i32> %136, %52
  %138 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %137, i32 0)
  %139 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %138), !noalias !20
  %140 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %139, i32 0)
  %141 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %138), !noalias !20
  %142 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %140, <8 x i32> %141, i32 1)
  %143 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %137, i32 1)
  %144 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %143), !noalias !20
  %145 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %144, i32 0)
  %146 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %143), !noalias !20
  %147 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %145, <8 x i32> %146, i32 1)
  %148 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %142, <16 x i32> %147, i32 24)
  %149 = bitcast <16 x i32> %148 to <32 x bfloat>
  %150 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %149, i32 0)
  %151 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %88, i32 0)
  %152 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %151, <16 x bfloat> %106, i32 1)
  %153 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %104, i32 0)
  %154 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %153, <16 x bfloat> %106, i32 1)
  %155 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %152, <32 x bfloat> %154, i32 60)
  %156 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %155)
  %157 = load <16 x bfloat>, ptr %115, align 32, !tbaa !2
  %158 = bitcast <8 x i32> %118 to <16 x i16>
  %159 = getelementptr bfloat, ptr %0, i20 80
  %160 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %157, i32 8)
  %161 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %160, <16 x i32> %15, i32 2)
  %162 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %161, i32 0)
  %163 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %158, i32 0, i32 0)
  %164 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %163, i32 6, i32 1)
  %165 = add <16 x i32> %164, %31
  %166 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %165, i32 0)
  %167 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %166), !noalias !15
  %168 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %167, i32 0)
  %169 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %166), !noalias !15
  %170 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %168, <8 x i32> %169, i32 1)
  %171 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %165, i32 1)
  %172 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %171), !noalias !15
  %173 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %172, i32 0)
  %174 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %171), !noalias !15
  %175 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %173, <8 x i32> %174, i32 1)
  %176 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %170, <16 x i32> %175, i32 24)
  %177 = bitcast <16 x i32> %176 to <32 x bfloat>
  %178 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %177, i32 0)
  %179 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %163, i32 -2, i32 1)
  %180 = and <16 x i32> %179, %4
  %181 = add <16 x i32> %180, %52
  %182 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %181, i32 0)
  %183 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %182), !noalias !20
  %184 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %183, i32 0)
  %185 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %182), !noalias !20
  %186 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %184, <8 x i32> %185, i32 1)
  %187 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %181, i32 1)
  %188 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %187), !noalias !20
  %189 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %188, i32 0)
  %190 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %187), !noalias !20
  %191 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %189, <8 x i32> %190, i32 1)
  %192 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %186, <16 x i32> %191, i32 24)
  %193 = bitcast <16 x i32> %192 to <32 x bfloat>
  %194 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %193, i32 0)
  %195 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %134, i32 0)
  %196 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %195, <16 x bfloat> %106, i32 1)
  %197 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %150, i32 0)
  %198 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %197, <16 x bfloat> %106, i32 1)
  %199 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %196, <32 x bfloat> %198, i32 60)
  %200 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %199)
  %201 = load <16 x bfloat>, ptr %159, align 32, !tbaa !2
  %202 = bitcast <8 x i32> %162 to <16 x i16>
  %203 = getelementptr bfloat, ptr %0, i20 96
  %204 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %201, i32 8)
  %205 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %204, <16 x i32> %15, i32 2)
  %206 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %205, i32 0)
  %207 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %202, i32 0, i32 0)
  %208 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %207, i32 6, i32 1)
  %209 = add <16 x i32> %208, %31
  %210 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %209, i32 0)
  %211 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %210), !noalias !15
  %212 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %211, i32 0)
  %213 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %210), !noalias !15
  %214 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %212, <8 x i32> %213, i32 1)
  %215 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %209, i32 1)
  %216 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %215), !noalias !15
  %217 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %216, i32 0)
  %218 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %215), !noalias !15
  %219 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %217, <8 x i32> %218, i32 1)
  %220 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %214, <16 x i32> %219, i32 24)
  %221 = bitcast <16 x i32> %220 to <32 x bfloat>
  %222 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %221, i32 0)
  %223 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %207, i32 -2, i32 1)
  %224 = and <16 x i32> %223, %4
  %225 = add <16 x i32> %224, %52
  %226 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %225, i32 0)
  %227 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %226), !noalias !20
  %228 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %227, i32 0)
  %229 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %226), !noalias !20
  %230 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %228, <8 x i32> %229, i32 1)
  %231 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %225, i32 1)
  %232 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %231), !noalias !20
  %233 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %232, i32 0)
  %234 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %231), !noalias !20
  %235 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %233, <8 x i32> %234, i32 1)
  %236 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %230, <16 x i32> %235, i32 24)
  %237 = bitcast <16 x i32> %236 to <32 x bfloat>
  %238 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %237, i32 0)
  %239 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %178, i32 0)
  %240 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %239, <16 x bfloat> %106, i32 1)
  %241 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %194, i32 0)
  %242 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %241, <16 x bfloat> %106, i32 1)
  %243 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %240, <32 x bfloat> %242, i32 60)
  %244 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %243)
  %245 = load <16 x bfloat>, ptr %203, align 32, !tbaa !2
  %246 = bitcast <8 x i32> %206 to <16 x i16>
  %247 = getelementptr bfloat, ptr %0, i20 112
  %248 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %245, i32 8)
  %249 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %248, <16 x i32> %15, i32 2)
  %250 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %249, i32 0)
  %251 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %246, i32 0, i32 0)
  %252 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %251, i32 6, i32 1)
  %253 = add <16 x i32> %252, %31
  %254 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %253, i32 0)
  %255 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %254), !noalias !15
  %256 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %255, i32 0)
  %257 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %254), !noalias !15
  %258 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %256, <8 x i32> %257, i32 1)
  %259 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %253, i32 1)
  %260 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %259), !noalias !15
  %261 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %260, i32 0)
  %262 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %259), !noalias !15
  %263 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %261, <8 x i32> %262, i32 1)
  %264 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %258, <16 x i32> %263, i32 24)
  %265 = bitcast <16 x i32> %264 to <32 x bfloat>
  %266 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %265, i32 0)
  %267 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %251, i32 -2, i32 1)
  %268 = and <16 x i32> %267, %4
  %269 = add <16 x i32> %268, %52
  %270 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %269, i32 0)
  %271 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %270), !noalias !20
  %272 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %271, i32 0)
  %273 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %270), !noalias !20
  %274 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %272, <8 x i32> %273, i32 1)
  %275 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %269, i32 1)
  %276 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %275), !noalias !20
  %277 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %276, i32 0)
  %278 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %275), !noalias !20
  %279 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %277, <8 x i32> %278, i32 1)
  %280 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %274, <16 x i32> %279, i32 24)
  %281 = bitcast <16 x i32> %280 to <32 x bfloat>
  %282 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %281, i32 0)
  %283 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %222, i32 0)
  %284 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %283, <16 x bfloat> %106, i32 1)
  %285 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %238, i32 0)
  %286 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %285, <16 x bfloat> %106, i32 1)
  %287 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %284, <32 x bfloat> %286, i32 60)
  %288 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %287)
  %289 = load <16 x bfloat>, ptr %247, align 32, !tbaa !2
  %290 = bitcast <8 x i32> %250 to <16 x i16>
  %291 = getelementptr bfloat, ptr %0, i20 128
  %292 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %289, i32 8)
  %293 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %292, <16 x i32> %15, i32 2)
  %294 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %293, i32 0)
  %295 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %290, i32 0, i32 0)
  %296 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %295, i32 6, i32 1)
  %297 = add <16 x i32> %296, %31
  %298 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %297, i32 0)
  %299 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %298), !noalias !15
  %300 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %299, i32 0)
  %301 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %298), !noalias !15
  %302 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %300, <8 x i32> %301, i32 1)
  %303 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %297, i32 1)
  %304 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %303), !noalias !15
  %305 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %304, i32 0)
  %306 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %303), !noalias !15
  %307 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %305, <8 x i32> %306, i32 1)
  %308 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %302, <16 x i32> %307, i32 24)
  %309 = bitcast <16 x i32> %308 to <32 x bfloat>
  %310 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %309, i32 0)
  %311 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %295, i32 -2, i32 1)
  %312 = and <16 x i32> %311, %4
  %313 = add <16 x i32> %312, %52
  %314 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %313, i32 0)
  %315 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %314), !noalias !20
  %316 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %315, i32 0)
  %317 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %314), !noalias !20
  %318 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %316, <8 x i32> %317, i32 1)
  %319 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %313, i32 1)
  %320 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %319), !noalias !20
  %321 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %320, i32 0)
  %322 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %319), !noalias !20
  %323 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %321, <8 x i32> %322, i32 1)
  %324 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %318, <16 x i32> %323, i32 24)
  %325 = bitcast <16 x i32> %324 to <32 x bfloat>
  %326 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %325, i32 0)
  %327 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %266, i32 0)
  %328 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %327, <16 x bfloat> %106, i32 1)
  %329 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %282, i32 0)
  %330 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %329, <16 x bfloat> %106, i32 1)
  %331 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %328, <32 x bfloat> %330, i32 60)
  %332 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %331)
  %333 = load <16 x bfloat>, ptr %291, align 32, !tbaa !2
  %334 = bitcast <8 x i32> %294 to <16 x i16>
  %335 = getelementptr bfloat, ptr %0, i20 144
  %336 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %333, i32 8)
  %337 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %336, <16 x i32> %15, i32 2)
  %338 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %337, i32 0)
  %339 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %334, i32 0, i32 0)
  %340 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %339, i32 6, i32 1)
  %341 = add <16 x i32> %340, %31
  %342 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %341, i32 0)
  %343 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %342), !noalias !15
  %344 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %343, i32 0)
  %345 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %342), !noalias !15
  %346 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %344, <8 x i32> %345, i32 1)
  %347 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %341, i32 1)
  %348 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %347), !noalias !15
  %349 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %348, i32 0)
  %350 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %347), !noalias !15
  %351 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %349, <8 x i32> %350, i32 1)
  %352 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %346, <16 x i32> %351, i32 24)
  %353 = bitcast <16 x i32> %352 to <32 x bfloat>
  %354 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %353, i32 0)
  %355 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %339, i32 -2, i32 1)
  %356 = and <16 x i32> %355, %4
  %357 = add <16 x i32> %356, %52
  %358 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %357, i32 0)
  %359 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %358), !noalias !20
  %360 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %359, i32 0)
  %361 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %358), !noalias !20
  %362 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %360, <8 x i32> %361, i32 1)
  %363 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %357, i32 1)
  %364 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %363), !noalias !20
  %365 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %364, i32 0)
  %366 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %363), !noalias !20
  %367 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %365, <8 x i32> %366, i32 1)
  %368 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %362, <16 x i32> %367, i32 24)
  %369 = bitcast <16 x i32> %368 to <32 x bfloat>
  %370 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %369, i32 0)
  %371 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %310, i32 0)
  %372 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %371, <16 x bfloat> %106, i32 1)
  %373 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %326, i32 0)
  %374 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %373, <16 x bfloat> %106, i32 1)
  %375 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %372, <32 x bfloat> %374, i32 60)
  %376 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %375)
  %377 = load <16 x bfloat>, ptr %335, align 32, !tbaa !2
  %378 = bitcast <8 x i32> %338 to <16 x i16>
  %379 = getelementptr bfloat, ptr %0, i20 160
  %380 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %377, i32 8)
  %381 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %380, <16 x i32> %15, i32 2)
  %382 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %381, i32 0)
  %383 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %378, i32 0, i32 0)
  %384 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %383, i32 6, i32 1)
  %385 = add <16 x i32> %384, %31
  %386 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %385, i32 0)
  %387 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %386), !noalias !15
  %388 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %387, i32 0)
  %389 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %386), !noalias !15
  %390 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %388, <8 x i32> %389, i32 1)
  %391 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %385, i32 1)
  %392 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %391), !noalias !15
  %393 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %392, i32 0)
  %394 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %391), !noalias !15
  %395 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %393, <8 x i32> %394, i32 1)
  %396 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %390, <16 x i32> %395, i32 24)
  %397 = bitcast <16 x i32> %396 to <32 x bfloat>
  %398 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %397, i32 0)
  %399 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %383, i32 -2, i32 1)
  %400 = and <16 x i32> %399, %4
  %401 = add <16 x i32> %400, %52
  %402 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %401, i32 0)
  %403 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %402), !noalias !20
  %404 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %403, i32 0)
  %405 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %402), !noalias !20
  %406 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %404, <8 x i32> %405, i32 1)
  %407 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %401, i32 1)
  %408 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %407), !noalias !20
  %409 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %408, i32 0)
  %410 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %407), !noalias !20
  %411 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %409, <8 x i32> %410, i32 1)
  %412 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %406, <16 x i32> %411, i32 24)
  %413 = bitcast <16 x i32> %412 to <32 x bfloat>
  %414 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %413, i32 0)
  %415 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %354, i32 0)
  %416 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %415, <16 x bfloat> %106, i32 1)
  %417 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %370, i32 0)
  %418 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %417, <16 x bfloat> %106, i32 1)
  %419 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %416, <32 x bfloat> %418, i32 60)
  %420 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %419)
  %421 = load <16 x bfloat>, ptr %379, align 32, !tbaa !2
  %422 = bitcast <8 x i32> %382 to <16 x i16>
  %423 = getelementptr bfloat, ptr %0, i20 176
  %424 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %421, i32 8)
  %425 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %424, <16 x i32> %15, i32 2)
  %426 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %425, i32 0)
  %427 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %422, i32 0, i32 0)
  %428 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %427, i32 6, i32 1)
  %429 = add <16 x i32> %428, %31
  %430 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %429, i32 0)
  %431 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %430), !noalias !15
  %432 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %431, i32 0)
  %433 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %430), !noalias !15
  %434 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %432, <8 x i32> %433, i32 1)
  %435 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %429, i32 1)
  %436 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %435), !noalias !15
  %437 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %436, i32 0)
  %438 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %435), !noalias !15
  %439 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %437, <8 x i32> %438, i32 1)
  %440 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %434, <16 x i32> %439, i32 24)
  %441 = bitcast <16 x i32> %440 to <32 x bfloat>
  %442 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %441, i32 0)
  %443 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %427, i32 -2, i32 1)
  %444 = and <16 x i32> %443, %4
  %445 = add <16 x i32> %444, %52
  %446 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %445, i32 0)
  %447 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %446), !noalias !20
  %448 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %447, i32 0)
  %449 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %446), !noalias !20
  %450 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %448, <8 x i32> %449, i32 1)
  %451 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %445, i32 1)
  %452 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %451), !noalias !20
  %453 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %452, i32 0)
  %454 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %451), !noalias !20
  %455 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %453, <8 x i32> %454, i32 1)
  %456 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %450, <16 x i32> %455, i32 24)
  %457 = bitcast <16 x i32> %456 to <32 x bfloat>
  %458 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %457, i32 0)
  %459 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %398, i32 0)
  %460 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %459, <16 x bfloat> %106, i32 1)
  %461 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %414, i32 0)
  %462 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %461, <16 x bfloat> %106, i32 1)
  %463 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %460, <32 x bfloat> %462, i32 60)
  %464 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %463)
  %465 = load <16 x bfloat>, ptr %423, align 32, !tbaa !2
  %466 = bitcast <8 x i32> %426 to <16 x i16>
  %467 = getelementptr bfloat, ptr %0, i20 192
  %468 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %465, i32 8)
  %469 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %468, <16 x i32> %15, i32 2)
  %470 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %469, i32 0)
  %471 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %466, i32 0, i32 0)
  %472 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %471, i32 6, i32 1)
  %473 = add <16 x i32> %472, %31
  %474 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %473, i32 0)
  %475 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %474), !noalias !15
  %476 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %475, i32 0)
  %477 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %474), !noalias !15
  %478 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %476, <8 x i32> %477, i32 1)
  %479 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %473, i32 1)
  %480 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %479), !noalias !15
  %481 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %480, i32 0)
  %482 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %479), !noalias !15
  %483 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %481, <8 x i32> %482, i32 1)
  %484 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %478, <16 x i32> %483, i32 24)
  %485 = bitcast <16 x i32> %484 to <32 x bfloat>
  %486 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %485, i32 0)
  %487 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %471, i32 -2, i32 1)
  %488 = and <16 x i32> %487, %4
  %489 = add <16 x i32> %488, %52
  %490 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %489, i32 0)
  %491 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %490), !noalias !20
  %492 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %491, i32 0)
  %493 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %490), !noalias !20
  %494 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %492, <8 x i32> %493, i32 1)
  %495 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %489, i32 1)
  %496 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %495), !noalias !20
  %497 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %496, i32 0)
  %498 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %495), !noalias !20
  %499 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %497, <8 x i32> %498, i32 1)
  %500 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %494, <16 x i32> %499, i32 24)
  %501 = bitcast <16 x i32> %500 to <32 x bfloat>
  %502 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %501, i32 0)
  %503 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %442, i32 0)
  %504 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %503, <16 x bfloat> %106, i32 1)
  %505 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %458, i32 0)
  %506 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %505, <16 x bfloat> %106, i32 1)
  %507 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %504, <32 x bfloat> %506, i32 60)
  %508 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %507)
  %509 = load <16 x bfloat>, ptr %467, align 32, !tbaa !2
  %510 = bitcast <8 x i32> %470 to <16 x i16>
  %511 = getelementptr bfloat, ptr %0, i20 208
  %512 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %509, i32 8)
  %513 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %512, <16 x i32> %15, i32 2)
  %514 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %513, i32 0)
  %515 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %510, i32 0, i32 0)
  %516 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %515, i32 6, i32 1)
  %517 = add <16 x i32> %516, %31
  %518 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %517, i32 0)
  %519 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %518), !noalias !15
  %520 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %519, i32 0)
  %521 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %518), !noalias !15
  %522 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %520, <8 x i32> %521, i32 1)
  %523 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %517, i32 1)
  %524 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %523), !noalias !15
  %525 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %524, i32 0)
  %526 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %523), !noalias !15
  %527 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %525, <8 x i32> %526, i32 1)
  %528 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %522, <16 x i32> %527, i32 24)
  %529 = bitcast <16 x i32> %528 to <32 x bfloat>
  %530 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %529, i32 0)
  %531 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %515, i32 -2, i32 1)
  %532 = and <16 x i32> %531, %4
  %533 = add <16 x i32> %532, %52
  %534 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %533, i32 0)
  %535 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %534), !noalias !20
  %536 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %535, i32 0)
  %537 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %534), !noalias !20
  %538 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %536, <8 x i32> %537, i32 1)
  %539 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %533, i32 1)
  %540 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %539), !noalias !20
  %541 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %540, i32 0)
  %542 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %539), !noalias !20
  %543 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %541, <8 x i32> %542, i32 1)
  %544 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %538, <16 x i32> %543, i32 24)
  %545 = bitcast <16 x i32> %544 to <32 x bfloat>
  %546 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %545, i32 0)
  %547 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %486, i32 0)
  %548 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %547, <16 x bfloat> %106, i32 1)
  %549 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %502, i32 0)
  %550 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %549, <16 x bfloat> %106, i32 1)
  %551 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %548, <32 x bfloat> %550, i32 60)
  %552 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %551)
  %553 = load <16 x bfloat>, ptr %511, align 32, !tbaa !2
  %554 = bitcast <8 x i32> %514 to <16 x i16>
  %555 = getelementptr bfloat, ptr %0, i20 224
  %556 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %553, i32 8)
  %557 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %556, <16 x i32> %15, i32 2)
  %558 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %557, i32 0)
  %559 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %554, i32 0, i32 0)
  %560 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %559, i32 6, i32 1)
  %561 = add <16 x i32> %560, %31
  %562 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %561, i32 0)
  %563 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %562), !noalias !15
  %564 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %563, i32 0)
  %565 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %562), !noalias !15
  %566 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %564, <8 x i32> %565, i32 1)
  %567 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %561, i32 1)
  %568 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %567), !noalias !15
  %569 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %568, i32 0)
  %570 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %567), !noalias !15
  %571 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %569, <8 x i32> %570, i32 1)
  %572 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %566, <16 x i32> %571, i32 24)
  %573 = bitcast <16 x i32> %572 to <32 x bfloat>
  %574 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %573, i32 0)
  %575 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %559, i32 -2, i32 1)
  %576 = and <16 x i32> %575, %4
  %577 = add <16 x i32> %576, %52
  %578 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %577, i32 0)
  %579 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %578), !noalias !20
  %580 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %579, i32 0)
  %581 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %578), !noalias !20
  %582 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %580, <8 x i32> %581, i32 1)
  %583 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %577, i32 1)
  %584 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %583), !noalias !20
  %585 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %584, i32 0)
  %586 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %583), !noalias !20
  %587 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %585, <8 x i32> %586, i32 1)
  %588 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %582, <16 x i32> %587, i32 24)
  %589 = bitcast <16 x i32> %588 to <32 x bfloat>
  %590 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %589, i32 0)
  %591 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %530, i32 0)
  %592 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %591, <16 x bfloat> %106, i32 1)
  %593 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %546, i32 0)
  %594 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %593, <16 x bfloat> %106, i32 1)
  %595 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %592, <32 x bfloat> %594, i32 60)
  %596 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %595)
  %597 = load <16 x bfloat>, ptr %555, align 32, !tbaa !2
  %598 = bitcast <8 x i32> %558 to <16 x i16>
  %599 = getelementptr bfloat, ptr %0, i20 240
  %600 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %597, i32 8)
  %601 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %600, <16 x i32> %15, i32 2)
  %602 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %601, i32 0)
  %603 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %598, i32 0, i32 0)
  %604 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %603, i32 6, i32 1)
  %605 = add <16 x i32> %604, %31
  %606 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %605, i32 0)
  %607 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %606), !noalias !15
  %608 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %607, i32 0)
  %609 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %606), !noalias !15
  %610 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %608, <8 x i32> %609, i32 1)
  %611 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %605, i32 1)
  %612 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %611), !noalias !15
  %613 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %612, i32 0)
  %614 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %611), !noalias !15
  %615 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %613, <8 x i32> %614, i32 1)
  %616 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %610, <16 x i32> %615, i32 24)
  %617 = bitcast <16 x i32> %616 to <32 x bfloat>
  %618 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %617, i32 0)
  %619 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %603, i32 -2, i32 1)
  %620 = and <16 x i32> %619, %4
  %621 = add <16 x i32> %620, %52
  %622 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %621, i32 0)
  %623 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %622), !noalias !20
  %624 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %623, i32 0)
  %625 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %622), !noalias !20
  %626 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %624, <8 x i32> %625, i32 1)
  %627 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %621, i32 1)
  %628 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %627), !noalias !20
  %629 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %628, i32 0)
  %630 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %627), !noalias !20
  %631 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %629, <8 x i32> %630, i32 1)
  %632 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %626, <16 x i32> %631, i32 24)
  %633 = bitcast <16 x i32> %632 to <32 x bfloat>
  %634 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %633, i32 0)
  %635 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %574, i32 0)
  %636 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %635, <16 x bfloat> %106, i32 1)
  %637 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %590, i32 0)
  %638 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %637, <16 x bfloat> %106, i32 1)
  %639 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %636, <32 x bfloat> %638, i32 60)
  %640 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %639)
  %641 = load <16 x bfloat>, ptr %599, align 32, !tbaa !2
  %642 = bitcast <8 x i32> %602 to <16 x i16>
  %643 = getelementptr bfloat, ptr %0, i20 256
  %644 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %641, i32 8)
  %645 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %644, <16 x i32> %15, i32 2)
  %646 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %645, i32 0)
  %647 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %642, i32 0, i32 0)
  %648 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %647, i32 6, i32 1)
  %649 = add <16 x i32> %648, %31
  %650 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %649, i32 0)
  %651 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %650), !noalias !15
  %652 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %651, i32 0)
  %653 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %650), !noalias !15
  %654 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %652, <8 x i32> %653, i32 1)
  %655 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %649, i32 1)
  %656 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %655), !noalias !15
  %657 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %656, i32 0)
  %658 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %655), !noalias !15
  %659 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %657, <8 x i32> %658, i32 1)
  %660 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %654, <16 x i32> %659, i32 24)
  %661 = bitcast <16 x i32> %660 to <32 x bfloat>
  %662 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %661, i32 0)
  %663 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %647, i32 -2, i32 1)
  %664 = and <16 x i32> %663, %4
  %665 = add <16 x i32> %664, %52
  %666 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %665, i32 0)
  %667 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %666), !noalias !20
  %668 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %667, i32 0)
  %669 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %666), !noalias !20
  %670 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %668, <8 x i32> %669, i32 1)
  %671 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %665, i32 1)
  %672 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %671), !noalias !20
  %673 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %672, i32 0)
  %674 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %671), !noalias !20
  %675 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %673, <8 x i32> %674, i32 1)
  %676 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %670, <16 x i32> %675, i32 24)
  %677 = bitcast <16 x i32> %676 to <32 x bfloat>
  %678 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %677, i32 0)
  %679 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %618, i32 0)
  %680 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %679, <16 x bfloat> %106, i32 1)
  %681 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %634, i32 0)
  %682 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %681, <16 x bfloat> %106, i32 1)
  %683 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %680, <32 x bfloat> %682, i32 60)
  %684 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %683)
  %685 = load <16 x bfloat>, ptr %643, align 32, !tbaa !2
  %686 = bitcast <8 x i32> %646 to <16 x i16>
  %687 = getelementptr bfloat, ptr %0, i20 272
  %688 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %685, i32 8)
  %689 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %688, <16 x i32> %15, i32 2)
  %690 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %689, i32 0)
  %691 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %686, i32 0, i32 0)
  %692 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %691, i32 6, i32 1)
  %693 = add <16 x i32> %692, %31
  %694 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %693, i32 0)
  %695 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %694), !noalias !15
  %696 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %695, i32 0)
  %697 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %694), !noalias !15
  %698 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %696, <8 x i32> %697, i32 1)
  %699 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %693, i32 1)
  %700 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %699), !noalias !15
  %701 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %700, i32 0)
  %702 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %699), !noalias !15
  %703 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %701, <8 x i32> %702, i32 1)
  %704 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %698, <16 x i32> %703, i32 24)
  %705 = bitcast <16 x i32> %704 to <32 x bfloat>
  %706 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %705, i32 0)
  %707 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %691, i32 -2, i32 1)
  %708 = and <16 x i32> %707, %4
  %709 = add <16 x i32> %708, %52
  %710 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %709, i32 0)
  %711 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %710), !noalias !20
  %712 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %711, i32 0)
  %713 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %710), !noalias !20
  %714 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %712, <8 x i32> %713, i32 1)
  %715 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %709, i32 1)
  %716 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %715), !noalias !20
  %717 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %716, i32 0)
  %718 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %715), !noalias !20
  %719 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %717, <8 x i32> %718, i32 1)
  %720 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %714, <16 x i32> %719, i32 24)
  %721 = bitcast <16 x i32> %720 to <32 x bfloat>
  %722 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %721, i32 0)
  %723 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %662, i32 0)
  %724 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %723, <16 x bfloat> %106, i32 1)
  %725 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %678, i32 0)
  %726 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %725, <16 x bfloat> %106, i32 1)
  %727 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %724, <32 x bfloat> %726, i32 60)
  %728 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %727)
  %729 = load <16 x bfloat>, ptr %687, align 32, !tbaa !2
  %730 = bitcast <8 x i32> %690 to <16 x i16>
  %731 = getelementptr bfloat, ptr %0, i20 288
  %732 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %729, i32 8)
  %733 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %732, <16 x i32> %15, i32 2)
  %734 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %733, i32 0)
  %735 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %730, i32 0, i32 0)
  %736 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %735, i32 6, i32 1)
  %737 = add <16 x i32> %736, %31
  %738 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %737, i32 0)
  %739 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %738), !noalias !15
  %740 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %739, i32 0)
  %741 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %738), !noalias !15
  %742 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %740, <8 x i32> %741, i32 1)
  %743 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %737, i32 1)
  %744 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %743), !noalias !15
  %745 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %744, i32 0)
  %746 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %743), !noalias !15
  %747 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %745, <8 x i32> %746, i32 1)
  %748 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %742, <16 x i32> %747, i32 24)
  %749 = bitcast <16 x i32> %748 to <32 x bfloat>
  %750 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %749, i32 0)
  %751 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %735, i32 -2, i32 1)
  %752 = and <16 x i32> %751, %4
  %753 = add <16 x i32> %752, %52
  %754 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %753, i32 0)
  %755 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %754), !noalias !20
  %756 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %755, i32 0)
  %757 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %754), !noalias !20
  %758 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %756, <8 x i32> %757, i32 1)
  %759 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %753, i32 1)
  %760 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %759), !noalias !20
  %761 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %760, i32 0)
  %762 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %759), !noalias !20
  %763 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %761, <8 x i32> %762, i32 1)
  %764 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %758, <16 x i32> %763, i32 24)
  %765 = bitcast <16 x i32> %764 to <32 x bfloat>
  %766 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %765, i32 0)
  %767 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %706, i32 0)
  %768 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %767, <16 x bfloat> %106, i32 1)
  %769 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %722, i32 0)
  %770 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %769, <16 x bfloat> %106, i32 1)
  %771 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %768, <32 x bfloat> %770, i32 60)
  %772 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %771)
  %773 = load <16 x bfloat>, ptr %731, align 32, !tbaa !2
  %774 = bitcast <8 x i32> %734 to <16 x i16>
  %775 = getelementptr bfloat, ptr %0, i20 304
  %776 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %773, i32 8)
  %777 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %776, <16 x i32> %15, i32 2)
  %778 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %777, i32 0)
  %779 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %774, i32 0, i32 0)
  %780 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %779, i32 6, i32 1)
  %781 = add <16 x i32> %780, %31
  %782 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %781, i32 0)
  %783 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %782), !noalias !15
  %784 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %783, i32 0)
  %785 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %782), !noalias !15
  %786 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %784, <8 x i32> %785, i32 1)
  %787 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %781, i32 1)
  %788 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %787), !noalias !15
  %789 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %788, i32 0)
  %790 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %787), !noalias !15
  %791 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %789, <8 x i32> %790, i32 1)
  %792 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %786, <16 x i32> %791, i32 24)
  %793 = bitcast <16 x i32> %792 to <32 x bfloat>
  %794 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %793, i32 0)
  %795 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %779, i32 -2, i32 1)
  %796 = and <16 x i32> %795, %4
  %797 = add <16 x i32> %796, %52
  %798 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %797, i32 0)
  %799 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %798), !noalias !20
  %800 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %799, i32 0)
  %801 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %798), !noalias !20
  %802 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %800, <8 x i32> %801, i32 1)
  %803 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %797, i32 1)
  %804 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %803), !noalias !20
  %805 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %804, i32 0)
  %806 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %803), !noalias !20
  %807 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %805, <8 x i32> %806, i32 1)
  %808 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %802, <16 x i32> %807, i32 24)
  %809 = bitcast <16 x i32> %808 to <32 x bfloat>
  %810 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %809, i32 0)
  %811 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %750, i32 0)
  %812 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %811, <16 x bfloat> %106, i32 1)
  %813 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %766, i32 0)
  %814 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %813, <16 x bfloat> %106, i32 1)
  %815 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %812, <32 x bfloat> %814, i32 60)
  %816 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %815)
  %817 = load <16 x bfloat>, ptr %775, align 32, !tbaa !2
  %818 = bitcast <8 x i32> %778 to <16 x i16>
  %819 = getelementptr bfloat, ptr %0, i20 320
  %820 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %817, i32 8)
  %821 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %820, <16 x i32> %15, i32 2)
  %822 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %821, i32 0)
  %823 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %818, i32 0, i32 0)
  %824 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %823, i32 6, i32 1)
  %825 = add <16 x i32> %824, %31
  %826 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %825, i32 0)
  %827 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %826), !noalias !15
  %828 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %827, i32 0)
  %829 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %826), !noalias !15
  %830 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %828, <8 x i32> %829, i32 1)
  %831 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %825, i32 1)
  %832 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %831), !noalias !15
  %833 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %832, i32 0)
  %834 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %831), !noalias !15
  %835 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %833, <8 x i32> %834, i32 1)
  %836 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %830, <16 x i32> %835, i32 24)
  %837 = bitcast <16 x i32> %836 to <32 x bfloat>
  %838 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %837, i32 0)
  %839 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %823, i32 -2, i32 1)
  %840 = and <16 x i32> %839, %4
  %841 = add <16 x i32> %840, %52
  %842 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %841, i32 0)
  %843 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %842), !noalias !20
  %844 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %843, i32 0)
  %845 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %842), !noalias !20
  %846 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %844, <8 x i32> %845, i32 1)
  %847 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %841, i32 1)
  %848 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %847), !noalias !20
  %849 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %848, i32 0)
  %850 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %847), !noalias !20
  %851 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %849, <8 x i32> %850, i32 1)
  %852 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %846, <16 x i32> %851, i32 24)
  %853 = bitcast <16 x i32> %852 to <32 x bfloat>
  %854 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %853, i32 0)
  %855 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %794, i32 0)
  %856 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %855, <16 x bfloat> %106, i32 1)
  %857 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %810, i32 0)
  %858 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %857, <16 x bfloat> %106, i32 1)
  %859 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %856, <32 x bfloat> %858, i32 60)
  %860 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %859)
  %861 = load <16 x bfloat>, ptr %819, align 32, !tbaa !2
  %862 = bitcast <8 x i32> %822 to <16 x i16>
  %863 = getelementptr bfloat, ptr %0, i20 336
  %864 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %861, i32 8)
  %865 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %864, <16 x i32> %15, i32 2)
  %866 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %865, i32 0)
  %867 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %862, i32 0, i32 0)
  %868 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %867, i32 6, i32 1)
  %869 = add <16 x i32> %868, %31
  %870 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %869, i32 0)
  %871 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %870), !noalias !15
  %872 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %871, i32 0)
  %873 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %870), !noalias !15
  %874 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %872, <8 x i32> %873, i32 1)
  %875 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %869, i32 1)
  %876 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %875), !noalias !15
  %877 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %876, i32 0)
  %878 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %875), !noalias !15
  %879 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %877, <8 x i32> %878, i32 1)
  %880 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %874, <16 x i32> %879, i32 24)
  %881 = bitcast <16 x i32> %880 to <32 x bfloat>
  %882 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %881, i32 0)
  %883 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %867, i32 -2, i32 1)
  %884 = and <16 x i32> %883, %4
  %885 = add <16 x i32> %884, %52
  %886 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %885, i32 0)
  %887 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %886), !noalias !20
  %888 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %887, i32 0)
  %889 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %886), !noalias !20
  %890 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %888, <8 x i32> %889, i32 1)
  %891 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %885, i32 1)
  %892 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %891), !noalias !20
  %893 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %892, i32 0)
  %894 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %891), !noalias !20
  %895 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %893, <8 x i32> %894, i32 1)
  %896 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %890, <16 x i32> %895, i32 24)
  %897 = bitcast <16 x i32> %896 to <32 x bfloat>
  %898 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %897, i32 0)
  %899 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %838, i32 0)
  %900 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %899, <16 x bfloat> %106, i32 1)
  %901 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %854, i32 0)
  %902 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %901, <16 x bfloat> %106, i32 1)
  %903 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %900, <32 x bfloat> %902, i32 60)
  %904 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %903)
  %905 = load <16 x bfloat>, ptr %863, align 32, !tbaa !2
  %906 = bitcast <8 x i32> %866 to <16 x i16>
  %907 = getelementptr bfloat, ptr %0, i20 352
  %908 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %905, i32 8)
  %909 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %908, <16 x i32> %15, i32 2)
  %910 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %909, i32 0)
  %911 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %906, i32 0, i32 0)
  %912 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %911, i32 6, i32 1)
  %913 = add <16 x i32> %912, %31
  %914 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %913, i32 0)
  %915 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %914), !noalias !15
  %916 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %915, i32 0)
  %917 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %914), !noalias !15
  %918 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %916, <8 x i32> %917, i32 1)
  %919 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %913, i32 1)
  %920 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %919), !noalias !15
  %921 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %920, i32 0)
  %922 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %919), !noalias !15
  %923 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %921, <8 x i32> %922, i32 1)
  %924 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %918, <16 x i32> %923, i32 24)
  %925 = bitcast <16 x i32> %924 to <32 x bfloat>
  %926 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %925, i32 0)
  %927 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %911, i32 -2, i32 1)
  %928 = and <16 x i32> %927, %4
  %929 = add <16 x i32> %928, %52
  %930 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %929, i32 0)
  %931 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %930), !noalias !20
  %932 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %931, i32 0)
  %933 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %930), !noalias !20
  %934 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %932, <8 x i32> %933, i32 1)
  %935 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %929, i32 1)
  %936 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %935), !noalias !20
  %937 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %936, i32 0)
  %938 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %935), !noalias !20
  %939 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %937, <8 x i32> %938, i32 1)
  %940 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %934, <16 x i32> %939, i32 24)
  %941 = bitcast <16 x i32> %940 to <32 x bfloat>
  %942 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %941, i32 0)
  %943 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %882, i32 0)
  %944 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %943, <16 x bfloat> %106, i32 1)
  %945 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %898, i32 0)
  %946 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %945, <16 x bfloat> %106, i32 1)
  %947 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %944, <32 x bfloat> %946, i32 60)
  %948 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %947)
  %949 = load <16 x bfloat>, ptr %907, align 32, !tbaa !2
  %950 = bitcast <8 x i32> %910 to <16 x i16>
  %951 = getelementptr bfloat, ptr %0, i20 368
  %952 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %949, i32 8)
  %953 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %952, <16 x i32> %15, i32 2)
  %954 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %953, i32 0)
  %955 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %950, i32 0, i32 0)
  %956 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %955, i32 6, i32 1)
  %957 = add <16 x i32> %956, %31
  %958 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %957, i32 0)
  %959 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %958), !noalias !15
  %960 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %959, i32 0)
  %961 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %958), !noalias !15
  %962 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %960, <8 x i32> %961, i32 1)
  %963 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %957, i32 1)
  %964 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %963), !noalias !15
  %965 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %964, i32 0)
  %966 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %963), !noalias !15
  %967 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %965, <8 x i32> %966, i32 1)
  %968 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %962, <16 x i32> %967, i32 24)
  %969 = bitcast <16 x i32> %968 to <32 x bfloat>
  %970 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %969, i32 0)
  %971 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %955, i32 -2, i32 1)
  %972 = and <16 x i32> %971, %4
  %973 = add <16 x i32> %972, %52
  %974 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %973, i32 0)
  %975 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %974), !noalias !20
  %976 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %975, i32 0)
  %977 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %974), !noalias !20
  %978 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %976, <8 x i32> %977, i32 1)
  %979 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %973, i32 1)
  %980 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %979), !noalias !20
  %981 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %980, i32 0)
  %982 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %979), !noalias !20
  %983 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %981, <8 x i32> %982, i32 1)
  %984 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %978, <16 x i32> %983, i32 24)
  %985 = bitcast <16 x i32> %984 to <32 x bfloat>
  %986 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %985, i32 0)
  %987 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %926, i32 0)
  %988 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %987, <16 x bfloat> %106, i32 1)
  %989 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %942, i32 0)
  %990 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %989, <16 x bfloat> %106, i32 1)
  %991 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %988, <32 x bfloat> %990, i32 60)
  %992 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %991)
  %993 = load <16 x bfloat>, ptr %951, align 32, !tbaa !2
  %994 = bitcast <8 x i32> %954 to <16 x i16>
  %995 = getelementptr bfloat, ptr %0, i20 384
  %996 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %993, i32 8)
  %997 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %996, <16 x i32> %15, i32 2)
  %998 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %997, i32 0)
  %999 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %994, i32 0, i32 0)
  %1000 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %999, i32 6, i32 1)
  %1001 = add <16 x i32> %1000, %31
  %1002 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1001, i32 0)
  %1003 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1002), !noalias !15
  %1004 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1003, i32 0)
  %1005 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1002), !noalias !15
  %1006 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1004, <8 x i32> %1005, i32 1)
  %1007 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1001, i32 1)
  %1008 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1007), !noalias !15
  %1009 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1008, i32 0)
  %1010 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1007), !noalias !15
  %1011 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1009, <8 x i32> %1010, i32 1)
  %1012 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1006, <16 x i32> %1011, i32 24)
  %1013 = bitcast <16 x i32> %1012 to <32 x bfloat>
  %1014 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1013, i32 0)
  %1015 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %999, i32 -2, i32 1)
  %1016 = and <16 x i32> %1015, %4
  %1017 = add <16 x i32> %1016, %52
  %1018 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1017, i32 0)
  %1019 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1018), !noalias !20
  %1020 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1019, i32 0)
  %1021 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1018), !noalias !20
  %1022 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1020, <8 x i32> %1021, i32 1)
  %1023 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1017, i32 1)
  %1024 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1023), !noalias !20
  %1025 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1024, i32 0)
  %1026 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1023), !noalias !20
  %1027 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1025, <8 x i32> %1026, i32 1)
  %1028 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1022, <16 x i32> %1027, i32 24)
  %1029 = bitcast <16 x i32> %1028 to <32 x bfloat>
  %1030 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1029, i32 0)
  %1031 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %970, i32 0)
  %1032 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1031, <16 x bfloat> %106, i32 1)
  %1033 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %986, i32 0)
  %1034 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1033, <16 x bfloat> %106, i32 1)
  %1035 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1032, <32 x bfloat> %1034, i32 60)
  %1036 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %1035)
  %1037 = load <16 x bfloat>, ptr %995, align 32, !tbaa !2
  %1038 = bitcast <8 x i32> %998 to <16 x i16>
  %1039 = getelementptr bfloat, ptr %0, i20 400
  %1040 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %1037, i32 8)
  %1041 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1040, <16 x i32> %15, i32 2)
  %1042 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1041, i32 0)
  %1043 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %1038, i32 0, i32 0)
  %1044 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1043, i32 6, i32 1)
  %1045 = add <16 x i32> %1044, %31
  %1046 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1045, i32 0)
  %1047 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1046), !noalias !15
  %1048 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1047, i32 0)
  %1049 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1046), !noalias !15
  %1050 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1048, <8 x i32> %1049, i32 1)
  %1051 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1045, i32 1)
  %1052 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1051), !noalias !15
  %1053 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1052, i32 0)
  %1054 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1051), !noalias !15
  %1055 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1053, <8 x i32> %1054, i32 1)
  %1056 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1050, <16 x i32> %1055, i32 24)
  %1057 = bitcast <16 x i32> %1056 to <32 x bfloat>
  %1058 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1057, i32 0)
  %1059 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1043, i32 -2, i32 1)
  %1060 = and <16 x i32> %1059, %4
  %1061 = add <16 x i32> %1060, %52
  %1062 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1061, i32 0)
  %1063 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1062), !noalias !20
  %1064 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1063, i32 0)
  %1065 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1062), !noalias !20
  %1066 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1064, <8 x i32> %1065, i32 1)
  %1067 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1061, i32 1)
  %1068 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1067), !noalias !20
  %1069 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1068, i32 0)
  %1070 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1067), !noalias !20
  %1071 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1069, <8 x i32> %1070, i32 1)
  %1072 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1066, <16 x i32> %1071, i32 24)
  %1073 = bitcast <16 x i32> %1072 to <32 x bfloat>
  %1074 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1073, i32 0)
  %1075 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1014, i32 0)
  %1076 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1075, <16 x bfloat> %106, i32 1)
  %1077 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1030, i32 0)
  %1078 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1077, <16 x bfloat> %106, i32 1)
  %1079 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1076, <32 x bfloat> %1078, i32 60)
  %1080 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %1079)
  %1081 = load <16 x bfloat>, ptr %1039, align 32, !tbaa !2
  %1082 = bitcast <8 x i32> %1042 to <16 x i16>
  %1083 = getelementptr bfloat, ptr %0, i20 416
  %1084 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %1081, i32 8)
  %1085 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1084, <16 x i32> %15, i32 2)
  %1086 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1085, i32 0)
  %1087 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %1082, i32 0, i32 0)
  %1088 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1087, i32 6, i32 1)
  %1089 = add <16 x i32> %1088, %31
  %1090 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1089, i32 0)
  %1091 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1090), !noalias !15
  %1092 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1091, i32 0)
  %1093 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1090), !noalias !15
  %1094 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1092, <8 x i32> %1093, i32 1)
  %1095 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1089, i32 1)
  %1096 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1095), !noalias !15
  %1097 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1096, i32 0)
  %1098 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1095), !noalias !15
  %1099 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1097, <8 x i32> %1098, i32 1)
  %1100 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1094, <16 x i32> %1099, i32 24)
  %1101 = bitcast <16 x i32> %1100 to <32 x bfloat>
  %1102 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1101, i32 0)
  %1103 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1087, i32 -2, i32 1)
  %1104 = and <16 x i32> %1103, %4
  %1105 = add <16 x i32> %1104, %52
  %1106 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1105, i32 0)
  %1107 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1106), !noalias !20
  %1108 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1107, i32 0)
  %1109 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1106), !noalias !20
  %1110 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1108, <8 x i32> %1109, i32 1)
  %1111 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1105, i32 1)
  %1112 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1111), !noalias !20
  %1113 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1112, i32 0)
  %1114 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1111), !noalias !20
  %1115 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1113, <8 x i32> %1114, i32 1)
  %1116 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1110, <16 x i32> %1115, i32 24)
  %1117 = bitcast <16 x i32> %1116 to <32 x bfloat>
  %1118 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1117, i32 0)
  %1119 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1058, i32 0)
  %1120 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1119, <16 x bfloat> %106, i32 1)
  %1121 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1074, i32 0)
  %1122 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1121, <16 x bfloat> %106, i32 1)
  %1123 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1120, <32 x bfloat> %1122, i32 60)
  %1124 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %1123)
  %1125 = load <16 x bfloat>, ptr %1083, align 32, !tbaa !2
  %1126 = bitcast <8 x i32> %1086 to <16 x i16>
  %1127 = getelementptr bfloat, ptr %0, i20 432
  %1128 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %1125, i32 8)
  %1129 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1128, <16 x i32> %15, i32 2)
  %1130 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1129, i32 0)
  %1131 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %1126, i32 0, i32 0)
  %1132 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1131, i32 6, i32 1)
  %1133 = add <16 x i32> %1132, %31
  %1134 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1133, i32 0)
  %1135 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1134), !noalias !15
  %1136 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1135, i32 0)
  %1137 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1134), !noalias !15
  %1138 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1136, <8 x i32> %1137, i32 1)
  %1139 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1133, i32 1)
  %1140 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1139), !noalias !15
  %1141 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1140, i32 0)
  %1142 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1139), !noalias !15
  %1143 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1141, <8 x i32> %1142, i32 1)
  %1144 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1138, <16 x i32> %1143, i32 24)
  %1145 = bitcast <16 x i32> %1144 to <32 x bfloat>
  %1146 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1145, i32 0)
  %1147 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1131, i32 -2, i32 1)
  %1148 = and <16 x i32> %1147, %4
  %1149 = add <16 x i32> %1148, %52
  %1150 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1149, i32 0)
  %1151 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1150), !noalias !20
  %1152 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1151, i32 0)
  %1153 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1150), !noalias !20
  %1154 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1152, <8 x i32> %1153, i32 1)
  %1155 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1149, i32 1)
  %1156 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1155), !noalias !20
  %1157 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1156, i32 0)
  %1158 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1155), !noalias !20
  %1159 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1157, <8 x i32> %1158, i32 1)
  %1160 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1154, <16 x i32> %1159, i32 24)
  %1161 = bitcast <16 x i32> %1160 to <32 x bfloat>
  %1162 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1161, i32 0)
  %1163 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1102, i32 0)
  %1164 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1163, <16 x bfloat> %106, i32 1)
  %1165 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1118, i32 0)
  %1166 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1165, <16 x bfloat> %106, i32 1)
  %1167 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1164, <32 x bfloat> %1166, i32 60)
  %1168 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %1167)
  %1169 = load <16 x bfloat>, ptr %1127, align 32, !tbaa !2
  %1170 = bitcast <8 x i32> %1130 to <16 x i16>
  %1171 = getelementptr bfloat, ptr %0, i20 448
  %1172 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %1169, i32 8)
  %1173 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1172, <16 x i32> %15, i32 2)
  %1174 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1173, i32 0)
  %1175 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %1170, i32 0, i32 0)
  %1176 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1175, i32 6, i32 1)
  %1177 = add <16 x i32> %1176, %31
  %1178 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1177, i32 0)
  %1179 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1178), !noalias !15
  %1180 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1179, i32 0)
  %1181 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1178), !noalias !15
  %1182 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1180, <8 x i32> %1181, i32 1)
  %1183 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1177, i32 1)
  %1184 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1183), !noalias !15
  %1185 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1184, i32 0)
  %1186 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1183), !noalias !15
  %1187 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1185, <8 x i32> %1186, i32 1)
  %1188 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1182, <16 x i32> %1187, i32 24)
  %1189 = bitcast <16 x i32> %1188 to <32 x bfloat>
  %1190 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1189, i32 0)
  %1191 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1175, i32 -2, i32 1)
  %1192 = and <16 x i32> %1191, %4
  %1193 = add <16 x i32> %1192, %52
  %1194 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1193, i32 0)
  %1195 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1194), !noalias !20
  %1196 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1195, i32 0)
  %1197 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1194), !noalias !20
  %1198 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1196, <8 x i32> %1197, i32 1)
  %1199 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1193, i32 1)
  %1200 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1199), !noalias !20
  %1201 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1200, i32 0)
  %1202 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1199), !noalias !20
  %1203 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1201, <8 x i32> %1202, i32 1)
  %1204 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1198, <16 x i32> %1203, i32 24)
  %1205 = bitcast <16 x i32> %1204 to <32 x bfloat>
  %1206 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1205, i32 0)
  %1207 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1146, i32 0)
  %1208 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1207, <16 x bfloat> %106, i32 1)
  %1209 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1162, i32 0)
  %1210 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1209, <16 x bfloat> %106, i32 1)
  %1211 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1208, <32 x bfloat> %1210, i32 60)
  %1212 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %1211)
  %1213 = load <16 x bfloat>, ptr %1171, align 32, !tbaa !2
  %1214 = bitcast <8 x i32> %1174 to <16 x i16>
  %1215 = getelementptr bfloat, ptr %0, i20 464
  %1216 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %1213, i32 8)
  %1217 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1216, <16 x i32> %15, i32 2)
  %1218 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1217, i32 0)
  %1219 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %1214, i32 0, i32 0)
  %1220 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1219, i32 6, i32 1)
  %1221 = add <16 x i32> %1220, %31
  %1222 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1221, i32 0)
  %1223 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1222), !noalias !15
  %1224 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1223, i32 0)
  %1225 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1222), !noalias !15
  %1226 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1224, <8 x i32> %1225, i32 1)
  %1227 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1221, i32 1)
  %1228 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1227), !noalias !15
  %1229 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1228, i32 0)
  %1230 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1227), !noalias !15
  %1231 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1229, <8 x i32> %1230, i32 1)
  %1232 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1226, <16 x i32> %1231, i32 24)
  %1233 = bitcast <16 x i32> %1232 to <32 x bfloat>
  %1234 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1233, i32 0)
  %1235 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1219, i32 -2, i32 1)
  %1236 = and <16 x i32> %1235, %4
  %1237 = add <16 x i32> %1236, %52
  %1238 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1237, i32 0)
  %1239 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1238), !noalias !20
  %1240 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1239, i32 0)
  %1241 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1238), !noalias !20
  %1242 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1240, <8 x i32> %1241, i32 1)
  %1243 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1237, i32 1)
  %1244 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1243), !noalias !20
  %1245 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1244, i32 0)
  %1246 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1243), !noalias !20
  %1247 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1245, <8 x i32> %1246, i32 1)
  %1248 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1242, <16 x i32> %1247, i32 24)
  %1249 = bitcast <16 x i32> %1248 to <32 x bfloat>
  %1250 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1249, i32 0)
  %1251 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1190, i32 0)
  %1252 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1251, <16 x bfloat> %106, i32 1)
  %1253 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1206, i32 0)
  %1254 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1253, <16 x bfloat> %106, i32 1)
  %1255 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1252, <32 x bfloat> %1254, i32 60)
  %1256 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %1255)
  %1257 = load <16 x bfloat>, ptr %1215, align 32, !tbaa !2
  %1258 = bitcast <8 x i32> %1218 to <16 x i16>
  %1259 = getelementptr bfloat, ptr %0, i20 480
  %1260 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %1257, i32 8)
  %1261 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1260, <16 x i32> %15, i32 2)
  %1262 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1261, i32 0)
  %1263 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %1258, i32 0, i32 0)
  %1264 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1263, i32 6, i32 1)
  %1265 = add <16 x i32> %1264, %31
  %1266 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1265, i32 0)
  %1267 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1266), !noalias !15
  %1268 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1267, i32 0)
  %1269 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1266), !noalias !15
  %1270 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1268, <8 x i32> %1269, i32 1)
  %1271 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1265, i32 1)
  %1272 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1271), !noalias !15
  %1273 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1272, i32 0)
  %1274 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1271), !noalias !15
  %1275 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1273, <8 x i32> %1274, i32 1)
  %1276 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1270, <16 x i32> %1275, i32 24)
  %1277 = bitcast <16 x i32> %1276 to <32 x bfloat>
  %1278 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1277, i32 0)
  %1279 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1263, i32 -2, i32 1)
  %1280 = and <16 x i32> %1279, %4
  %1281 = add <16 x i32> %1280, %52
  %1282 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1281, i32 0)
  %1283 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1282), !noalias !20
  %1284 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1283, i32 0)
  %1285 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1282), !noalias !20
  %1286 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1284, <8 x i32> %1285, i32 1)
  %1287 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1281, i32 1)
  %1288 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1287), !noalias !20
  %1289 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1288, i32 0)
  %1290 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1287), !noalias !20
  %1291 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1289, <8 x i32> %1290, i32 1)
  %1292 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1286, <16 x i32> %1291, i32 24)
  %1293 = bitcast <16 x i32> %1292 to <32 x bfloat>
  %1294 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1293, i32 0)
  %1295 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1234, i32 0)
  %1296 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1295, <16 x bfloat> %106, i32 1)
  %1297 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1250, i32 0)
  %1298 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1297, <16 x bfloat> %106, i32 1)
  %1299 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1296, <32 x bfloat> %1298, i32 60)
  %1300 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %1299)
  %1301 = load <16 x bfloat>, ptr %1259, align 32, !tbaa !2
  %1302 = bitcast <8 x i32> %1262 to <16 x i16>
  %1303 = getelementptr bfloat, ptr %0, i20 496
  %1304 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %1301, i32 8)
  %1305 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1304, <16 x i32> %15, i32 2)
  %1306 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1305, i32 0)
  %1307 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %1302, i32 0, i32 0)
  %1308 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1307, i32 6, i32 1)
  %1309 = add <16 x i32> %1308, %31
  %1310 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1309, i32 0)
  %1311 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1310), !noalias !15
  %1312 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1311, i32 0)
  %1313 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1310), !noalias !15
  %1314 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1312, <8 x i32> %1313, i32 1)
  %1315 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1309, i32 1)
  %1316 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1315), !noalias !15
  %1317 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1316, i32 0)
  %1318 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1315), !noalias !15
  %1319 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1317, <8 x i32> %1318, i32 1)
  %1320 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1314, <16 x i32> %1319, i32 24)
  %1321 = bitcast <16 x i32> %1320 to <32 x bfloat>
  %1322 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1321, i32 0)
  %1323 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1307, i32 -2, i32 1)
  %1324 = and <16 x i32> %1323, %4
  %1325 = add <16 x i32> %1324, %52
  %1326 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1325, i32 0)
  %1327 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1326), !noalias !20
  %1328 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1327, i32 0)
  %1329 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1326), !noalias !20
  %1330 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1328, <8 x i32> %1329, i32 1)
  %1331 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1325, i32 1)
  %1332 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1331), !noalias !20
  %1333 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1332, i32 0)
  %1334 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1331), !noalias !20
  %1335 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1333, <8 x i32> %1334, i32 1)
  %1336 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1330, <16 x i32> %1335, i32 24)
  %1337 = bitcast <16 x i32> %1336 to <32 x bfloat>
  %1338 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1337, i32 0)
  %1339 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1278, i32 0)
  %1340 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1339, <16 x bfloat> %106, i32 1)
  %1341 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1294, i32 0)
  %1342 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1341, <16 x bfloat> %106, i32 1)
  %1343 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1340, <32 x bfloat> %1342, i32 60)
  %1344 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %1343)
  %1345 = load <16 x bfloat>, ptr %1303, align 32, !tbaa !2
  %1346 = bitcast <8 x i32> %1306 to <16 x i16>
  %1347 = getelementptr bfloat, ptr %0, i20 512
  %1348 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %1345, i32 8)
  %1349 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1348, <16 x i32> %15, i32 2)
  %1350 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1349, i32 0)
  %1351 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %1346, i32 0, i32 0)
  %1352 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1351, i32 6, i32 1)
  %1353 = add <16 x i32> %1352, %31
  %1354 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1353, i32 0)
  %1355 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1354), !noalias !15
  %1356 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1355, i32 0)
  %1357 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1354), !noalias !15
  %1358 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1356, <8 x i32> %1357, i32 1)
  %1359 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1353, i32 1)
  %1360 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1359), !noalias !15
  %1361 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1360, i32 0)
  %1362 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1359), !noalias !15
  %1363 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1361, <8 x i32> %1362, i32 1)
  %1364 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1358, <16 x i32> %1363, i32 24)
  %1365 = bitcast <16 x i32> %1364 to <32 x bfloat>
  %1366 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1365, i32 0)
  %1367 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1351, i32 -2, i32 1)
  %1368 = and <16 x i32> %1367, %4
  %1369 = add <16 x i32> %1368, %52
  %1370 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1369, i32 0)
  %1371 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1370), !noalias !20
  %1372 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1371, i32 0)
  %1373 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1370), !noalias !20
  %1374 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1372, <8 x i32> %1373, i32 1)
  %1375 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1369, i32 1)
  %1376 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1375), !noalias !20
  %1377 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1376, i32 0)
  %1378 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1375), !noalias !20
  %1379 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1377, <8 x i32> %1378, i32 1)
  %1380 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1374, <16 x i32> %1379, i32 24)
  %1381 = bitcast <16 x i32> %1380 to <32 x bfloat>
  %1382 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1381, i32 0)
  %1383 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1322, i32 0)
  %1384 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1383, <16 x bfloat> %106, i32 1)
  %1385 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1338, i32 0)
  %1386 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1385, <16 x bfloat> %106, i32 1)
  %1387 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1384, <32 x bfloat> %1386, i32 60)
  %1388 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %1387)
  %1389 = load <16 x bfloat>, ptr %1347, align 32, !tbaa !2
  %1390 = bitcast <8 x i32> %1350 to <16 x i16>
  %1391 = getelementptr bfloat, ptr %0, i20 528
  %1392 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %1389, i32 8)
  %1393 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1392, <16 x i32> %15, i32 2)
  %1394 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1393, i32 0)
  %1395 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %1390, i32 0, i32 0)
  %1396 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1395, i32 6, i32 1)
  %1397 = add <16 x i32> %1396, %31
  %1398 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1397, i32 0)
  %1399 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1398), !noalias !15
  %1400 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1399, i32 0)
  %1401 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1398), !noalias !15
  %1402 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1400, <8 x i32> %1401, i32 1)
  %1403 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1397, i32 1)
  %1404 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1403), !noalias !15
  %1405 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1404, i32 0)
  %1406 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1403), !noalias !15
  %1407 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1405, <8 x i32> %1406, i32 1)
  %1408 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1402, <16 x i32> %1407, i32 24)
  %1409 = bitcast <16 x i32> %1408 to <32 x bfloat>
  %1410 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1409, i32 0)
  %1411 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1395, i32 -2, i32 1)
  %1412 = and <16 x i32> %1411, %4
  %1413 = add <16 x i32> %1412, %52
  %1414 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1413, i32 0)
  %1415 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1414), !noalias !20
  %1416 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1415, i32 0)
  %1417 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1414), !noalias !20
  %1418 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1416, <8 x i32> %1417, i32 1)
  %1419 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1413, i32 1)
  %1420 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1419), !noalias !20
  %1421 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1420, i32 0)
  %1422 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1419), !noalias !20
  %1423 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1421, <8 x i32> %1422, i32 1)
  %1424 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1418, <16 x i32> %1423, i32 24)
  %1425 = bitcast <16 x i32> %1424 to <32 x bfloat>
  %1426 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1425, i32 0)
  %1427 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1366, i32 0)
  %1428 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1427, <16 x bfloat> %106, i32 1)
  %1429 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1382, i32 0)
  %1430 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1429, <16 x bfloat> %106, i32 1)
  %1431 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1428, <32 x bfloat> %1430, i32 60)
  %1432 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %1431)
  %1433 = load <16 x bfloat>, ptr %1391, align 32, !tbaa !2
  %1434 = bitcast <8 x i32> %1394 to <16 x i16>
  %1435 = getelementptr bfloat, ptr %0, i20 544
  %1436 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %1433, i32 8)
  %1437 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1436, <16 x i32> %15, i32 2)
  %1438 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1437, i32 0)
  %1439 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %1434, i32 0, i32 0)
  %1440 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1439, i32 6, i32 1)
  %1441 = add <16 x i32> %1440, %31
  %1442 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1441, i32 0)
  %1443 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1442), !noalias !15
  %1444 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1443, i32 0)
  %1445 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1442), !noalias !15
  %1446 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1444, <8 x i32> %1445, i32 1)
  %1447 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1441, i32 1)
  %1448 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1447), !noalias !15
  %1449 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1448, i32 0)
  %1450 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1447), !noalias !15
  %1451 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1449, <8 x i32> %1450, i32 1)
  %1452 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1446, <16 x i32> %1451, i32 24)
  %1453 = bitcast <16 x i32> %1452 to <32 x bfloat>
  %1454 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1453, i32 0)
  %1455 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1439, i32 -2, i32 1)
  %1456 = and <16 x i32> %1455, %4
  %1457 = add <16 x i32> %1456, %52
  %1458 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1457, i32 0)
  %1459 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1458), !noalias !20
  %1460 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1459, i32 0)
  %1461 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1458), !noalias !20
  %1462 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1460, <8 x i32> %1461, i32 1)
  %1463 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1457, i32 1)
  %1464 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1463), !noalias !20
  %1465 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1464, i32 0)
  %1466 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1463), !noalias !20
  %1467 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1465, <8 x i32> %1466, i32 1)
  %1468 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1462, <16 x i32> %1467, i32 24)
  %1469 = bitcast <16 x i32> %1468 to <32 x bfloat>
  %1470 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1469, i32 0)
  %1471 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1410, i32 0)
  %1472 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1471, <16 x bfloat> %106, i32 1)
  %1473 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1426, i32 0)
  %1474 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1473, <16 x bfloat> %106, i32 1)
  %1475 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1472, <32 x bfloat> %1474, i32 60)
  %1476 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %1475)
  %1477 = load <16 x bfloat>, ptr %1435, align 32, !tbaa !2
  %1478 = bitcast <8 x i32> %1438 to <16 x i16>
  %1479 = getelementptr bfloat, ptr %0, i20 560
  %1480 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %1477, i32 8)
  %1481 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1480, <16 x i32> %15, i32 2)
  %1482 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1481, i32 0)
  %1483 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %1478, i32 0, i32 0)
  %1484 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1483, i32 6, i32 1)
  %1485 = add <16 x i32> %1484, %31
  %1486 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1485, i32 0)
  %1487 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1486), !noalias !15
  %1488 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1487, i32 0)
  %1489 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1486), !noalias !15
  %1490 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1488, <8 x i32> %1489, i32 1)
  %1491 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1485, i32 1)
  %1492 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1491), !noalias !15
  %1493 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1492, i32 0)
  %1494 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1491), !noalias !15
  %1495 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1493, <8 x i32> %1494, i32 1)
  %1496 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1490, <16 x i32> %1495, i32 24)
  %1497 = bitcast <16 x i32> %1496 to <32 x bfloat>
  %1498 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1497, i32 0)
  %1499 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1483, i32 -2, i32 1)
  %1500 = and <16 x i32> %1499, %4
  %1501 = add <16 x i32> %1500, %52
  %1502 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1501, i32 0)
  %1503 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1502), !noalias !20
  %1504 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1503, i32 0)
  %1505 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1502), !noalias !20
  %1506 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1504, <8 x i32> %1505, i32 1)
  %1507 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1501, i32 1)
  %1508 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1507), !noalias !20
  %1509 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1508, i32 0)
  %1510 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1507), !noalias !20
  %1511 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1509, <8 x i32> %1510, i32 1)
  %1512 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1506, <16 x i32> %1511, i32 24)
  %1513 = bitcast <16 x i32> %1512 to <32 x bfloat>
  %1514 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1513, i32 0)
  %1515 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1454, i32 0)
  %1516 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1515, <16 x bfloat> %106, i32 1)
  %1517 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1470, i32 0)
  %1518 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1517, <16 x bfloat> %106, i32 1)
  %1519 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1516, <32 x bfloat> %1518, i32 60)
  %1520 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %1519)
  %1521 = load <16 x bfloat>, ptr %1479, align 32, !tbaa !2
  %1522 = bitcast <8 x i32> %1482 to <16 x i16>
  %1523 = getelementptr bfloat, ptr %0, i20 576
  %1524 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %1521, i32 8)
  %1525 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1524, <16 x i32> %15, i32 2)
  %1526 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1525, i32 0)
  %1527 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %1522, i32 0, i32 0)
  %1528 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1527, i32 6, i32 1)
  %1529 = add <16 x i32> %1528, %31
  %1530 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1529, i32 0)
  %1531 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1530), !noalias !15
  %1532 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1531, i32 0)
  %1533 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1530), !noalias !15
  %1534 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1532, <8 x i32> %1533, i32 1)
  %1535 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1529, i32 1)
  %1536 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1535), !noalias !15
  %1537 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1536, i32 0)
  %1538 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1535), !noalias !15
  %1539 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1537, <8 x i32> %1538, i32 1)
  %1540 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1534, <16 x i32> %1539, i32 24)
  %1541 = bitcast <16 x i32> %1540 to <32 x bfloat>
  %1542 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1541, i32 0)
  %1543 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1527, i32 -2, i32 1)
  %1544 = and <16 x i32> %1543, %4
  %1545 = add <16 x i32> %1544, %52
  %1546 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1545, i32 0)
  %1547 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1546), !noalias !20
  %1548 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1547, i32 0)
  %1549 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1546), !noalias !20
  %1550 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1548, <8 x i32> %1549, i32 1)
  %1551 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1545, i32 1)
  %1552 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1551), !noalias !20
  %1553 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1552, i32 0)
  %1554 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1551), !noalias !20
  %1555 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1553, <8 x i32> %1554, i32 1)
  %1556 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1550, <16 x i32> %1555, i32 24)
  %1557 = bitcast <16 x i32> %1556 to <32 x bfloat>
  %1558 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1557, i32 0)
  %1559 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1498, i32 0)
  %1560 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1559, <16 x bfloat> %106, i32 1)
  %1561 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1514, i32 0)
  %1562 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1561, <16 x bfloat> %106, i32 1)
  %1563 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1560, <32 x bfloat> %1562, i32 60)
  %1564 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %1563)
  %1565 = load <16 x bfloat>, ptr %1523, align 32, !tbaa !2
  %1566 = bitcast <8 x i32> %1526 to <16 x i16>
  %1567 = getelementptr bfloat, ptr %0, i20 592
  %1568 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %1565, i32 8)
  %1569 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1568, <16 x i32> %15, i32 2)
  %1570 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1569, i32 0)
  %1571 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %1566, i32 0, i32 0)
  %1572 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1571, i32 6, i32 1)
  %1573 = add <16 x i32> %1572, %31
  %1574 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1573, i32 0)
  %1575 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1574), !noalias !15
  %1576 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1575, i32 0)
  %1577 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1574), !noalias !15
  %1578 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1576, <8 x i32> %1577, i32 1)
  %1579 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1573, i32 1)
  %1580 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1579), !noalias !15
  %1581 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1580, i32 0)
  %1582 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1579), !noalias !15
  %1583 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1581, <8 x i32> %1582, i32 1)
  %1584 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1578, <16 x i32> %1583, i32 24)
  %1585 = bitcast <16 x i32> %1584 to <32 x bfloat>
  %1586 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1585, i32 0)
  %1587 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1571, i32 -2, i32 1)
  %1588 = and <16 x i32> %1587, %4
  %1589 = add <16 x i32> %1588, %52
  %1590 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1589, i32 0)
  %1591 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1590), !noalias !20
  %1592 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1591, i32 0)
  %1593 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1590), !noalias !20
  %1594 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1592, <8 x i32> %1593, i32 1)
  %1595 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1589, i32 1)
  %1596 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1595), !noalias !20
  %1597 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1596, i32 0)
  %1598 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1595), !noalias !20
  %1599 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1597, <8 x i32> %1598, i32 1)
  %1600 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1594, <16 x i32> %1599, i32 24)
  %1601 = bitcast <16 x i32> %1600 to <32 x bfloat>
  %1602 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1601, i32 0)
  %1603 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1542, i32 0)
  %1604 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1603, <16 x bfloat> %106, i32 1)
  %1605 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1558, i32 0)
  %1606 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1605, <16 x bfloat> %106, i32 1)
  %1607 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1604, <32 x bfloat> %1606, i32 60)
  %1608 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %1607)
  %1609 = load <16 x bfloat>, ptr %1567, align 32, !tbaa !2
  %1610 = bitcast <8 x i32> %1570 to <16 x i16>
  %1611 = getelementptr bfloat, ptr %0, i20 608
  %1612 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %1609, i32 8)
  %1613 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1612, <16 x i32> %15, i32 2)
  %1614 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1613, i32 0)
  %1615 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %1610, i32 0, i32 0)
  %1616 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1615, i32 6, i32 1)
  %1617 = add <16 x i32> %1616, %31
  %1618 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1617, i32 0)
  %1619 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1618), !noalias !15
  %1620 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1619, i32 0)
  %1621 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1618), !noalias !15
  %1622 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1620, <8 x i32> %1621, i32 1)
  %1623 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1617, i32 1)
  %1624 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1623), !noalias !15
  %1625 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1624, i32 0)
  %1626 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1623), !noalias !15
  %1627 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1625, <8 x i32> %1626, i32 1)
  %1628 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1622, <16 x i32> %1627, i32 24)
  %1629 = bitcast <16 x i32> %1628 to <32 x bfloat>
  %1630 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1629, i32 0)
  %1631 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1615, i32 -2, i32 1)
  %1632 = and <16 x i32> %1631, %4
  %1633 = add <16 x i32> %1632, %52
  %1634 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1633, i32 0)
  %1635 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1634), !noalias !20
  %1636 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1635, i32 0)
  %1637 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1634), !noalias !20
  %1638 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1636, <8 x i32> %1637, i32 1)
  %1639 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1633, i32 1)
  %1640 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1639), !noalias !20
  %1641 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1640, i32 0)
  %1642 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1639), !noalias !20
  %1643 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1641, <8 x i32> %1642, i32 1)
  %1644 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1638, <16 x i32> %1643, i32 24)
  %1645 = bitcast <16 x i32> %1644 to <32 x bfloat>
  %1646 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1645, i32 0)
  %1647 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1586, i32 0)
  %1648 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1647, <16 x bfloat> %106, i32 1)
  %1649 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1602, i32 0)
  %1650 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1649, <16 x bfloat> %106, i32 1)
  %1651 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1648, <32 x bfloat> %1650, i32 60)
  %1652 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %1651)
  %1653 = load <16 x bfloat>, ptr %1611, align 32, !tbaa !2
  %1654 = bitcast <8 x i32> %1614 to <16 x i16>
  %1655 = getelementptr bfloat, ptr %0, i20 624
  %1656 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %1653, i32 8)
  %1657 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1656, <16 x i32> %15, i32 2)
  %1658 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1657, i32 0)
  %1659 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %1654, i32 0, i32 0)
  %1660 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1659, i32 6, i32 1)
  %1661 = add <16 x i32> %1660, %31
  %1662 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1661, i32 0)
  %1663 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1662), !noalias !15
  %1664 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1663, i32 0)
  %1665 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1662), !noalias !15
  %1666 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1664, <8 x i32> %1665, i32 1)
  %1667 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1661, i32 1)
  %1668 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1667), !noalias !15
  %1669 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1668, i32 0)
  %1670 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1667), !noalias !15
  %1671 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1669, <8 x i32> %1670, i32 1)
  %1672 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1666, <16 x i32> %1671, i32 24)
  %1673 = bitcast <16 x i32> %1672 to <32 x bfloat>
  %1674 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1673, i32 0)
  %1675 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1659, i32 -2, i32 1)
  %1676 = and <16 x i32> %1675, %4
  %1677 = add <16 x i32> %1676, %52
  %1678 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1677, i32 0)
  %1679 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1678), !noalias !20
  %1680 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1679, i32 0)
  %1681 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1678), !noalias !20
  %1682 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1680, <8 x i32> %1681, i32 1)
  %1683 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1677, i32 1)
  %1684 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1683), !noalias !20
  %1685 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1684, i32 0)
  %1686 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1683), !noalias !20
  %1687 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1685, <8 x i32> %1686, i32 1)
  %1688 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1682, <16 x i32> %1687, i32 24)
  %1689 = bitcast <16 x i32> %1688 to <32 x bfloat>
  %1690 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1689, i32 0)
  %1691 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1630, i32 0)
  %1692 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1691, <16 x bfloat> %106, i32 1)
  %1693 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1646, i32 0)
  %1694 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1693, <16 x bfloat> %106, i32 1)
  %1695 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1692, <32 x bfloat> %1694, i32 60)
  %1696 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %1695)
  %1697 = load <16 x bfloat>, ptr %1655, align 32, !tbaa !2
  %1698 = bitcast <8 x i32> %1658 to <16 x i16>
  %1699 = getelementptr bfloat, ptr %0, i20 640
  %1700 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %1697, i32 8)
  %1701 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1700, <16 x i32> %15, i32 2)
  %1702 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1701, i32 0)
  %1703 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %1698, i32 0, i32 0)
  %1704 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1703, i32 6, i32 1)
  %1705 = add <16 x i32> %1704, %31
  %1706 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1705, i32 0)
  %1707 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1706), !noalias !15
  %1708 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1707, i32 0)
  %1709 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1706), !noalias !15
  %1710 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1708, <8 x i32> %1709, i32 1)
  %1711 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1705, i32 1)
  %1712 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1711), !noalias !15
  %1713 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1712, i32 0)
  %1714 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1711), !noalias !15
  %1715 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1713, <8 x i32> %1714, i32 1)
  %1716 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1710, <16 x i32> %1715, i32 24)
  %1717 = bitcast <16 x i32> %1716 to <32 x bfloat>
  %1718 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1717, i32 0)
  %1719 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1703, i32 -2, i32 1)
  %1720 = and <16 x i32> %1719, %4
  %1721 = add <16 x i32> %1720, %52
  %1722 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1721, i32 0)
  %1723 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1722), !noalias !20
  %1724 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1723, i32 0)
  %1725 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1722), !noalias !20
  %1726 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1724, <8 x i32> %1725, i32 1)
  %1727 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1721, i32 1)
  %1728 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1727), !noalias !20
  %1729 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1728, i32 0)
  %1730 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1727), !noalias !20
  %1731 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1729, <8 x i32> %1730, i32 1)
  %1732 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1726, <16 x i32> %1731, i32 24)
  %1733 = bitcast <16 x i32> %1732 to <32 x bfloat>
  %1734 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1733, i32 0)
  %1735 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1674, i32 0)
  %1736 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1735, <16 x bfloat> %106, i32 1)
  %1737 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1690, i32 0)
  %1738 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1737, <16 x bfloat> %106, i32 1)
  %1739 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1736, <32 x bfloat> %1738, i32 60)
  %1740 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %1739)
  %1741 = load <16 x bfloat>, ptr %1699, align 32, !tbaa !2
  %1742 = bitcast <8 x i32> %1702 to <16 x i16>
  %1743 = getelementptr bfloat, ptr %0, i20 656
  %1744 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %1741, i32 8)
  %1745 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1744, <16 x i32> %15, i32 2)
  %1746 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1745, i32 0)
  %1747 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %1742, i32 0, i32 0)
  %1748 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1747, i32 6, i32 1)
  %1749 = add <16 x i32> %1748, %31
  %1750 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1749, i32 0)
  %1751 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1750), !noalias !15
  %1752 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1751, i32 0)
  %1753 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1750), !noalias !15
  %1754 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1752, <8 x i32> %1753, i32 1)
  %1755 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1749, i32 1)
  %1756 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1755), !noalias !15
  %1757 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1756, i32 0)
  %1758 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1755), !noalias !15
  %1759 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1757, <8 x i32> %1758, i32 1)
  %1760 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1754, <16 x i32> %1759, i32 24)
  %1761 = bitcast <16 x i32> %1760 to <32 x bfloat>
  %1762 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1761, i32 0)
  %1763 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1747, i32 -2, i32 1)
  %1764 = and <16 x i32> %1763, %4
  %1765 = add <16 x i32> %1764, %52
  %1766 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1765, i32 0)
  %1767 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1766), !noalias !20
  %1768 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1767, i32 0)
  %1769 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1766), !noalias !20
  %1770 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1768, <8 x i32> %1769, i32 1)
  %1771 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1765, i32 1)
  %1772 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1771), !noalias !20
  %1773 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1772, i32 0)
  %1774 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1771), !noalias !20
  %1775 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1773, <8 x i32> %1774, i32 1)
  %1776 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1770, <16 x i32> %1775, i32 24)
  %1777 = bitcast <16 x i32> %1776 to <32 x bfloat>
  %1778 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1777, i32 0)
  %1779 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1718, i32 0)
  %1780 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1779, <16 x bfloat> %106, i32 1)
  %1781 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1734, i32 0)
  %1782 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1781, <16 x bfloat> %106, i32 1)
  %1783 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1780, <32 x bfloat> %1782, i32 60)
  %1784 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %1783)
  %1785 = load <16 x bfloat>, ptr %1743, align 32, !tbaa !2
  %1786 = bitcast <8 x i32> %1746 to <16 x i16>
  %1787 = getelementptr bfloat, ptr %0, i20 672
  %1788 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %1785, i32 8)
  %1789 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1788, <16 x i32> %15, i32 2)
  %1790 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1789, i32 0)
  %1791 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %1786, i32 0, i32 0)
  %1792 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1791, i32 6, i32 1)
  %1793 = add <16 x i32> %1792, %31
  %1794 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1793, i32 0)
  %1795 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1794), !noalias !15
  %1796 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1795, i32 0)
  %1797 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1794), !noalias !15
  %1798 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1796, <8 x i32> %1797, i32 1)
  %1799 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1793, i32 1)
  %1800 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1799), !noalias !15
  %1801 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1800, i32 0)
  %1802 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1799), !noalias !15
  %1803 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1801, <8 x i32> %1802, i32 1)
  %1804 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1798, <16 x i32> %1803, i32 24)
  %1805 = bitcast <16 x i32> %1804 to <32 x bfloat>
  %1806 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1805, i32 0)
  %1807 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1791, i32 -2, i32 1)
  %1808 = and <16 x i32> %1807, %4
  %1809 = add <16 x i32> %1808, %52
  %1810 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1809, i32 0)
  %1811 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1810), !noalias !20
  %1812 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1811, i32 0)
  %1813 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1810), !noalias !20
  %1814 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1812, <8 x i32> %1813, i32 1)
  %1815 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1809, i32 1)
  %1816 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1815), !noalias !20
  %1817 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1816, i32 0)
  %1818 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1815), !noalias !20
  %1819 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1817, <8 x i32> %1818, i32 1)
  %1820 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1814, <16 x i32> %1819, i32 24)
  %1821 = bitcast <16 x i32> %1820 to <32 x bfloat>
  %1822 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1821, i32 0)
  %1823 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1762, i32 0)
  %1824 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1823, <16 x bfloat> %106, i32 1)
  %1825 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1778, i32 0)
  %1826 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1825, <16 x bfloat> %106, i32 1)
  %1827 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1824, <32 x bfloat> %1826, i32 60)
  %1828 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %1827)
  %1829 = load <16 x bfloat>, ptr %1787, align 32, !tbaa !2
  %1830 = bitcast <8 x i32> %1790 to <16 x i16>
  %1831 = getelementptr bfloat, ptr %0, i20 688
  %1832 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %1829, i32 8)
  %1833 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1832, <16 x i32> %15, i32 2)
  %1834 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1833, i32 0)
  %1835 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %1830, i32 0, i32 0)
  %1836 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1835, i32 6, i32 1)
  %1837 = add <16 x i32> %1836, %31
  %1838 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1837, i32 0)
  %1839 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1838), !noalias !15
  %1840 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1839, i32 0)
  %1841 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1838), !noalias !15
  %1842 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1840, <8 x i32> %1841, i32 1)
  %1843 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1837, i32 1)
  %1844 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1843), !noalias !15
  %1845 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1844, i32 0)
  %1846 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1843), !noalias !15
  %1847 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1845, <8 x i32> %1846, i32 1)
  %1848 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1842, <16 x i32> %1847, i32 24)
  %1849 = bitcast <16 x i32> %1848 to <32 x bfloat>
  %1850 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1849, i32 0)
  %1851 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1835, i32 -2, i32 1)
  %1852 = and <16 x i32> %1851, %4
  %1853 = add <16 x i32> %1852, %52
  %1854 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1853, i32 0)
  %1855 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1854), !noalias !20
  %1856 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1855, i32 0)
  %1857 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1854), !noalias !20
  %1858 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1856, <8 x i32> %1857, i32 1)
  %1859 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1853, i32 1)
  %1860 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1859), !noalias !20
  %1861 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1860, i32 0)
  %1862 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1859), !noalias !20
  %1863 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1861, <8 x i32> %1862, i32 1)
  %1864 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1858, <16 x i32> %1863, i32 24)
  %1865 = bitcast <16 x i32> %1864 to <32 x bfloat>
  %1866 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1865, i32 0)
  %1867 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1806, i32 0)
  %1868 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1867, <16 x bfloat> %106, i32 1)
  %1869 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1822, i32 0)
  %1870 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1869, <16 x bfloat> %106, i32 1)
  %1871 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1868, <32 x bfloat> %1870, i32 60)
  %1872 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %1871)
  %1873 = load <16 x bfloat>, ptr %1831, align 32, !tbaa !2
  %1874 = bitcast <8 x i32> %1834 to <16 x i16>
  %1875 = getelementptr bfloat, ptr %0, i20 704
  %1876 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %1873, i32 8)
  %1877 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1876, <16 x i32> %15, i32 2)
  %1878 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1877, i32 0)
  %1879 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %1874, i32 0, i32 0)
  %1880 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1879, i32 6, i32 1)
  %1881 = add <16 x i32> %1880, %31
  %1882 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1881, i32 0)
  %1883 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1882), !noalias !15
  %1884 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1883, i32 0)
  %1885 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1882), !noalias !15
  %1886 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1884, <8 x i32> %1885, i32 1)
  %1887 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1881, i32 1)
  %1888 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1887), !noalias !15
  %1889 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1888, i32 0)
  %1890 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1887), !noalias !15
  %1891 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1889, <8 x i32> %1890, i32 1)
  %1892 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1886, <16 x i32> %1891, i32 24)
  %1893 = bitcast <16 x i32> %1892 to <32 x bfloat>
  %1894 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1893, i32 0)
  %1895 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1879, i32 -2, i32 1)
  %1896 = and <16 x i32> %1895, %4
  %1897 = add <16 x i32> %1896, %52
  %1898 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1897, i32 0)
  %1899 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1898), !noalias !20
  %1900 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1899, i32 0)
  %1901 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1898), !noalias !20
  %1902 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1900, <8 x i32> %1901, i32 1)
  %1903 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1897, i32 1)
  %1904 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1903), !noalias !20
  %1905 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1904, i32 0)
  %1906 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1903), !noalias !20
  %1907 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1905, <8 x i32> %1906, i32 1)
  %1908 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1902, <16 x i32> %1907, i32 24)
  %1909 = bitcast <16 x i32> %1908 to <32 x bfloat>
  %1910 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1909, i32 0)
  %1911 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1850, i32 0)
  %1912 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1911, <16 x bfloat> %106, i32 1)
  %1913 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1866, i32 0)
  %1914 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1913, <16 x bfloat> %106, i32 1)
  %1915 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1912, <32 x bfloat> %1914, i32 60)
  %1916 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %1915)
  %1917 = load <16 x bfloat>, ptr %1875, align 32, !tbaa !2
  %1918 = bitcast <8 x i32> %1878 to <16 x i16>
  %1919 = getelementptr bfloat, ptr %0, i20 720
  %1920 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %1917, i32 8)
  %1921 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1920, <16 x i32> %15, i32 2)
  %1922 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1921, i32 0)
  %1923 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %1918, i32 0, i32 0)
  %1924 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1923, i32 6, i32 1)
  %1925 = add <16 x i32> %1924, %31
  %1926 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1925, i32 0)
  %1927 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1926), !noalias !15
  %1928 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1927, i32 0)
  %1929 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1926), !noalias !15
  %1930 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1928, <8 x i32> %1929, i32 1)
  %1931 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1925, i32 1)
  %1932 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1931), !noalias !15
  %1933 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1932, i32 0)
  %1934 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1931), !noalias !15
  %1935 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1933, <8 x i32> %1934, i32 1)
  %1936 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1930, <16 x i32> %1935, i32 24)
  %1937 = bitcast <16 x i32> %1936 to <32 x bfloat>
  %1938 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1937, i32 0)
  %1939 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1923, i32 -2, i32 1)
  %1940 = and <16 x i32> %1939, %4
  %1941 = add <16 x i32> %1940, %52
  %1942 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1941, i32 0)
  %1943 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1942), !noalias !20
  %1944 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1943, i32 0)
  %1945 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1942), !noalias !20
  %1946 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1944, <8 x i32> %1945, i32 1)
  %1947 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1941, i32 1)
  %1948 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1947), !noalias !20
  %1949 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1948, i32 0)
  %1950 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1947), !noalias !20
  %1951 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1949, <8 x i32> %1950, i32 1)
  %1952 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1946, <16 x i32> %1951, i32 24)
  %1953 = bitcast <16 x i32> %1952 to <32 x bfloat>
  %1954 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1953, i32 0)
  %1955 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1894, i32 0)
  %1956 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1955, <16 x bfloat> %106, i32 1)
  %1957 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1910, i32 0)
  %1958 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1957, <16 x bfloat> %106, i32 1)
  %1959 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1956, <32 x bfloat> %1958, i32 60)
  %1960 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %1959)
  %1961 = load <16 x bfloat>, ptr %1919, align 32, !tbaa !2
  %1962 = bitcast <8 x i32> %1922 to <16 x i16>
  %1963 = getelementptr bfloat, ptr %0, i20 736
  %1964 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %1961, i32 8)
  %1965 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1964, <16 x i32> %15, i32 2)
  %1966 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1965, i32 0)
  %1967 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %1962, i32 0, i32 0)
  %1968 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1967, i32 6, i32 1)
  %1969 = add <16 x i32> %1968, %31
  %1970 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1969, i32 0)
  %1971 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1970), !noalias !15
  %1972 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1971, i32 0)
  %1973 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1970), !noalias !15
  %1974 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1972, <8 x i32> %1973, i32 1)
  %1975 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1969, i32 1)
  %1976 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1975), !noalias !15
  %1977 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1976, i32 0)
  %1978 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1975), !noalias !15
  %1979 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1977, <8 x i32> %1978, i32 1)
  %1980 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1974, <16 x i32> %1979, i32 24)
  %1981 = bitcast <16 x i32> %1980 to <32 x bfloat>
  %1982 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1981, i32 0)
  %1983 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1967, i32 -2, i32 1)
  %1984 = and <16 x i32> %1983, %4
  %1985 = add <16 x i32> %1984, %52
  %1986 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1985, i32 0)
  %1987 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1986), !noalias !20
  %1988 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1987, i32 0)
  %1989 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1986), !noalias !20
  %1990 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1988, <8 x i32> %1989, i32 1)
  %1991 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1985, i32 1)
  %1992 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1991), !noalias !20
  %1993 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1992, i32 0)
  %1994 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1991), !noalias !20
  %1995 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1993, <8 x i32> %1994, i32 1)
  %1996 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1990, <16 x i32> %1995, i32 24)
  %1997 = bitcast <16 x i32> %1996 to <32 x bfloat>
  %1998 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1997, i32 0)
  %1999 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1938, i32 0)
  %2000 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1999, <16 x bfloat> %106, i32 1)
  %2001 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1954, i32 0)
  %2002 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2001, <16 x bfloat> %106, i32 1)
  %2003 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %2000, <32 x bfloat> %2002, i32 60)
  %2004 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %2003)
  %2005 = load <16 x bfloat>, ptr %1963, align 32, !tbaa !2
  %2006 = bitcast <8 x i32> %1966 to <16 x i16>
  %2007 = getelementptr bfloat, ptr %0, i20 752
  %2008 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %2005, i32 8)
  %2009 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2008, <16 x i32> %15, i32 2)
  %2010 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2009, i32 0)
  %2011 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %2006, i32 0, i32 0)
  %2012 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2011, i32 6, i32 1)
  %2013 = add <16 x i32> %2012, %31
  %2014 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2013, i32 0)
  %2015 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2014), !noalias !15
  %2016 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2015, i32 0)
  %2017 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2014), !noalias !15
  %2018 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2016, <8 x i32> %2017, i32 1)
  %2019 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2013, i32 1)
  %2020 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2019), !noalias !15
  %2021 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2020, i32 0)
  %2022 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2019), !noalias !15
  %2023 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2021, <8 x i32> %2022, i32 1)
  %2024 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2018, <16 x i32> %2023, i32 24)
  %2025 = bitcast <16 x i32> %2024 to <32 x bfloat>
  %2026 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2025, i32 0)
  %2027 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2011, i32 -2, i32 1)
  %2028 = and <16 x i32> %2027, %4
  %2029 = add <16 x i32> %2028, %52
  %2030 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2029, i32 0)
  %2031 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2030), !noalias !20
  %2032 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2031, i32 0)
  %2033 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2030), !noalias !20
  %2034 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2032, <8 x i32> %2033, i32 1)
  %2035 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2029, i32 1)
  %2036 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2035), !noalias !20
  %2037 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2036, i32 0)
  %2038 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2035), !noalias !20
  %2039 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2037, <8 x i32> %2038, i32 1)
  %2040 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2034, <16 x i32> %2039, i32 24)
  %2041 = bitcast <16 x i32> %2040 to <32 x bfloat>
  %2042 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2041, i32 0)
  %2043 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1982, i32 0)
  %2044 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2043, <16 x bfloat> %106, i32 1)
  %2045 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1998, i32 0)
  %2046 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2045, <16 x bfloat> %106, i32 1)
  %2047 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %2044, <32 x bfloat> %2046, i32 60)
  %2048 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %2047)
  %2049 = load <16 x bfloat>, ptr %2007, align 32, !tbaa !2
  %2050 = bitcast <8 x i32> %2010 to <16 x i16>
  %2051 = getelementptr bfloat, ptr %0, i20 768
  %2052 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %2049, i32 8)
  %2053 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2052, <16 x i32> %15, i32 2)
  %2054 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2053, i32 0)
  %2055 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %2050, i32 0, i32 0)
  %2056 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2055, i32 6, i32 1)
  %2057 = add <16 x i32> %2056, %31
  %2058 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2057, i32 0)
  %2059 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2058), !noalias !15
  %2060 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2059, i32 0)
  %2061 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2058), !noalias !15
  %2062 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2060, <8 x i32> %2061, i32 1)
  %2063 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2057, i32 1)
  %2064 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2063), !noalias !15
  %2065 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2064, i32 0)
  %2066 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2063), !noalias !15
  %2067 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2065, <8 x i32> %2066, i32 1)
  %2068 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2062, <16 x i32> %2067, i32 24)
  %2069 = bitcast <16 x i32> %2068 to <32 x bfloat>
  %2070 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2069, i32 0)
  %2071 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2055, i32 -2, i32 1)
  %2072 = and <16 x i32> %2071, %4
  %2073 = add <16 x i32> %2072, %52
  %2074 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2073, i32 0)
  %2075 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2074), !noalias !20
  %2076 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2075, i32 0)
  %2077 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2074), !noalias !20
  %2078 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2076, <8 x i32> %2077, i32 1)
  %2079 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2073, i32 1)
  %2080 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2079), !noalias !20
  %2081 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2080, i32 0)
  %2082 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2079), !noalias !20
  %2083 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2081, <8 x i32> %2082, i32 1)
  %2084 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2078, <16 x i32> %2083, i32 24)
  %2085 = bitcast <16 x i32> %2084 to <32 x bfloat>
  %2086 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2085, i32 0)
  %2087 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2026, i32 0)
  %2088 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2087, <16 x bfloat> %106, i32 1)
  %2089 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2042, i32 0)
  %2090 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2089, <16 x bfloat> %106, i32 1)
  %2091 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %2088, <32 x bfloat> %2090, i32 60)
  %2092 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %2091)
  %2093 = load <16 x bfloat>, ptr %2051, align 32, !tbaa !2
  %2094 = bitcast <8 x i32> %2054 to <16 x i16>
  %2095 = getelementptr bfloat, ptr %0, i20 784
  %2096 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %2093, i32 8)
  %2097 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2096, <16 x i32> %15, i32 2)
  %2098 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2097, i32 0)
  %2099 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %2094, i32 0, i32 0)
  %2100 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2099, i32 6, i32 1)
  %2101 = add <16 x i32> %2100, %31
  %2102 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2101, i32 0)
  %2103 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2102), !noalias !15
  %2104 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2103, i32 0)
  %2105 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2102), !noalias !15
  %2106 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2104, <8 x i32> %2105, i32 1)
  %2107 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2101, i32 1)
  %2108 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2107), !noalias !15
  %2109 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2108, i32 0)
  %2110 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2107), !noalias !15
  %2111 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2109, <8 x i32> %2110, i32 1)
  %2112 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2106, <16 x i32> %2111, i32 24)
  %2113 = bitcast <16 x i32> %2112 to <32 x bfloat>
  %2114 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2113, i32 0)
  %2115 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2099, i32 -2, i32 1)
  %2116 = and <16 x i32> %2115, %4
  %2117 = add <16 x i32> %2116, %52
  %2118 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2117, i32 0)
  %2119 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2118), !noalias !20
  %2120 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2119, i32 0)
  %2121 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2118), !noalias !20
  %2122 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2120, <8 x i32> %2121, i32 1)
  %2123 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2117, i32 1)
  %2124 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2123), !noalias !20
  %2125 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2124, i32 0)
  %2126 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2123), !noalias !20
  %2127 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2125, <8 x i32> %2126, i32 1)
  %2128 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2122, <16 x i32> %2127, i32 24)
  %2129 = bitcast <16 x i32> %2128 to <32 x bfloat>
  %2130 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2129, i32 0)
  %2131 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2070, i32 0)
  %2132 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2131, <16 x bfloat> %106, i32 1)
  %2133 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2086, i32 0)
  %2134 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2133, <16 x bfloat> %106, i32 1)
  %2135 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %2132, <32 x bfloat> %2134, i32 60)
  %2136 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %2135)
  %2137 = load <16 x bfloat>, ptr %2095, align 32, !tbaa !2
  %2138 = bitcast <8 x i32> %2098 to <16 x i16>
  %2139 = getelementptr bfloat, ptr %0, i20 800
  %2140 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %2137, i32 8)
  %2141 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2140, <16 x i32> %15, i32 2)
  %2142 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2141, i32 0)
  %2143 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %2138, i32 0, i32 0)
  %2144 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2143, i32 6, i32 1)
  %2145 = add <16 x i32> %2144, %31
  %2146 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2145, i32 0)
  %2147 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2146), !noalias !15
  %2148 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2147, i32 0)
  %2149 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2146), !noalias !15
  %2150 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2148, <8 x i32> %2149, i32 1)
  %2151 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2145, i32 1)
  %2152 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2151), !noalias !15
  %2153 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2152, i32 0)
  %2154 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2151), !noalias !15
  %2155 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2153, <8 x i32> %2154, i32 1)
  %2156 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2150, <16 x i32> %2155, i32 24)
  %2157 = bitcast <16 x i32> %2156 to <32 x bfloat>
  %2158 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2157, i32 0)
  %2159 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2143, i32 -2, i32 1)
  %2160 = and <16 x i32> %2159, %4
  %2161 = add <16 x i32> %2160, %52
  %2162 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2161, i32 0)
  %2163 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2162), !noalias !20
  %2164 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2163, i32 0)
  %2165 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2162), !noalias !20
  %2166 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2164, <8 x i32> %2165, i32 1)
  %2167 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2161, i32 1)
  %2168 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2167), !noalias !20
  %2169 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2168, i32 0)
  %2170 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2167), !noalias !20
  %2171 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2169, <8 x i32> %2170, i32 1)
  %2172 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2166, <16 x i32> %2171, i32 24)
  %2173 = bitcast <16 x i32> %2172 to <32 x bfloat>
  %2174 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2173, i32 0)
  %2175 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2114, i32 0)
  %2176 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2175, <16 x bfloat> %106, i32 1)
  %2177 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2130, i32 0)
  %2178 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2177, <16 x bfloat> %106, i32 1)
  %2179 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %2176, <32 x bfloat> %2178, i32 60)
  %2180 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %2179)
  %2181 = load <16 x bfloat>, ptr %2139, align 32, !tbaa !2
  %2182 = bitcast <8 x i32> %2142 to <16 x i16>
  %2183 = getelementptr bfloat, ptr %0, i20 816
  %2184 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %2181, i32 8)
  %2185 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2184, <16 x i32> %15, i32 2)
  %2186 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2185, i32 0)
  %2187 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %2182, i32 0, i32 0)
  %2188 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2187, i32 6, i32 1)
  %2189 = add <16 x i32> %2188, %31
  %2190 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2189, i32 0)
  %2191 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2190), !noalias !15
  %2192 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2191, i32 0)
  %2193 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2190), !noalias !15
  %2194 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2192, <8 x i32> %2193, i32 1)
  %2195 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2189, i32 1)
  %2196 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2195), !noalias !15
  %2197 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2196, i32 0)
  %2198 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2195), !noalias !15
  %2199 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2197, <8 x i32> %2198, i32 1)
  %2200 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2194, <16 x i32> %2199, i32 24)
  %2201 = bitcast <16 x i32> %2200 to <32 x bfloat>
  %2202 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2201, i32 0)
  %2203 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2187, i32 -2, i32 1)
  %2204 = and <16 x i32> %2203, %4
  %2205 = add <16 x i32> %2204, %52
  %2206 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2205, i32 0)
  %2207 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2206), !noalias !20
  %2208 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2207, i32 0)
  %2209 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2206), !noalias !20
  %2210 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2208, <8 x i32> %2209, i32 1)
  %2211 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2205, i32 1)
  %2212 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2211), !noalias !20
  %2213 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2212, i32 0)
  %2214 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2211), !noalias !20
  %2215 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2213, <8 x i32> %2214, i32 1)
  %2216 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2210, <16 x i32> %2215, i32 24)
  %2217 = bitcast <16 x i32> %2216 to <32 x bfloat>
  %2218 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2217, i32 0)
  %2219 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2158, i32 0)
  %2220 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2219, <16 x bfloat> %106, i32 1)
  %2221 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2174, i32 0)
  %2222 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2221, <16 x bfloat> %106, i32 1)
  %2223 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %2220, <32 x bfloat> %2222, i32 60)
  %2224 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %2223)
  %2225 = load <16 x bfloat>, ptr %2183, align 32, !tbaa !2
  %2226 = bitcast <8 x i32> %2186 to <16 x i16>
  %2227 = getelementptr bfloat, ptr %0, i20 832
  %2228 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %2225, i32 8)
  %2229 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2228, <16 x i32> %15, i32 2)
  %2230 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2229, i32 0)
  %2231 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %2226, i32 0, i32 0)
  %2232 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2231, i32 6, i32 1)
  %2233 = add <16 x i32> %2232, %31
  %2234 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2233, i32 0)
  %2235 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2234), !noalias !15
  %2236 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2235, i32 0)
  %2237 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2234), !noalias !15
  %2238 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2236, <8 x i32> %2237, i32 1)
  %2239 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2233, i32 1)
  %2240 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2239), !noalias !15
  %2241 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2240, i32 0)
  %2242 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2239), !noalias !15
  %2243 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2241, <8 x i32> %2242, i32 1)
  %2244 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2238, <16 x i32> %2243, i32 24)
  %2245 = bitcast <16 x i32> %2244 to <32 x bfloat>
  %2246 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2245, i32 0)
  %2247 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2231, i32 -2, i32 1)
  %2248 = and <16 x i32> %2247, %4
  %2249 = add <16 x i32> %2248, %52
  %2250 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2249, i32 0)
  %2251 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2250), !noalias !20
  %2252 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2251, i32 0)
  %2253 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2250), !noalias !20
  %2254 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2252, <8 x i32> %2253, i32 1)
  %2255 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2249, i32 1)
  %2256 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2255), !noalias !20
  %2257 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2256, i32 0)
  %2258 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2255), !noalias !20
  %2259 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2257, <8 x i32> %2258, i32 1)
  %2260 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2254, <16 x i32> %2259, i32 24)
  %2261 = bitcast <16 x i32> %2260 to <32 x bfloat>
  %2262 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2261, i32 0)
  %2263 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2202, i32 0)
  %2264 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2263, <16 x bfloat> %106, i32 1)
  %2265 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2218, i32 0)
  %2266 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2265, <16 x bfloat> %106, i32 1)
  %2267 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %2264, <32 x bfloat> %2266, i32 60)
  %2268 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %2267)
  %2269 = load <16 x bfloat>, ptr %2227, align 32, !tbaa !2
  %2270 = bitcast <8 x i32> %2230 to <16 x i16>
  %2271 = getelementptr bfloat, ptr %0, i20 848
  %2272 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %2269, i32 8)
  %2273 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2272, <16 x i32> %15, i32 2)
  %2274 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2273, i32 0)
  %2275 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %2270, i32 0, i32 0)
  %2276 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2275, i32 6, i32 1)
  %2277 = add <16 x i32> %2276, %31
  %2278 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2277, i32 0)
  %2279 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2278), !noalias !15
  %2280 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2279, i32 0)
  %2281 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2278), !noalias !15
  %2282 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2280, <8 x i32> %2281, i32 1)
  %2283 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2277, i32 1)
  %2284 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2283), !noalias !15
  %2285 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2284, i32 0)
  %2286 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2283), !noalias !15
  %2287 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2285, <8 x i32> %2286, i32 1)
  %2288 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2282, <16 x i32> %2287, i32 24)
  %2289 = bitcast <16 x i32> %2288 to <32 x bfloat>
  %2290 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2289, i32 0)
  %2291 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2275, i32 -2, i32 1)
  %2292 = and <16 x i32> %2291, %4
  %2293 = add <16 x i32> %2292, %52
  %2294 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2293, i32 0)
  %2295 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2294), !noalias !20
  %2296 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2295, i32 0)
  %2297 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2294), !noalias !20
  %2298 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2296, <8 x i32> %2297, i32 1)
  %2299 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2293, i32 1)
  %2300 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2299), !noalias !20
  %2301 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2300, i32 0)
  %2302 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2299), !noalias !20
  %2303 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2301, <8 x i32> %2302, i32 1)
  %2304 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2298, <16 x i32> %2303, i32 24)
  %2305 = bitcast <16 x i32> %2304 to <32 x bfloat>
  %2306 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2305, i32 0)
  %2307 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2246, i32 0)
  %2308 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2307, <16 x bfloat> %106, i32 1)
  %2309 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2262, i32 0)
  %2310 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2309, <16 x bfloat> %106, i32 1)
  %2311 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %2308, <32 x bfloat> %2310, i32 60)
  %2312 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %2311)
  %2313 = load <16 x bfloat>, ptr %2271, align 32, !tbaa !2
  %2314 = bitcast <8 x i32> %2274 to <16 x i16>
  %2315 = getelementptr bfloat, ptr %0, i20 864
  %2316 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %2313, i32 8)
  %2317 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2316, <16 x i32> %15, i32 2)
  %2318 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2317, i32 0)
  %2319 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %2314, i32 0, i32 0)
  %2320 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2319, i32 6, i32 1)
  %2321 = add <16 x i32> %2320, %31
  %2322 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2321, i32 0)
  %2323 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2322), !noalias !15
  %2324 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2323, i32 0)
  %2325 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2322), !noalias !15
  %2326 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2324, <8 x i32> %2325, i32 1)
  %2327 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2321, i32 1)
  %2328 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2327), !noalias !15
  %2329 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2328, i32 0)
  %2330 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2327), !noalias !15
  %2331 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2329, <8 x i32> %2330, i32 1)
  %2332 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2326, <16 x i32> %2331, i32 24)
  %2333 = bitcast <16 x i32> %2332 to <32 x bfloat>
  %2334 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2333, i32 0)
  %2335 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2319, i32 -2, i32 1)
  %2336 = and <16 x i32> %2335, %4
  %2337 = add <16 x i32> %2336, %52
  %2338 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2337, i32 0)
  %2339 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2338), !noalias !20
  %2340 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2339, i32 0)
  %2341 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2338), !noalias !20
  %2342 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2340, <8 x i32> %2341, i32 1)
  %2343 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2337, i32 1)
  %2344 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2343), !noalias !20
  %2345 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2344, i32 0)
  %2346 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2343), !noalias !20
  %2347 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2345, <8 x i32> %2346, i32 1)
  %2348 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2342, <16 x i32> %2347, i32 24)
  %2349 = bitcast <16 x i32> %2348 to <32 x bfloat>
  %2350 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2349, i32 0)
  %2351 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2290, i32 0)
  %2352 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2351, <16 x bfloat> %106, i32 1)
  %2353 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2306, i32 0)
  %2354 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2353, <16 x bfloat> %106, i32 1)
  %2355 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %2352, <32 x bfloat> %2354, i32 60)
  %2356 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %2355)
  %2357 = load <16 x bfloat>, ptr %2315, align 32, !tbaa !2
  %2358 = bitcast <8 x i32> %2318 to <16 x i16>
  %2359 = getelementptr bfloat, ptr %0, i20 880
  %2360 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %2357, i32 8)
  %2361 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2360, <16 x i32> %15, i32 2)
  %2362 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2361, i32 0)
  %2363 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %2358, i32 0, i32 0)
  %2364 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2363, i32 6, i32 1)
  %2365 = add <16 x i32> %2364, %31
  %2366 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2365, i32 0)
  %2367 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2366), !noalias !15
  %2368 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2367, i32 0)
  %2369 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2366), !noalias !15
  %2370 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2368, <8 x i32> %2369, i32 1)
  %2371 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2365, i32 1)
  %2372 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2371), !noalias !15
  %2373 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2372, i32 0)
  %2374 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2371), !noalias !15
  %2375 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2373, <8 x i32> %2374, i32 1)
  %2376 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2370, <16 x i32> %2375, i32 24)
  %2377 = bitcast <16 x i32> %2376 to <32 x bfloat>
  %2378 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2377, i32 0)
  %2379 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2363, i32 -2, i32 1)
  %2380 = and <16 x i32> %2379, %4
  %2381 = add <16 x i32> %2380, %52
  %2382 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2381, i32 0)
  %2383 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2382), !noalias !20
  %2384 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2383, i32 0)
  %2385 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2382), !noalias !20
  %2386 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2384, <8 x i32> %2385, i32 1)
  %2387 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2381, i32 1)
  %2388 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2387), !noalias !20
  %2389 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2388, i32 0)
  %2390 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2387), !noalias !20
  %2391 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2389, <8 x i32> %2390, i32 1)
  %2392 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2386, <16 x i32> %2391, i32 24)
  %2393 = bitcast <16 x i32> %2392 to <32 x bfloat>
  %2394 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2393, i32 0)
  %2395 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2334, i32 0)
  %2396 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2395, <16 x bfloat> %106, i32 1)
  %2397 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2350, i32 0)
  %2398 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2397, <16 x bfloat> %106, i32 1)
  %2399 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %2396, <32 x bfloat> %2398, i32 60)
  %2400 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %2399)
  %2401 = load <16 x bfloat>, ptr %2359, align 32, !tbaa !2
  %2402 = bitcast <8 x i32> %2362 to <16 x i16>
  %2403 = getelementptr bfloat, ptr %0, i20 896
  %2404 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %2401, i32 8)
  %2405 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2404, <16 x i32> %15, i32 2)
  %2406 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2405, i32 0)
  %2407 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %2402, i32 0, i32 0)
  %2408 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2407, i32 6, i32 1)
  %2409 = add <16 x i32> %2408, %31
  %2410 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2409, i32 0)
  %2411 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2410), !noalias !15
  %2412 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2411, i32 0)
  %2413 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2410), !noalias !15
  %2414 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2412, <8 x i32> %2413, i32 1)
  %2415 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2409, i32 1)
  %2416 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2415), !noalias !15
  %2417 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2416, i32 0)
  %2418 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2415), !noalias !15
  %2419 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2417, <8 x i32> %2418, i32 1)
  %2420 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2414, <16 x i32> %2419, i32 24)
  %2421 = bitcast <16 x i32> %2420 to <32 x bfloat>
  %2422 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2421, i32 0)
  %2423 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2407, i32 -2, i32 1)
  %2424 = and <16 x i32> %2423, %4
  %2425 = add <16 x i32> %2424, %52
  %2426 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2425, i32 0)
  %2427 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2426), !noalias !20
  %2428 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2427, i32 0)
  %2429 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2426), !noalias !20
  %2430 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2428, <8 x i32> %2429, i32 1)
  %2431 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2425, i32 1)
  %2432 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2431), !noalias !20
  %2433 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2432, i32 0)
  %2434 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2431), !noalias !20
  %2435 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2433, <8 x i32> %2434, i32 1)
  %2436 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2430, <16 x i32> %2435, i32 24)
  %2437 = bitcast <16 x i32> %2436 to <32 x bfloat>
  %2438 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2437, i32 0)
  %2439 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2378, i32 0)
  %2440 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2439, <16 x bfloat> %106, i32 1)
  %2441 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2394, i32 0)
  %2442 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2441, <16 x bfloat> %106, i32 1)
  %2443 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %2440, <32 x bfloat> %2442, i32 60)
  %2444 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %2443)
  %2445 = load <16 x bfloat>, ptr %2403, align 32, !tbaa !2
  %2446 = bitcast <8 x i32> %2406 to <16 x i16>
  %2447 = getelementptr bfloat, ptr %0, i20 912
  %2448 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %2445, i32 8)
  %2449 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2448, <16 x i32> %15, i32 2)
  %2450 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2449, i32 0)
  %2451 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %2446, i32 0, i32 0)
  %2452 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2451, i32 6, i32 1)
  %2453 = add <16 x i32> %2452, %31
  %2454 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2453, i32 0)
  %2455 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2454), !noalias !15
  %2456 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2455, i32 0)
  %2457 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2454), !noalias !15
  %2458 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2456, <8 x i32> %2457, i32 1)
  %2459 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2453, i32 1)
  %2460 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2459), !noalias !15
  %2461 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2460, i32 0)
  %2462 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2459), !noalias !15
  %2463 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2461, <8 x i32> %2462, i32 1)
  %2464 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2458, <16 x i32> %2463, i32 24)
  %2465 = bitcast <16 x i32> %2464 to <32 x bfloat>
  %2466 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2465, i32 0)
  %2467 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2451, i32 -2, i32 1)
  %2468 = and <16 x i32> %2467, %4
  %2469 = add <16 x i32> %2468, %52
  %2470 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2469, i32 0)
  %2471 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2470), !noalias !20
  %2472 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2471, i32 0)
  %2473 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2470), !noalias !20
  %2474 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2472, <8 x i32> %2473, i32 1)
  %2475 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2469, i32 1)
  %2476 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2475), !noalias !20
  %2477 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2476, i32 0)
  %2478 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2475), !noalias !20
  %2479 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2477, <8 x i32> %2478, i32 1)
  %2480 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2474, <16 x i32> %2479, i32 24)
  %2481 = bitcast <16 x i32> %2480 to <32 x bfloat>
  %2482 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2481, i32 0)
  %2483 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2422, i32 0)
  %2484 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2483, <16 x bfloat> %106, i32 1)
  %2485 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2438, i32 0)
  %2486 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2485, <16 x bfloat> %106, i32 1)
  %2487 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %2484, <32 x bfloat> %2486, i32 60)
  %2488 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %2487)
  %2489 = load <16 x bfloat>, ptr %2447, align 32, !tbaa !2
  %2490 = bitcast <8 x i32> %2450 to <16 x i16>
  %2491 = getelementptr bfloat, ptr %0, i20 928
  %2492 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %2489, i32 8)
  %2493 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2492, <16 x i32> %15, i32 2)
  %2494 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2493, i32 0)
  %2495 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %2490, i32 0, i32 0)
  %2496 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2495, i32 6, i32 1)
  %2497 = add <16 x i32> %2496, %31
  %2498 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2497, i32 0)
  %2499 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2498), !noalias !15
  %2500 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2499, i32 0)
  %2501 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2498), !noalias !15
  %2502 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2500, <8 x i32> %2501, i32 1)
  %2503 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2497, i32 1)
  %2504 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2503), !noalias !15
  %2505 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2504, i32 0)
  %2506 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2503), !noalias !15
  %2507 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2505, <8 x i32> %2506, i32 1)
  %2508 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2502, <16 x i32> %2507, i32 24)
  %2509 = bitcast <16 x i32> %2508 to <32 x bfloat>
  %2510 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2509, i32 0)
  %2511 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2495, i32 -2, i32 1)
  %2512 = and <16 x i32> %2511, %4
  %2513 = add <16 x i32> %2512, %52
  %2514 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2513, i32 0)
  %2515 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2514), !noalias !20
  %2516 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2515, i32 0)
  %2517 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2514), !noalias !20
  %2518 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2516, <8 x i32> %2517, i32 1)
  %2519 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2513, i32 1)
  %2520 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2519), !noalias !20
  %2521 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2520, i32 0)
  %2522 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2519), !noalias !20
  %2523 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2521, <8 x i32> %2522, i32 1)
  %2524 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2518, <16 x i32> %2523, i32 24)
  %2525 = bitcast <16 x i32> %2524 to <32 x bfloat>
  %2526 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2525, i32 0)
  %2527 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2466, i32 0)
  %2528 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2527, <16 x bfloat> %106, i32 1)
  %2529 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2482, i32 0)
  %2530 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2529, <16 x bfloat> %106, i32 1)
  %2531 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %2528, <32 x bfloat> %2530, i32 60)
  %2532 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %2531)
  %2533 = load <16 x bfloat>, ptr %2491, align 32, !tbaa !2
  %2534 = bitcast <8 x i32> %2494 to <16 x i16>
  %2535 = getelementptr bfloat, ptr %0, i20 944
  %2536 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %2533, i32 8)
  %2537 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2536, <16 x i32> %15, i32 2)
  %2538 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2537, i32 0)
  %2539 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %2534, i32 0, i32 0)
  %2540 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2539, i32 6, i32 1)
  %2541 = add <16 x i32> %2540, %31
  %2542 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2541, i32 0)
  %2543 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2542), !noalias !15
  %2544 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2543, i32 0)
  %2545 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2542), !noalias !15
  %2546 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2544, <8 x i32> %2545, i32 1)
  %2547 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2541, i32 1)
  %2548 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2547), !noalias !15
  %2549 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2548, i32 0)
  %2550 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2547), !noalias !15
  %2551 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2549, <8 x i32> %2550, i32 1)
  %2552 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2546, <16 x i32> %2551, i32 24)
  %2553 = bitcast <16 x i32> %2552 to <32 x bfloat>
  %2554 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2553, i32 0)
  %2555 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2539, i32 -2, i32 1)
  %2556 = and <16 x i32> %2555, %4
  %2557 = add <16 x i32> %2556, %52
  %2558 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2557, i32 0)
  %2559 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2558), !noalias !20
  %2560 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2559, i32 0)
  %2561 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2558), !noalias !20
  %2562 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2560, <8 x i32> %2561, i32 1)
  %2563 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2557, i32 1)
  %2564 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2563), !noalias !20
  %2565 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2564, i32 0)
  %2566 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2563), !noalias !20
  %2567 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2565, <8 x i32> %2566, i32 1)
  %2568 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2562, <16 x i32> %2567, i32 24)
  %2569 = bitcast <16 x i32> %2568 to <32 x bfloat>
  %2570 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2569, i32 0)
  %2571 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2510, i32 0)
  %2572 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2571, <16 x bfloat> %106, i32 1)
  %2573 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2526, i32 0)
  %2574 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2573, <16 x bfloat> %106, i32 1)
  %2575 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %2572, <32 x bfloat> %2574, i32 60)
  %2576 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %2575)
  %2577 = load <16 x bfloat>, ptr %2535, align 32, !tbaa !2
  %2578 = bitcast <8 x i32> %2538 to <16 x i16>
  %2579 = getelementptr bfloat, ptr %0, i20 960
  %2580 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %2577, i32 8)
  %2581 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2580, <16 x i32> %15, i32 2)
  %2582 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2581, i32 0)
  %2583 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %2578, i32 0, i32 0)
  %2584 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2583, i32 6, i32 1)
  %2585 = add <16 x i32> %2584, %31
  %2586 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2585, i32 0)
  %2587 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2586), !noalias !15
  %2588 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2587, i32 0)
  %2589 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2586), !noalias !15
  %2590 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2588, <8 x i32> %2589, i32 1)
  %2591 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2585, i32 1)
  %2592 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2591), !noalias !15
  %2593 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2592, i32 0)
  %2594 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2591), !noalias !15
  %2595 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2593, <8 x i32> %2594, i32 1)
  %2596 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2590, <16 x i32> %2595, i32 24)
  %2597 = bitcast <16 x i32> %2596 to <32 x bfloat>
  %2598 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2597, i32 0)
  %2599 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2583, i32 -2, i32 1)
  %2600 = and <16 x i32> %2599, %4
  %2601 = add <16 x i32> %2600, %52
  %2602 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2601, i32 0)
  %2603 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2602), !noalias !20
  %2604 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2603, i32 0)
  %2605 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2602), !noalias !20
  %2606 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2604, <8 x i32> %2605, i32 1)
  %2607 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2601, i32 1)
  %2608 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2607), !noalias !20
  %2609 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2608, i32 0)
  %2610 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2607), !noalias !20
  %2611 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2609, <8 x i32> %2610, i32 1)
  %2612 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2606, <16 x i32> %2611, i32 24)
  %2613 = bitcast <16 x i32> %2612 to <32 x bfloat>
  %2614 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2613, i32 0)
  %2615 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2554, i32 0)
  %2616 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2615, <16 x bfloat> %106, i32 1)
  %2617 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2570, i32 0)
  %2618 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2617, <16 x bfloat> %106, i32 1)
  %2619 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %2616, <32 x bfloat> %2618, i32 60)
  %2620 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %2619)
  %2621 = load <16 x bfloat>, ptr %2579, align 32, !tbaa !2
  %2622 = bitcast <8 x i32> %2582 to <16 x i16>
  %2623 = getelementptr bfloat, ptr %0, i20 976
  %2624 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %2621, i32 8)
  %2625 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2624, <16 x i32> %15, i32 2)
  %2626 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2625, i32 0)
  %2627 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %2622, i32 0, i32 0)
  %2628 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2627, i32 6, i32 1)
  %2629 = add <16 x i32> %2628, %31
  %2630 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2629, i32 0)
  %2631 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2630), !noalias !15
  %2632 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2631, i32 0)
  %2633 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2630), !noalias !15
  %2634 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2632, <8 x i32> %2633, i32 1)
  %2635 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2629, i32 1)
  %2636 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2635), !noalias !15
  %2637 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2636, i32 0)
  %2638 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2635), !noalias !15
  %2639 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2637, <8 x i32> %2638, i32 1)
  %2640 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2634, <16 x i32> %2639, i32 24)
  %2641 = bitcast <16 x i32> %2640 to <32 x bfloat>
  %2642 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2641, i32 0)
  %2643 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2627, i32 -2, i32 1)
  %2644 = and <16 x i32> %2643, %4
  %2645 = add <16 x i32> %2644, %52
  %2646 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2645, i32 0)
  %2647 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2646), !noalias !20
  %2648 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2647, i32 0)
  %2649 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2646), !noalias !20
  %2650 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2648, <8 x i32> %2649, i32 1)
  %2651 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2645, i32 1)
  %2652 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2651), !noalias !20
  %2653 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2652, i32 0)
  %2654 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2651), !noalias !20
  %2655 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2653, <8 x i32> %2654, i32 1)
  %2656 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2650, <16 x i32> %2655, i32 24)
  %2657 = bitcast <16 x i32> %2656 to <32 x bfloat>
  %2658 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2657, i32 0)
  %2659 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2598, i32 0)
  %2660 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2659, <16 x bfloat> %106, i32 1)
  %2661 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2614, i32 0)
  %2662 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2661, <16 x bfloat> %106, i32 1)
  %2663 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %2660, <32 x bfloat> %2662, i32 60)
  %2664 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %2663)
  %2665 = load <16 x bfloat>, ptr %2623, align 32, !tbaa !2
  %2666 = bitcast <8 x i32> %2626 to <16 x i16>
  %2667 = getelementptr bfloat, ptr %0, i20 992
  %2668 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %2665, i32 8)
  %2669 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2668, <16 x i32> %15, i32 2)
  %2670 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2669, i32 0)
  %2671 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %2666, i32 0, i32 0)
  %2672 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2671, i32 6, i32 1)
  %2673 = add <16 x i32> %2672, %31
  %2674 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2673, i32 0)
  %2675 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2674), !noalias !15
  %2676 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2675, i32 0)
  %2677 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2674), !noalias !15
  %2678 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2676, <8 x i32> %2677, i32 1)
  %2679 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2673, i32 1)
  %2680 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2679), !noalias !15
  %2681 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2680, i32 0)
  %2682 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2679), !noalias !15
  %2683 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2681, <8 x i32> %2682, i32 1)
  %2684 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2678, <16 x i32> %2683, i32 24)
  %2685 = bitcast <16 x i32> %2684 to <32 x bfloat>
  %2686 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2685, i32 0)
  %2687 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2671, i32 -2, i32 1)
  %2688 = and <16 x i32> %2687, %4
  %2689 = add <16 x i32> %2688, %52
  %2690 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2689, i32 0)
  %2691 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2690), !noalias !20
  %2692 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2691, i32 0)
  %2693 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2690), !noalias !20
  %2694 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2692, <8 x i32> %2693, i32 1)
  %2695 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2689, i32 1)
  %2696 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2695), !noalias !20
  %2697 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2696, i32 0)
  %2698 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2695), !noalias !20
  %2699 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2697, <8 x i32> %2698, i32 1)
  %2700 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2694, <16 x i32> %2699, i32 24)
  %2701 = bitcast <16 x i32> %2700 to <32 x bfloat>
  %2702 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2701, i32 0)
  %2703 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2642, i32 0)
  %2704 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2703, <16 x bfloat> %106, i32 1)
  %2705 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2658, i32 0)
  %2706 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2705, <16 x bfloat> %106, i32 1)
  %2707 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %2704, <32 x bfloat> %2706, i32 60)
  %2708 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %2707)
  %2709 = load <16 x bfloat>, ptr %2667, align 32, !tbaa !2
  %2710 = bitcast <8 x i32> %2670 to <16 x i16>
  %2711 = getelementptr bfloat, ptr %0, i20 1008
  %2712 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %2709, i32 8)
  %2713 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2712, <16 x i32> %15, i32 2)
  %2714 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2713, i32 0)
  %2715 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %2710, i32 0, i32 0)
  %2716 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2715, i32 6, i32 1)
  %2717 = add <16 x i32> %2716, %31
  %2718 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2717, i32 0)
  %2719 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2718), !noalias !15
  %2720 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2719, i32 0)
  %2721 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2718), !noalias !15
  %2722 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2720, <8 x i32> %2721, i32 1)
  %2723 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2717, i32 1)
  %2724 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2723), !noalias !15
  %2725 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2724, i32 0)
  %2726 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2723), !noalias !15
  %2727 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2725, <8 x i32> %2726, i32 1)
  %2728 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2722, <16 x i32> %2727, i32 24)
  %2729 = bitcast <16 x i32> %2728 to <32 x bfloat>
  %2730 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2729, i32 0)
  %2731 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2715, i32 -2, i32 1)
  %2732 = and <16 x i32> %2731, %4
  %2733 = add <16 x i32> %2732, %52
  %2734 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2733, i32 0)
  %2735 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2734), !noalias !20
  %2736 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2735, i32 0)
  %2737 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2734), !noalias !20
  %2738 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2736, <8 x i32> %2737, i32 1)
  %2739 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2733, i32 1)
  %2740 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2739), !noalias !20
  %2741 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2740, i32 0)
  %2742 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2739), !noalias !20
  %2743 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2741, <8 x i32> %2742, i32 1)
  %2744 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2738, <16 x i32> %2743, i32 24)
  %2745 = bitcast <16 x i32> %2744 to <32 x bfloat>
  %2746 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2745, i32 0)
  %2747 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2686, i32 0)
  %2748 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2747, <16 x bfloat> %106, i32 1)
  %2749 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2702, i32 0)
  %2750 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2749, <16 x bfloat> %106, i32 1)
  %2751 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %2748, <32 x bfloat> %2750, i32 60)
  %2752 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %2751)
  %2753 = load <16 x bfloat>, ptr %2711, align 32, !tbaa !2
  %2754 = bitcast <8 x i32> %2714 to <16 x i16>
  %2755 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %2753, i32 8)
  %2756 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2755, <16 x i32> %15, i32 2)
  %2757 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2756, i32 0)
  %2758 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %2754, i32 0, i32 0)
  %2759 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2758, i32 6, i32 1)
  %2760 = add <16 x i32> %2759, %31
  %2761 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2760, i32 0)
  %2762 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2761), !noalias !25
  %2763 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2762, i32 0)
  %2764 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2761), !noalias !25
  %2765 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2763, <8 x i32> %2764, i32 1)
  %2766 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2760, i32 1)
  %2767 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2766), !noalias !25
  %2768 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2767, i32 0)
  %2769 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2766), !noalias !25
  %2770 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2768, <8 x i32> %2769, i32 1)
  %2771 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2765, <16 x i32> %2770, i32 24)
  %2772 = bitcast <16 x i32> %2771 to <32 x bfloat>
  %2773 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2772, i32 0)
  %2774 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2758, i32 -2, i32 1)
  %2775 = and <16 x i32> %2774, %4
  %2776 = add <16 x i32> %2775, %52
  %2777 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2776, i32 0)
  %2778 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2777), !noalias !30
  %2779 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2778, i32 0)
  %2780 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2777), !noalias !30
  %2781 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2779, <8 x i32> %2780, i32 1)
  %2782 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2776, i32 1)
  %2783 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2782), !noalias !30
  %2784 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2783, i32 0)
  %2785 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2782), !noalias !30
  %2786 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2784, <8 x i32> %2785, i32 1)
  %2787 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2781, <16 x i32> %2786, i32 24)
  %2788 = bitcast <16 x i32> %2787 to <32 x bfloat>
  %2789 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2788, i32 0)
  %2790 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2730, i32 0)
  %2791 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2790, <16 x bfloat> %106, i32 1)
  %2792 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2746, i32 0)
  %2793 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2792, <16 x bfloat> %106, i32 1)
  %2794 = tail call noundef <8 x i64> @llvm.aie2.bf.mac16.conf(<32 x bfloat> %2791, <32 x bfloat> %2793, <8 x i64> %2751, i32 60)
  %2795 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %2794)
  %2796 = getelementptr inbounds bfloat, ptr %1, i20 976
  store <16 x bfloat> %2795, ptr %2796, align 32, !tbaa !2
  %2797 = bitcast <8 x i32> %2757 to <16 x i16>
  %2798 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %2797, i32 0, i32 0)
  %2799 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2798, i32 6, i32 1)
  %2800 = add <16 x i32> %2799, %31
  %2801 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2800, i32 0)
  %2802 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2801), !noalias !35
  %2803 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2802, i32 0)
  %2804 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2801), !noalias !35
  %2805 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2803, <8 x i32> %2804, i32 1)
  %2806 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2800, i32 1)
  %2807 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2806), !noalias !35
  %2808 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2807, i32 0)
  %2809 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2806), !noalias !35
  %2810 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2808, <8 x i32> %2809, i32 1)
  %2811 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2805, <16 x i32> %2810, i32 24)
  %2812 = bitcast <16 x i32> %2811 to <32 x bfloat>
  %2813 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2812, i32 0)
  %2814 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2798, i32 -2, i32 1)
  %2815 = and <16 x i32> %2814, %4
  %2816 = add <16 x i32> %2815, %52
  %2817 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2816, i32 0)
  %2818 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2817), !noalias !40
  %2819 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2818, i32 0)
  %2820 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2817), !noalias !40
  %2821 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2819, <8 x i32> %2820, i32 1)
  %2822 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2816, i32 1)
  %2823 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2822), !noalias !40
  %2824 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2823, i32 0)
  %2825 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2822), !noalias !40
  %2826 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2824, <8 x i32> %2825, i32 1)
  %2827 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2821, <16 x i32> %2826, i32 24)
  %2828 = bitcast <16 x i32> %2827 to <32 x bfloat>
  %2829 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2828, i32 0)
  %2830 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2773, i32 0)
  %2831 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2830, <16 x bfloat> %106, i32 1)
  %2832 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2789, i32 0)
  %2833 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2832, <16 x bfloat> %106, i32 1)
  %2834 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %2831, <32 x bfloat> %2833, i32 60)
  %2835 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %2834)
  %2836 = getelementptr inbounds bfloat, ptr %1, i20 992
  store <16 x bfloat> %2835, ptr %2836, align 32, !tbaa !2
  %2837 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2813, i32 0)
  %2838 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2837, <16 x bfloat> %106, i32 1)
  %2839 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2829, i32 0)
  %2840 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2839, <16 x bfloat> %106, i32 1)
  %2841 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %2838, <32 x bfloat> %2840, i32 60)
  %2842 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %2841)
  %2843 = getelementptr inbounds bfloat, ptr %1, i20 1008
  store <16 x bfloat> %2842, ptr %2843, align 32, !tbaa !2
  ret void
}

; Function Attrs: nofree nounwind memory(inaccessiblemem: read)
declare <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat>, i32) #1

; Function Attrs: nofree nosync nounwind memory(none)
declare <8 x i64> @llvm.aie2.v16accfloat() #2

; Function Attrs: nofree nosync nounwind memory(none)
declare <32 x bfloat> @llvm.aie2.v32bfloat16() #2

; Function Attrs: nofree nosync nounwind memory(none)
declare <32 x bfloat> @llvm.aie2.vbroadcast16.bf512(bfloat) #2

; Function Attrs: nofree nosync nounwind memory(none)
declare <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat>, i32) #2

; Function Attrs: nofree nosync nounwind memory(none)
declare <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat>, i32) #2

; Function Attrs: nofree nosync nounwind memory(none)
declare <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat>, <16 x bfloat>, i32) #2

; Function Attrs: nofree nounwind memory(inaccessiblemem: read)
declare <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat>, <32 x bfloat>, i32) #1

; Function Attrs: nofree nounwind memory(inaccessiblemem: read)
declare <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64>) #1

; Function Attrs: nofree nounwind memory(inaccessiblemem: read)
declare <8 x i64> @llvm.aie2.bf.mac16.conf(<32 x bfloat>, <32 x bfloat>, <8 x i64>, i32) #1

; Function Attrs: nofree nosync nounwind memory(none)
declare <16 x i32> @llvm.aie2.v16int32() #2

; Function Attrs: nofree nosync nounwind memory(none)
declare <16 x i32> @llvm.aie2.vbroadcast32.I512(i32) #2

; Function Attrs: nofree nosync nounwind memory(none)
declare <16 x bfloat> @llvm.aie2.v16bfloat16() #2

; Function Attrs: nofree nounwind memory(inaccessiblemem: read)
declare <8 x i64> @llvm.aie2.clr16f.conf() #1

; Function Attrs: nofree nosync nounwind memory(none)
declare <16 x i16> @llvm.aie2.v16int16() #2

; Function Attrs: nofree nosync nounwind memory(none)
declare <16 x i32> @llvm.aie2.vshuffle(<16 x i32>, <16 x i32>, i32) #2

; Function Attrs: nofree nosync nounwind memory(none)
declare <32 x i16> @llvm.aie2.v32int16() #2

; Function Attrs: nofree nosync nounwind memory(none)
declare <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32>, i32) #2

; Function Attrs: nofree nosync nounwind memory(none)
declare <16 x i64> @llvm.aie2.v16acc64() #2

; Function Attrs: nofree nounwind memory(inaccessiblemem: read)
declare <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16>, i32, i32) #1

; Function Attrs: nofree nounwind memory(inaccessiblemem: read)
declare <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64>, i32, i32) #1

; Function Attrs: nofree nosync nounwind memory(none)
declare <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32>, <8 x i32>, i32) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare <16 x i32> @llvm.aie2.vsel32(<16 x i32>, <16 x i32>, i32) #3

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(read)
declare <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32>) #4

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(read)
declare <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32>) #4

attributes #0 = { mustprogress nofree nounwind memory(read, argmem: readwrite) "no-trapping-math"="true" "stack-protector-buffer-size"="8" }
attributes #1 = { nofree nounwind memory(inaccessiblemem: read) }
attributes #2 = { nofree nosync nounwind memory(none) }
attributes #3 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #4 = { mustprogress nocallback nofree nosync nounwind willreturn memory(read) }

!llvm.linker.options = !{}
!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 18.0.0git"}
!2 = !{!3, !3, i64 0}
!3 = !{!"omnipotent char", !4, i64 0}
!4 = !{!"Simple C++ TBAA"}
!5 = !{!6, !8}
!6 = distinct !{!6, !7, !"_ZN3aie6detail15parallel_lookupItNS0_3lutILj4Eu6__bf16u6__bf16EELNS0_14lut_oor_policyE1EE5fetchINS_6vectorItLj16EEELj16EQaaaaleclsrTL0__4sizeELi32EleTL0_0_clsrS9_4sizeEleTL0_0_sr20native_vector_lengthIT0_EE5valueEENS7_Iu6__bf16XT0_EEERKT_: argument 0"}
!7 = distinct !{!7, !"_ZN3aie6detail15parallel_lookupItNS0_3lutILj4Eu6__bf16u6__bf16EELNS0_14lut_oor_policyE1EE5fetchINS_6vectorItLj16EEELj16EQaaaaleclsrTL0__4sizeELi32EleTL0_0_clsrS9_4sizeEleTL0_0_sr20native_vector_lengthIT0_EE5valueEENS7_Iu6__bf16XT0_EEERKT_"}
!8 = distinct !{!8, !9, !"_ZN3aie15parallel_lookupItNS_3lutILj4Eu6__bf16u6__bf16EELNS_6detail14lut_oor_policyE1EE5fetchITkNS_6VectorENS_6vectorItLj16EEELj16EEENS7_Iu6__bf16XT0_EEERKT_: argument 0"}
!9 = distinct !{!9, !"_ZN3aie15parallel_lookupItNS_3lutILj4Eu6__bf16u6__bf16EELNS_6detail14lut_oor_policyE1EE5fetchITkNS_6VectorENS_6vectorItLj16EEELj16EEENS7_Iu6__bf16XT0_EEERKT_"}
!10 = !{!11, !13}
!11 = distinct !{!11, !12, !"_ZN3aie6detail15parallel_lookupItNS0_3lutILj4Eu6__bf16u6__bf16EELNS0_14lut_oor_policyE1EE5fetchINS_6vectorItLj16EEELj16EQaaaaleclsrTL0__4sizeELi32EleTL0_0_clsrS9_4sizeEleTL0_0_sr20native_vector_lengthIT0_EE5valueEENS7_Iu6__bf16XT0_EEERKT_: argument 0"}
!12 = distinct !{!12, !"_ZN3aie6detail15parallel_lookupItNS0_3lutILj4Eu6__bf16u6__bf16EELNS0_14lut_oor_policyE1EE5fetchINS_6vectorItLj16EEELj16EQaaaaleclsrTL0__4sizeELi32EleTL0_0_clsrS9_4sizeEleTL0_0_sr20native_vector_lengthIT0_EE5valueEENS7_Iu6__bf16XT0_EEERKT_"}
!13 = distinct !{!13, !14, !"_ZN3aie15parallel_lookupItNS_3lutILj4Eu6__bf16u6__bf16EELNS_6detail14lut_oor_policyE1EE5fetchITkNS_6VectorENS_6vectorItLj16EEELj16EEENS7_Iu6__bf16XT0_EEERKT_: argument 0"}
!14 = distinct !{!14, !"_ZN3aie15parallel_lookupItNS_3lutILj4Eu6__bf16u6__bf16EELNS_6detail14lut_oor_policyE1EE5fetchITkNS_6VectorENS_6vectorItLj16EEELj16EEENS7_Iu6__bf16XT0_EEERKT_"}
!15 = !{!16, !18}
!16 = distinct !{!16, !17, !"_ZN3aie6detail15parallel_lookupItNS0_3lutILj4Eu6__bf16u6__bf16EELNS0_14lut_oor_policyE1EE5fetchINS_6vectorItLj16EEELj16EQaaaaleclsrTL0__4sizeELi32EleTL0_0_clsrS9_4sizeEleTL0_0_sr20native_vector_lengthIT0_EE5valueEENS7_Iu6__bf16XT0_EEERKT_: argument 0"}
!17 = distinct !{!17, !"_ZN3aie6detail15parallel_lookupItNS0_3lutILj4Eu6__bf16u6__bf16EELNS0_14lut_oor_policyE1EE5fetchINS_6vectorItLj16EEELj16EQaaaaleclsrTL0__4sizeELi32EleTL0_0_clsrS9_4sizeEleTL0_0_sr20native_vector_lengthIT0_EE5valueEENS7_Iu6__bf16XT0_EEERKT_"}
!18 = distinct !{!18, !19, !"_ZN3aie15parallel_lookupItNS_3lutILj4Eu6__bf16u6__bf16EELNS_6detail14lut_oor_policyE1EE5fetchITkNS_6VectorENS_6vectorItLj16EEELj16EEENS7_Iu6__bf16XT0_EEERKT_: argument 0"}
!19 = distinct !{!19, !"_ZN3aie15parallel_lookupItNS_3lutILj4Eu6__bf16u6__bf16EELNS_6detail14lut_oor_policyE1EE5fetchITkNS_6VectorENS_6vectorItLj16EEELj16EEENS7_Iu6__bf16XT0_EEERKT_"}
!20 = !{!21, !23}
!21 = distinct !{!21, !22, !"_ZN3aie6detail15parallel_lookupItNS0_3lutILj4Eu6__bf16u6__bf16EELNS0_14lut_oor_policyE1EE5fetchINS_6vectorItLj16EEELj16EQaaaaleclsrTL0__4sizeELi32EleTL0_0_clsrS9_4sizeEleTL0_0_sr20native_vector_lengthIT0_EE5valueEENS7_Iu6__bf16XT0_EEERKT_: argument 0"}
!22 = distinct !{!22, !"_ZN3aie6detail15parallel_lookupItNS0_3lutILj4Eu6__bf16u6__bf16EELNS0_14lut_oor_policyE1EE5fetchINS_6vectorItLj16EEELj16EQaaaaleclsrTL0__4sizeELi32EleTL0_0_clsrS9_4sizeEleTL0_0_sr20native_vector_lengthIT0_EE5valueEENS7_Iu6__bf16XT0_EEERKT_"}
!23 = distinct !{!23, !24, !"_ZN3aie15parallel_lookupItNS_3lutILj4Eu6__bf16u6__bf16EELNS_6detail14lut_oor_policyE1EE5fetchITkNS_6VectorENS_6vectorItLj16EEELj16EEENS7_Iu6__bf16XT0_EEERKT_: argument 0"}
!24 = distinct !{!24, !"_ZN3aie15parallel_lookupItNS_3lutILj4Eu6__bf16u6__bf16EELNS_6detail14lut_oor_policyE1EE5fetchITkNS_6VectorENS_6vectorItLj16EEELj16EEENS7_Iu6__bf16XT0_EEERKT_"}
!25 = !{!26, !28}
!26 = distinct !{!26, !27, !"_ZN3aie6detail15parallel_lookupItNS0_3lutILj4Eu6__bf16u6__bf16EELNS0_14lut_oor_policyE1EE5fetchINS_6vectorItLj16EEELj16EQaaaaleclsrTL0__4sizeELi32EleTL0_0_clsrS9_4sizeEleTL0_0_sr20native_vector_lengthIT0_EE5valueEENS7_Iu6__bf16XT0_EEERKT_: argument 0"}
!27 = distinct !{!27, !"_ZN3aie6detail15parallel_lookupItNS0_3lutILj4Eu6__bf16u6__bf16EELNS0_14lut_oor_policyE1EE5fetchINS_6vectorItLj16EEELj16EQaaaaleclsrTL0__4sizeELi32EleTL0_0_clsrS9_4sizeEleTL0_0_sr20native_vector_lengthIT0_EE5valueEENS7_Iu6__bf16XT0_EEERKT_"}
!28 = distinct !{!28, !29, !"_ZN3aie15parallel_lookupItNS_3lutILj4Eu6__bf16u6__bf16EELNS_6detail14lut_oor_policyE1EE5fetchITkNS_6VectorENS_6vectorItLj16EEELj16EEENS7_Iu6__bf16XT0_EEERKT_: argument 0"}
!29 = distinct !{!29, !"_ZN3aie15parallel_lookupItNS_3lutILj4Eu6__bf16u6__bf16EELNS_6detail14lut_oor_policyE1EE5fetchITkNS_6VectorENS_6vectorItLj16EEELj16EEENS7_Iu6__bf16XT0_EEERKT_"}
!30 = !{!31, !33}
!31 = distinct !{!31, !32, !"_ZN3aie6detail15parallel_lookupItNS0_3lutILj4Eu6__bf16u6__bf16EELNS0_14lut_oor_policyE1EE5fetchINS_6vectorItLj16EEELj16EQaaaaleclsrTL0__4sizeELi32EleTL0_0_clsrS9_4sizeEleTL0_0_sr20native_vector_lengthIT0_EE5valueEENS7_Iu6__bf16XT0_EEERKT_: argument 0"}
!32 = distinct !{!32, !"_ZN3aie6detail15parallel_lookupItNS0_3lutILj4Eu6__bf16u6__bf16EELNS0_14lut_oor_policyE1EE5fetchINS_6vectorItLj16EEELj16EQaaaaleclsrTL0__4sizeELi32EleTL0_0_clsrS9_4sizeEleTL0_0_sr20native_vector_lengthIT0_EE5valueEENS7_Iu6__bf16XT0_EEERKT_"}
!33 = distinct !{!33, !34, !"_ZN3aie15parallel_lookupItNS_3lutILj4Eu6__bf16u6__bf16EELNS_6detail14lut_oor_policyE1EE5fetchITkNS_6VectorENS_6vectorItLj16EEELj16EEENS7_Iu6__bf16XT0_EEERKT_: argument 0"}
!34 = distinct !{!34, !"_ZN3aie15parallel_lookupItNS_3lutILj4Eu6__bf16u6__bf16EELNS_6detail14lut_oor_policyE1EE5fetchITkNS_6VectorENS_6vectorItLj16EEELj16EEENS7_Iu6__bf16XT0_EEERKT_"}
!35 = !{!36, !38}
!36 = distinct !{!36, !37, !"_ZN3aie6detail15parallel_lookupItNS0_3lutILj4Eu6__bf16u6__bf16EELNS0_14lut_oor_policyE1EE5fetchINS_6vectorItLj16EEELj16EQaaaaleclsrTL0__4sizeELi32EleTL0_0_clsrS9_4sizeEleTL0_0_sr20native_vector_lengthIT0_EE5valueEENS7_Iu6__bf16XT0_EEERKT_: argument 0"}
!37 = distinct !{!37, !"_ZN3aie6detail15parallel_lookupItNS0_3lutILj4Eu6__bf16u6__bf16EELNS0_14lut_oor_policyE1EE5fetchINS_6vectorItLj16EEELj16EQaaaaleclsrTL0__4sizeELi32EleTL0_0_clsrS9_4sizeEleTL0_0_sr20native_vector_lengthIT0_EE5valueEENS7_Iu6__bf16XT0_EEERKT_"}
!38 = distinct !{!38, !39, !"_ZN3aie15parallel_lookupItNS_3lutILj4Eu6__bf16u6__bf16EELNS_6detail14lut_oor_policyE1EE5fetchITkNS_6VectorENS_6vectorItLj16EEELj16EEENS7_Iu6__bf16XT0_EEERKT_: argument 0"}
!39 = distinct !{!39, !"_ZN3aie15parallel_lookupItNS_3lutILj4Eu6__bf16u6__bf16EELNS_6detail14lut_oor_policyE1EE5fetchITkNS_6VectorENS_6vectorItLj16EEELj16EEENS7_Iu6__bf16XT0_EEERKT_"}
!40 = !{!41, !43}
!41 = distinct !{!41, !42, !"_ZN3aie6detail15parallel_lookupItNS0_3lutILj4Eu6__bf16u6__bf16EELNS0_14lut_oor_policyE1EE5fetchINS_6vectorItLj16EEELj16EQaaaaleclsrTL0__4sizeELi32EleTL0_0_clsrS9_4sizeEleTL0_0_sr20native_vector_lengthIT0_EE5valueEENS7_Iu6__bf16XT0_EEERKT_: argument 0"}
!42 = distinct !{!42, !"_ZN3aie6detail15parallel_lookupItNS0_3lutILj4Eu6__bf16u6__bf16EELNS0_14lut_oor_policyE1EE5fetchINS_6vectorItLj16EEELj16EQaaaaleclsrTL0__4sizeELi32EleTL0_0_clsrS9_4sizeEleTL0_0_sr20native_vector_lengthIT0_EE5valueEENS7_Iu6__bf16XT0_EEERKT_"}
!43 = distinct !{!43, !44, !"_ZN3aie15parallel_lookupItNS_3lutILj4Eu6__bf16u6__bf16EELNS_6detail14lut_oor_policyE1EE5fetchITkNS_6VectorENS_6vectorItLj16EEELj16EEENS7_Iu6__bf16XT0_EEERKT_: argument 0"}
!44 = distinct !{!44, !"_ZN3aie15parallel_lookupItNS_3lutILj4Eu6__bf16u6__bf16EELNS_6detail14lut_oor_policyE1EE5fetchITkNS_6VectorENS_6vectorItLj16EEELj16EEENS7_Iu6__bf16XT0_EEERKT_"}
