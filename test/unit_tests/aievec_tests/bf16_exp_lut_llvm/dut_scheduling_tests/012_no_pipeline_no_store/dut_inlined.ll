; ModuleID = 'dut_inlined.cc'
source_filename = "dut_inlined.cc"
target datalayout = "e-m:e-p:20:32-i1:8:32-i8:8:32-i16:16:32-i32:32:32-f32:32:32-i64:32-f64:32-a:0:32-n32"
target triple = "aie2"

@_ZL11exp_ilut_ab = internal constant [512 x i16] [i16 16256, i16 16430, i16 16620, i16 16801, i16 16986, i16 17172, i16 17354, i16 17545, i16 16256, i16 16430, i16 16620, i16 16801, i16 16986, i16 17172, i16 17354, i16 17545, i16 17722, i16 17917, i16 18092, i16 18282, i16 18463, i16 18648, i16 18835, i16 19016, i16 17722, i16 17917, i16 18092, i16 18282, i16 18463, i16 18648, i16 18835, i16 19016, i16 19208, i16 19384, i16 19578, i16 19754, i16 19943, i16 20125, i16 20310, i16 20497, i16 19208, i16 19384, i16 19578, i16 19754, i16 19943, i16 20125, i16 20310, i16 20497, i16 20677, i16 20870, i16 21046, i16 21240, i16 21416, i16 21605, i16 21788, i16 21971, i16 20677, i16 20870, i16 21046, i16 21240, i16 21416, i16 21605, i16 21788, i16 21971, i16 22160, i16 22339, i16 22533, i16 22708, i16 22901, i16 23079, i16 23266, i16 23450, i16 22160, i16 22339, i16 22533, i16 22708, i16 22901, i16 23079, i16 23266, i16 23450, i16 23633, i16 23822, i16 24001, i16 24195, i16 24370, i16 24562, i16 24741, i16 24928, i16 23633, i16 23822, i16 24001, i16 24195, i16 24370, i16 24562, i16 24741, i16 24928, i16 25112, i16 25295, i16 25485, i16 25663, i16 25858, i16 26032, i16 26224, i16 26403, i16 25112, i16 25295, i16 25485, i16 25663, i16 25858, i16 26032, i16 26224, i16 26403, i16 26589, i16 26774, i16 26957, i16 27147, i16 27325, i16 27520, i16 27695, i16 27885, i16 26589, i16 26774, i16 26957, i16 27147, i16 27325, i16 27520, i16 27695, i16 27885, i16 28065, i16 28251, i16 28437, i16 28618, i16 28809, i16 28987, i16 29182, i16 29357, i16 28065, i16 28251, i16 28437, i16 28618, i16 28809, i16 28987, i16 29182, i16 29357, i16 29547, i16 29727, i16 29913, i16 30099, i16 30280, i16 30472, i16 30649, i16 30843, i16 29547, i16 29727, i16 29913, i16 30099, i16 30280, i16 30472, i16 30649, i16 30843, i16 31019, i16 31208, i16 31390, i16 31574, i16 31762, i16 31942, i16 32135, i16 32311, i16 31019, i16 31208, i16 31390, i16 31574, i16 31762, i16 31942, i16 32135, i16 32311, i16 32505, i16 32505, i16 32505, i16 32505, i16 32505, i16 32505, i16 32505, i16 32505, i16 32505, i16 32505, i16 32505, i16 32505, i16 32505, i16 32505, i16 32505, i16 32505, i16 32505, i16 32505, i16 32505, i16 32505, i16 32505, i16 32505, i16 32505, i16 32505, i16 32505, i16 32505, i16 32505, i16 32505, i16 32505, i16 32505, i16 32505, i16 32505, i16 32505, i16 32505, i16 32505, i16 32505, i16 32505, i16 32505, i16 32505, i16 32505, i16 32505, i16 32505, i16 32505, i16 32505, i16 32505, i16 32505, i16 32505, i16 32505, i16 32505, i16 32505, i16 32505, i16 32505, i16 32505, i16 32505, i16 32505, i16 32505, i16 32505, i16 32505, i16 32505, i16 32505, i16 32505, i16 32505, i16 32505, i16 32505, i16 32505, i16 32505, i16 32505, i16 32505, i16 32505, i16 32505, i16 32505, i16 32505, i16 32505, i16 32505, i16 32505, i16 32505, i16 32505, i16 32505, i16 32505, i16 32505, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 1, i16 3, i16 9, i16 24, i16 0, i16 0, i16 0, i16 0, i16 1, i16 3, i16 9, i16 24, i16 66, i16 179, i16 372, i16 550, i16 737, i16 921, i16 1104, i16 1293, i16 66, i16 179, i16 372, i16 550, i16 737, i16 921, i16 1104, i16 1293, i16 1472, i16 1666, i16 1841, i16 2033, i16 2212, i16 2399, i16 2583, i16 2766, i16 1472, i16 1666, i16 1841, i16 2033, i16 2212, i16 2399, i16 2583, i16 2766, i16 2956, i16 3134, i16 3329, i16 3503, i16 3694, i16 3874, i16 4060, i16 4246, i16 2956, i16 3134, i16 3329, i16 3503, i16 3694, i16 3874, i16 4060, i16 4246, i16 4427, i16 4618, i16 4796, i16 4991, i16 5165, i16 5356, i16 5536, i16 5722, i16 4427, i16 4618, i16 4796, i16 4991, i16 5165, i16 5356, i16 5536, i16 5722, i16 5908, i16 6089, i16 6281, i16 6458, i16 6652, i16 6828, i16 7017, i16 7198, i16 5908, i16 6089, i16 6281, i16 6458, i16 6652, i16 6828, i16 7017, i16 7198, i16 7383, i16 7570, i16 7751, i16 7943, i16 8120, i16 8314, i16 8490, i16 8679, i16 7383, i16 7570, i16 7751, i16 7943, i16 8120, i16 8314, i16 8490, i16 8679, i16 8861, i16 9045, i16 9233, i16 9413, i16 9606, i16 9782, i16 9975, i16 10152, i16 8861, i16 9045, i16 9233, i16 9413, i16 9606, i16 9782, i16 9975, i16 10152, i16 10340, i16 10523, i16 10707, i16 10895, i16 11075, i16 11268, i16 11444, i16 11636, i16 10340, i16 10523, i16 10707, i16 10895, i16 11075, i16 11268, i16 11444, i16 11636, i16 11814, i16 12002, i16 12185, i16 12368, i16 12558, i16 12737, i16 12931, i16 13106, i16 11814, i16 12002, i16 12185, i16 12368, i16 12558, i16 12737, i16 12931, i16 13106, i16 13298, i16 13476, i16 13663, i16 13848, i16 14030, i16 14220, i16 14398, i16 14593, i16 13298, i16 13476, i16 13663, i16 13848, i16 14030, i16 14220, i16 14398, i16 14593, i16 14768, i16 14959, i16 15138, i16 15325, i16 15510, i16 15692, i16 15883, i16 16060, i16 14768, i16 14959, i16 15138, i16 15325, i16 15510, i16 15692, i16 15883, i16 16060], align 32
@_ZL11exp_ilut_cd = internal constant [512 x i16] [i16 16256, i16 16430, i16 16620, i16 16801, i16 16986, i16 17172, i16 17354, i16 17545, i16 16256, i16 16430, i16 16620, i16 16801, i16 16986, i16 17172, i16 17354, i16 17545, i16 17722, i16 17917, i16 18092, i16 18282, i16 18463, i16 18648, i16 18835, i16 19016, i16 17722, i16 17917, i16 18092, i16 18282, i16 18463, i16 18648, i16 18835, i16 19016, i16 19208, i16 19384, i16 19578, i16 19754, i16 19943, i16 20125, i16 20310, i16 20497, i16 19208, i16 19384, i16 19578, i16 19754, i16 19943, i16 20125, i16 20310, i16 20497, i16 20677, i16 20870, i16 21046, i16 21240, i16 21416, i16 21605, i16 21788, i16 21971, i16 20677, i16 20870, i16 21046, i16 21240, i16 21416, i16 21605, i16 21788, i16 21971, i16 22160, i16 22339, i16 22533, i16 22708, i16 22901, i16 23079, i16 23266, i16 23450, i16 22160, i16 22339, i16 22533, i16 22708, i16 22901, i16 23079, i16 23266, i16 23450, i16 23633, i16 23822, i16 24001, i16 24195, i16 24370, i16 24562, i16 24741, i16 24928, i16 23633, i16 23822, i16 24001, i16 24195, i16 24370, i16 24562, i16 24741, i16 24928, i16 25112, i16 25295, i16 25485, i16 25663, i16 25858, i16 26032, i16 26224, i16 26403, i16 25112, i16 25295, i16 25485, i16 25663, i16 25858, i16 26032, i16 26224, i16 26403, i16 26589, i16 26774, i16 26957, i16 27147, i16 27325, i16 27520, i16 27695, i16 27885, i16 26589, i16 26774, i16 26957, i16 27147, i16 27325, i16 27520, i16 27695, i16 27885, i16 28065, i16 28251, i16 28437, i16 28618, i16 28809, i16 28987, i16 29182, i16 29357, i16 28065, i16 28251, i16 28437, i16 28618, i16 28809, i16 28987, i16 29182, i16 29357, i16 29547, i16 29727, i16 29913, i16 30099, i16 30280, i16 30472, i16 30649, i16 30843, i16 29547, i16 29727, i16 29913, i16 30099, i16 30280, i16 30472, i16 30649, i16 30843, i16 31019, i16 31208, i16 31390, i16 31574, i16 31762, i16 31942, i16 32135, i16 32311, i16 31019, i16 31208, i16 31390, i16 31574, i16 31762, i16 31942, i16 32135, i16 32311, i16 32505, i16 32505, i16 32505, i16 32505, i16 32505, i16 32505, i16 32505, i16 32505, i16 32505, i16 32505, i16 32505, i16 32505, i16 32505, i16 32505, i16 32505, i16 32505, i16 32505, i16 32505, i16 32505, i16 32505, i16 32505, i16 32505, i16 32505, i16 32505, i16 32505, i16 32505, i16 32505, i16 32505, i16 32505, i16 32505, i16 32505, i16 32505, i16 32505, i16 32505, i16 32505, i16 32505, i16 32505, i16 32505, i16 32505, i16 32505, i16 32505, i16 32505, i16 32505, i16 32505, i16 32505, i16 32505, i16 32505, i16 32505, i16 32505, i16 32505, i16 32505, i16 32505, i16 32505, i16 32505, i16 32505, i16 32505, i16 32505, i16 32505, i16 32505, i16 32505, i16 32505, i16 32505, i16 32505, i16 32505, i16 32505, i16 32505, i16 32505, i16 32505, i16 32505, i16 32505, i16 32505, i16 32505, i16 32505, i16 32505, i16 32505, i16 32505, i16 32505, i16 32505, i16 32505, i16 32505, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 1, i16 3, i16 9, i16 24, i16 0, i16 0, i16 0, i16 0, i16 1, i16 3, i16 9, i16 24, i16 66, i16 179, i16 372, i16 550, i16 737, i16 921, i16 1104, i16 1293, i16 66, i16 179, i16 372, i16 550, i16 737, i16 921, i16 1104, i16 1293, i16 1472, i16 1666, i16 1841, i16 2033, i16 2212, i16 2399, i16 2583, i16 2766, i16 1472, i16 1666, i16 1841, i16 2033, i16 2212, i16 2399, i16 2583, i16 2766, i16 2956, i16 3134, i16 3329, i16 3503, i16 3694, i16 3874, i16 4060, i16 4246, i16 2956, i16 3134, i16 3329, i16 3503, i16 3694, i16 3874, i16 4060, i16 4246, i16 4427, i16 4618, i16 4796, i16 4991, i16 5165, i16 5356, i16 5536, i16 5722, i16 4427, i16 4618, i16 4796, i16 4991, i16 5165, i16 5356, i16 5536, i16 5722, i16 5908, i16 6089, i16 6281, i16 6458, i16 6652, i16 6828, i16 7017, i16 7198, i16 5908, i16 6089, i16 6281, i16 6458, i16 6652, i16 6828, i16 7017, i16 7198, i16 7383, i16 7570, i16 7751, i16 7943, i16 8120, i16 8314, i16 8490, i16 8679, i16 7383, i16 7570, i16 7751, i16 7943, i16 8120, i16 8314, i16 8490, i16 8679, i16 8861, i16 9045, i16 9233, i16 9413, i16 9606, i16 9782, i16 9975, i16 10152, i16 8861, i16 9045, i16 9233, i16 9413, i16 9606, i16 9782, i16 9975, i16 10152, i16 10340, i16 10523, i16 10707, i16 10895, i16 11075, i16 11268, i16 11444, i16 11636, i16 10340, i16 10523, i16 10707, i16 10895, i16 11075, i16 11268, i16 11444, i16 11636, i16 11814, i16 12002, i16 12185, i16 12368, i16 12558, i16 12737, i16 12931, i16 13106, i16 11814, i16 12002, i16 12185, i16 12368, i16 12558, i16 12737, i16 12931, i16 13106, i16 13298, i16 13476, i16 13663, i16 13848, i16 14030, i16 14220, i16 14398, i16 14593, i16 13298, i16 13476, i16 13663, i16 13848, i16 14030, i16 14220, i16 14398, i16 14593, i16 14768, i16 14959, i16 15138, i16 15325, i16 15510, i16 15692, i16 15883, i16 16060, i16 14768, i16 14959, i16 15138, i16 15325, i16 15510, i16 15692, i16 15883, i16 16060], align 32
@_ZL11exp_flut_ab = internal constant [512 x i16] [i16 16256, i16 16257, i16 16257, i16 16258, i16 16258, i16 16259, i16 16259, i16 16260, i16 16256, i16 16257, i16 16257, i16 16258, i16 16258, i16 16259, i16 16259, i16 16260, i16 16260, i16 16261, i16 16261, i16 16262, i16 16262, i16 16263, i16 16263, i16 16264, i16 16260, i16 16261, i16 16261, i16 16262, i16 16262, i16 16263, i16 16263, i16 16264, i16 16264, i16 16265, i16 16265, i16 16266, i16 16266, i16 16267, i16 16267, i16 16268, i16 16264, i16 16265, i16 16265, i16 16266, i16 16266, i16 16267, i16 16267, i16 16268, i16 16269, i16 16269, i16 16270, i16 16270, i16 16271, i16 16271, i16 16272, i16 16272, i16 16269, i16 16269, i16 16270, i16 16270, i16 16271, i16 16271, i16 16272, i16 16272, i16 16273, i16 16274, i16 16274, i16 16275, i16 16275, i16 16276, i16 16276, i16 16277, i16 16273, i16 16274, i16 16274, i16 16275, i16 16275, i16 16276, i16 16276, i16 16277, i16 16278, i16 16278, i16 16279, i16 16279, i16 16280, i16 16281, i16 16281, i16 16282, i16 16278, i16 16278, i16 16279, i16 16279, i16 16280, i16 16281, i16 16281, i16 16282, i16 16282, i16 16283, i16 16284, i16 16284, i16 16285, i16 16285, i16 16286, i16 16287, i16 16282, i16 16283, i16 16284, i16 16284, i16 16285, i16 16285, i16 16286, i16 16287, i16 16287, i16 16288, i16 16289, i16 16289, i16 16290, i16 16290, i16 16291, i16 16292, i16 16287, i16 16288, i16 16289, i16 16289, i16 16290, i16 16290, i16 16291, i16 16292, i16 16292, i16 16293, i16 16294, i16 16294, i16 16295, i16 16296, i16 16296, i16 16297, i16 16292, i16 16293, i16 16294, i16 16294, i16 16295, i16 16296, i16 16296, i16 16297, i16 16298, i16 16298, i16 16299, i16 16300, i16 16300, i16 16301, i16 16302, i16 16302, i16 16298, i16 16298, i16 16299, i16 16300, i16 16300, i16 16301, i16 16302, i16 16302, i16 16303, i16 16304, i16 16304, i16 16305, i16 16306, i16 16306, i16 16307, i16 16308, i16 16303, i16 16304, i16 16304, i16 16305, i16 16306, i16 16306, i16 16307, i16 16308, i16 16309, i16 16309, i16 16310, i16 16311, i16 16311, i16 16312, i16 16313, i16 16314, i16 16309, i16 16309, i16 16310, i16 16311, i16 16311, i16 16312, i16 16313, i16 16314, i16 16314, i16 16315, i16 16316, i16 16316, i16 16317, i16 16318, i16 16319, i16 16319, i16 16314, i16 16315, i16 16316, i16 16316, i16 16317, i16 16318, i16 16319, i16 16319, i16 16320, i16 16321, i16 16322, i16 16322, i16 16323, i16 16324, i16 16325, i16 16325, i16 16320, i16 16321, i16 16322, i16 16322, i16 16323, i16 16324, i16 16325, i16 16325, i16 16326, i16 16327, i16 16328, i16 16329, i16 16329, i16 16330, i16 16331, i16 16332, i16 16326, i16 16327, i16 16328, i16 16329, i16 16329, i16 16330, i16 16331, i16 16332, i16 16333, i16 16333, i16 16334, i16 16335, i16 16336, i16 16337, i16 16337, i16 16338, i16 16333, i16 16333, i16 16334, i16 16335, i16 16336, i16 16337, i16 16337, i16 16338, i16 16339, i16 16340, i16 16341, i16 16342, i16 16342, i16 16343, i16 16344, i16 16345, i16 16339, i16 16340, i16 16341, i16 16342, i16 16342, i16 16343, i16 16344, i16 16345, i16 16346, i16 16347, i16 16347, i16 16348, i16 16349, i16 16350, i16 16351, i16 16352, i16 16346, i16 16347, i16 16347, i16 16348, i16 16349, i16 16350, i16 16351, i16 16352, i16 16353, i16 16354, i16 16354, i16 16355, i16 16356, i16 16357, i16 16358, i16 16359, i16 16353, i16 16354, i16 16354, i16 16355, i16 16356, i16 16357, i16 16358, i16 16359, i16 16360, i16 16361, i16 16362, i16 16363, i16 16363, i16 16364, i16 16365, i16 16366, i16 16360, i16 16361, i16 16362, i16 16363, i16 16363, i16 16364, i16 16365, i16 16366, i16 16367, i16 16368, i16 16369, i16 16370, i16 16371, i16 16372, i16 16373, i16 16374, i16 16367, i16 16368, i16 16369, i16 16370, i16 16371, i16 16372, i16 16373, i16 16374, i16 16375, i16 16376, i16 16377, i16 16378, i16 16379, i16 16380, i16 16381, i16 16382, i16 16375, i16 16376, i16 16377, i16 16378, i16 16379, i16 16380, i16 16381, i16 16382, i16 16383, i16 16384, i16 16384, i16 16385, i16 16385, i16 16386, i16 16386, i16 16387, i16 16383, i16 16384, i16 16384, i16 16385, i16 16385, i16 16386, i16 16386, i16 16387, i16 16387, i16 16388, i16 16388, i16 16389, i16 16389, i16 16390, i16 16390, i16 16391, i16 16387, i16 16388, i16 16388, i16 16389, i16 16389, i16 16390, i16 16390, i16 16391, i16 16391, i16 16392, i16 16393, i16 16393, i16 16394, i16 16394, i16 16395, i16 16395, i16 16391, i16 16392, i16 16393, i16 16393, i16 16394, i16 16394, i16 16395, i16 16395, i16 16396, i16 16396, i16 16397, i16 16397, i16 16398, i16 16399, i16 16399, i16 16400, i16 16396, i16 16396, i16 16397, i16 16397, i16 16398, i16 16399, i16 16399, i16 16400, i16 16400, i16 16401, i16 16401, i16 16402, i16 16402, i16 16403, i16 16404, i16 16404, i16 16400, i16 16401, i16 16401, i16 16402, i16 16402, i16 16403, i16 16404, i16 16404, i16 16405, i16 16405, i16 16406, i16 16407, i16 16407, i16 16408, i16 16408, i16 16409, i16 16405, i16 16405, i16 16406, i16 16407, i16 16407, i16 16408, i16 16408, i16 16409, i16 16410, i16 16410, i16 16411, i16 16411, i16 16412, i16 16413, i16 16413, i16 16414, i16 16410, i16 16410, i16 16411, i16 16411, i16 16412, i16 16413, i16 16413, i16 16414, i16 16414, i16 16415, i16 16416, i16 16416, i16 16417, i16 16418, i16 16418, i16 16419, i16 16414, i16 16415, i16 16416, i16 16416, i16 16417, i16 16418, i16 16418, i16 16419, i16 16419, i16 16420, i16 16421, i16 16421, i16 16422, i16 16423, i16 16423, i16 16424, i16 16419, i16 16420, i16 16421, i16 16421, i16 16422, i16 16423, i16 16423, i16 16424, i16 16425, i16 16425, i16 16426, i16 16427, i16 16427, i16 16428, i16 16429, i16 16429, i16 16425, i16 16425, i16 16426, i16 16427, i16 16427, i16 16428, i16 16429, i16 16429], align 32
@_ZL11exp_flut_cd = internal constant [512 x i16] [i16 16256, i16 16257, i16 16257, i16 16258, i16 16258, i16 16259, i16 16259, i16 16260, i16 16256, i16 16257, i16 16257, i16 16258, i16 16258, i16 16259, i16 16259, i16 16260, i16 16260, i16 16261, i16 16261, i16 16262, i16 16262, i16 16263, i16 16263, i16 16264, i16 16260, i16 16261, i16 16261, i16 16262, i16 16262, i16 16263, i16 16263, i16 16264, i16 16264, i16 16265, i16 16265, i16 16266, i16 16266, i16 16267, i16 16267, i16 16268, i16 16264, i16 16265, i16 16265, i16 16266, i16 16266, i16 16267, i16 16267, i16 16268, i16 16269, i16 16269, i16 16270, i16 16270, i16 16271, i16 16271, i16 16272, i16 16272, i16 16269, i16 16269, i16 16270, i16 16270, i16 16271, i16 16271, i16 16272, i16 16272, i16 16273, i16 16274, i16 16274, i16 16275, i16 16275, i16 16276, i16 16276, i16 16277, i16 16273, i16 16274, i16 16274, i16 16275, i16 16275, i16 16276, i16 16276, i16 16277, i16 16278, i16 16278, i16 16279, i16 16279, i16 16280, i16 16281, i16 16281, i16 16282, i16 16278, i16 16278, i16 16279, i16 16279, i16 16280, i16 16281, i16 16281, i16 16282, i16 16282, i16 16283, i16 16284, i16 16284, i16 16285, i16 16285, i16 16286, i16 16287, i16 16282, i16 16283, i16 16284, i16 16284, i16 16285, i16 16285, i16 16286, i16 16287, i16 16287, i16 16288, i16 16289, i16 16289, i16 16290, i16 16290, i16 16291, i16 16292, i16 16287, i16 16288, i16 16289, i16 16289, i16 16290, i16 16290, i16 16291, i16 16292, i16 16292, i16 16293, i16 16294, i16 16294, i16 16295, i16 16296, i16 16296, i16 16297, i16 16292, i16 16293, i16 16294, i16 16294, i16 16295, i16 16296, i16 16296, i16 16297, i16 16298, i16 16298, i16 16299, i16 16300, i16 16300, i16 16301, i16 16302, i16 16302, i16 16298, i16 16298, i16 16299, i16 16300, i16 16300, i16 16301, i16 16302, i16 16302, i16 16303, i16 16304, i16 16304, i16 16305, i16 16306, i16 16306, i16 16307, i16 16308, i16 16303, i16 16304, i16 16304, i16 16305, i16 16306, i16 16306, i16 16307, i16 16308, i16 16309, i16 16309, i16 16310, i16 16311, i16 16311, i16 16312, i16 16313, i16 16314, i16 16309, i16 16309, i16 16310, i16 16311, i16 16311, i16 16312, i16 16313, i16 16314, i16 16314, i16 16315, i16 16316, i16 16316, i16 16317, i16 16318, i16 16319, i16 16319, i16 16314, i16 16315, i16 16316, i16 16316, i16 16317, i16 16318, i16 16319, i16 16319, i16 16320, i16 16321, i16 16322, i16 16322, i16 16323, i16 16324, i16 16325, i16 16325, i16 16320, i16 16321, i16 16322, i16 16322, i16 16323, i16 16324, i16 16325, i16 16325, i16 16326, i16 16327, i16 16328, i16 16329, i16 16329, i16 16330, i16 16331, i16 16332, i16 16326, i16 16327, i16 16328, i16 16329, i16 16329, i16 16330, i16 16331, i16 16332, i16 16333, i16 16333, i16 16334, i16 16335, i16 16336, i16 16337, i16 16337, i16 16338, i16 16333, i16 16333, i16 16334, i16 16335, i16 16336, i16 16337, i16 16337, i16 16338, i16 16339, i16 16340, i16 16341, i16 16342, i16 16342, i16 16343, i16 16344, i16 16345, i16 16339, i16 16340, i16 16341, i16 16342, i16 16342, i16 16343, i16 16344, i16 16345, i16 16346, i16 16347, i16 16347, i16 16348, i16 16349, i16 16350, i16 16351, i16 16352, i16 16346, i16 16347, i16 16347, i16 16348, i16 16349, i16 16350, i16 16351, i16 16352, i16 16353, i16 16354, i16 16354, i16 16355, i16 16356, i16 16357, i16 16358, i16 16359, i16 16353, i16 16354, i16 16354, i16 16355, i16 16356, i16 16357, i16 16358, i16 16359, i16 16360, i16 16361, i16 16362, i16 16363, i16 16363, i16 16364, i16 16365, i16 16366, i16 16360, i16 16361, i16 16362, i16 16363, i16 16363, i16 16364, i16 16365, i16 16366, i16 16367, i16 16368, i16 16369, i16 16370, i16 16371, i16 16372, i16 16373, i16 16374, i16 16367, i16 16368, i16 16369, i16 16370, i16 16371, i16 16372, i16 16373, i16 16374, i16 16375, i16 16376, i16 16377, i16 16378, i16 16379, i16 16380, i16 16381, i16 16382, i16 16375, i16 16376, i16 16377, i16 16378, i16 16379, i16 16380, i16 16381, i16 16382, i16 16383, i16 16384, i16 16384, i16 16385, i16 16385, i16 16386, i16 16386, i16 16387, i16 16383, i16 16384, i16 16384, i16 16385, i16 16385, i16 16386, i16 16386, i16 16387, i16 16387, i16 16388, i16 16388, i16 16389, i16 16389, i16 16390, i16 16390, i16 16391, i16 16387, i16 16388, i16 16388, i16 16389, i16 16389, i16 16390, i16 16390, i16 16391, i16 16391, i16 16392, i16 16393, i16 16393, i16 16394, i16 16394, i16 16395, i16 16395, i16 16391, i16 16392, i16 16393, i16 16393, i16 16394, i16 16394, i16 16395, i16 16395, i16 16396, i16 16396, i16 16397, i16 16397, i16 16398, i16 16399, i16 16399, i16 16400, i16 16396, i16 16396, i16 16397, i16 16397, i16 16398, i16 16399, i16 16399, i16 16400, i16 16400, i16 16401, i16 16401, i16 16402, i16 16402, i16 16403, i16 16404, i16 16404, i16 16400, i16 16401, i16 16401, i16 16402, i16 16402, i16 16403, i16 16404, i16 16404, i16 16405, i16 16405, i16 16406, i16 16407, i16 16407, i16 16408, i16 16408, i16 16409, i16 16405, i16 16405, i16 16406, i16 16407, i16 16407, i16 16408, i16 16408, i16 16409, i16 16410, i16 16410, i16 16411, i16 16411, i16 16412, i16 16413, i16 16413, i16 16414, i16 16410, i16 16410, i16 16411, i16 16411, i16 16412, i16 16413, i16 16413, i16 16414, i16 16414, i16 16415, i16 16416, i16 16416, i16 16417, i16 16418, i16 16418, i16 16419, i16 16414, i16 16415, i16 16416, i16 16416, i16 16417, i16 16418, i16 16418, i16 16419, i16 16419, i16 16420, i16 16421, i16 16421, i16 16422, i16 16423, i16 16423, i16 16424, i16 16419, i16 16420, i16 16421, i16 16421, i16 16422, i16 16423, i16 16423, i16 16424, i16 16425, i16 16425, i16 16426, i16 16427, i16 16427, i16 16428, i16 16429, i16 16429, i16 16425, i16 16425, i16 16426, i16 16427, i16 16427, i16 16428, i16 16429, i16 16429], align 32

; Function Attrs: mustprogress nofree nounwind memory(read, argmem: readwrite)
define dso_local void @dut(ptr noalias nocapture readonly %0, ptr noalias nocapture writeonly %1) local_unnamed_addr #0 {
  %3 = tail call noundef <16 x i32> @llvm.aie2.v16int32()
  %4 = tail call noundef <16 x i32> @llvm.aie2.vbroadcast32.I512(i32 1023)
  %5 = tail call noundef <16 x i32> @llvm.aie2.vbroadcast32.I512(i32 0)
  %6 = tail call noundef <16 x bfloat> @llvm.aie2.v16bfloat16()
  %7 = tail call noundef <8 x i64> @llvm.aie2.clr16f.conf()
  %8 = tail call noundef <8 x i64> @llvm.aie2.v16accfloat()
  %9 = zext i20 ptrtoint (ptr @_ZL11exp_ilut_ab to i20) to i32
  %10 = zext i20 ptrtoint (ptr @_ZL11exp_ilut_cd to i20) to i32
  %11 = zext i20 ptrtoint (ptr @_ZL11exp_flut_ab to i20) to i32
  %12 = zext i20 ptrtoint (ptr @_ZL11exp_flut_cd to i20) to i32
  %13 = load <16 x bfloat>, ptr %0, align 32, !tbaa !2
  %14 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %13, i32 8)
  %15 = tail call noundef <32 x i16> @llvm.aie2.v32int16()
  %16 = bitcast <32 x i16> %15 to <16 x i32>
  %17 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %14, <16 x i32> %16, i32 2)
  %18 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %17, i32 0)
  %19 = bitcast <8 x i32> %18 to <16 x i16>
  %20 = tail call noundef <32 x bfloat> @llvm.aie2.v32bfloat16()
  %21 = tail call noundef <16 x i64> @llvm.aie2.v16acc64()
  %22 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %19, i32 0, i32 0)
  %23 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %22, i32 6, i32 1)
  %24 = tail call noundef <16 x i32> @llvm.aie2.vbroadcast32.I512(i32 %9)
  %25 = tail call noundef <16 x i32> @llvm.aie2.vbroadcast32.I512(i32 %10)
  %26 = tail call noundef <16 x i32> @llvm.aie2.vsel32(<16 x i32> %24, <16 x i32> %25, i32 52428)
  %27 = add <16 x i32> %26, %23
  %28 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %27, i32 0)
  %29 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %28), !noalias !5
  %30 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %29, i32 0)
  %31 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %28), !noalias !5
  %32 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %30, <8 x i32> %31, i32 1)
  %33 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %27, i32 1)
  %34 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %33), !noalias !5
  %35 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %34, i32 0)
  %36 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %33), !noalias !5
  %37 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %35, <8 x i32> %36, i32 1)
  %38 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %32, <16 x i32> %37, i32 24)
  %39 = bitcast <16 x i32> %38 to <32 x bfloat>
  %40 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %39, i32 0)
  %41 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %22, i32 -2, i32 1)
  %42 = and <16 x i32> %41, %4
  %43 = tail call noundef <16 x i32> @llvm.aie2.vbroadcast32.I512(i32 %11)
  %44 = tail call noundef <16 x i32> @llvm.aie2.vbroadcast32.I512(i32 %12)
  %45 = tail call noundef <16 x i32> @llvm.aie2.vsel32(<16 x i32> %43, <16 x i32> %44, i32 52428)
  %46 = add <16 x i32> %45, %42
  %47 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %46, i32 0)
  %48 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %47), !noalias !10
  %49 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %48, i32 0)
  %50 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %47), !noalias !10
  %51 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %49, <8 x i32> %50, i32 1)
  %52 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %46, i32 1)
  %53 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %52), !noalias !10
  %54 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %53, i32 0)
  %55 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %52), !noalias !10
  %56 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %54, <8 x i32> %55, i32 1)
  %57 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %51, <16 x i32> %56, i32 24)
  %58 = bitcast <16 x i32> %57 to <32 x bfloat>
  %59 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %58, i32 0)
  %60 = tail call noundef <32 x bfloat> @llvm.aie2.vbroadcast16.bf512(bfloat 0xR0000)
  %61 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %60, i32 0)
  %62 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %40, i32 0)
  %63 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %62, <16 x bfloat> %61, i32 1)
  %64 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %59, i32 0)
  %65 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %64, <16 x bfloat> %61, i32 1)
  %66 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %63, <32 x bfloat> %65, i32 60)
  %67 = getelementptr inbounds bfloat, ptr %0, i20 16
  %68 = load <16 x bfloat>, ptr %67, align 32, !tbaa !2
  %69 = getelementptr inbounds bfloat, ptr %0, i20 32
  %70 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %68, i32 8)
  %71 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %70, <16 x i32> %16, i32 2)
  %72 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %71, i32 0)
  %73 = bitcast <8 x i32> %72 to <16 x i16>
  %74 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %73, i32 0, i32 0)
  %75 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %74, i32 6, i32 1)
  %76 = add <16 x i32> %26, %75
  %77 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %76, i32 0)
  %78 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %77), !noalias !5
  %79 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %78, i32 0)
  %80 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %77), !noalias !5
  %81 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %79, <8 x i32> %80, i32 1)
  %82 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %76, i32 1)
  %83 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %82), !noalias !5
  %84 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %83, i32 0)
  %85 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %82), !noalias !5
  %86 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %84, <8 x i32> %85, i32 1)
  %87 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %81, <16 x i32> %86, i32 24)
  %88 = bitcast <16 x i32> %87 to <32 x bfloat>
  %89 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %88, i32 0)
  %90 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %74, i32 -2, i32 1)
  %91 = and <16 x i32> %90, %4
  %92 = add <16 x i32> %45, %91
  %93 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %92, i32 0)
  %94 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %93), !noalias !10
  %95 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %94, i32 0)
  %96 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %93), !noalias !10
  %97 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %95, <8 x i32> %96, i32 1)
  %98 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %92, i32 1)
  %99 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %98), !noalias !10
  %100 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %99, i32 0)
  %101 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %98), !noalias !10
  %102 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %100, <8 x i32> %101, i32 1)
  %103 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %97, <16 x i32> %102, i32 24)
  %104 = bitcast <16 x i32> %103 to <32 x bfloat>
  %105 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %104, i32 0)
  %106 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %89, i32 0)
  %107 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %106, <16 x bfloat> %61, i32 1)
  %108 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %105, i32 0)
  %109 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %108, <16 x bfloat> %61, i32 1)
  %110 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %107, <32 x bfloat> %109, i32 60)
  %111 = load <16 x bfloat>, ptr %69, align 32, !tbaa !2
  %112 = getelementptr inbounds bfloat, ptr %0, i20 48
  %113 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %111, i32 8)
  %114 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %113, <16 x i32> %16, i32 2)
  %115 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %114, i32 0)
  %116 = bitcast <8 x i32> %115 to <16 x i16>
  %117 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %116, i32 0, i32 0)
  %118 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %117, i32 6, i32 1)
  %119 = add <16 x i32> %26, %118
  %120 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %119, i32 0)
  %121 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %120), !noalias !5
  %122 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %121, i32 0)
  %123 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %120), !noalias !5
  %124 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %122, <8 x i32> %123, i32 1)
  %125 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %119, i32 1)
  %126 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %125), !noalias !5
  %127 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %126, i32 0)
  %128 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %125), !noalias !5
  %129 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %127, <8 x i32> %128, i32 1)
  %130 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %124, <16 x i32> %129, i32 24)
  %131 = bitcast <16 x i32> %130 to <32 x bfloat>
  %132 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %131, i32 0)
  %133 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %117, i32 -2, i32 1)
  %134 = and <16 x i32> %133, %4
  %135 = add <16 x i32> %45, %134
  %136 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %135, i32 0)
  %137 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %136), !noalias !10
  %138 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %137, i32 0)
  %139 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %136), !noalias !10
  %140 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %138, <8 x i32> %139, i32 1)
  %141 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %135, i32 1)
  %142 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %141), !noalias !10
  %143 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %142, i32 0)
  %144 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %141), !noalias !10
  %145 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %143, <8 x i32> %144, i32 1)
  %146 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %140, <16 x i32> %145, i32 24)
  %147 = bitcast <16 x i32> %146 to <32 x bfloat>
  %148 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %147, i32 0)
  %149 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %132, i32 0)
  %150 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %149, <16 x bfloat> %61, i32 1)
  %151 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %148, i32 0)
  %152 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %151, <16 x bfloat> %61, i32 1)
  %153 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %150, <32 x bfloat> %152, i32 60)
  %154 = load <16 x bfloat>, ptr %112, align 32, !tbaa !2
  %155 = getelementptr inbounds bfloat, ptr %0, i20 64
  %156 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %154, i32 8)
  %157 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %156, <16 x i32> %16, i32 2)
  %158 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %157, i32 0)
  %159 = bitcast <8 x i32> %158 to <16 x i16>
  %160 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %159, i32 0, i32 0)
  %161 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %160, i32 6, i32 1)
  %162 = add <16 x i32> %26, %161
  %163 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %162, i32 0)
  %164 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %163), !noalias !5
  %165 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %164, i32 0)
  %166 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %163), !noalias !5
  %167 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %165, <8 x i32> %166, i32 1)
  %168 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %162, i32 1)
  %169 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %168), !noalias !5
  %170 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %169, i32 0)
  %171 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %168), !noalias !5
  %172 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %170, <8 x i32> %171, i32 1)
  %173 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %167, <16 x i32> %172, i32 24)
  %174 = bitcast <16 x i32> %173 to <32 x bfloat>
  %175 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %174, i32 0)
  %176 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %160, i32 -2, i32 1)
  %177 = and <16 x i32> %176, %4
  %178 = add <16 x i32> %45, %177
  %179 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %178, i32 0)
  %180 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %179), !noalias !10
  %181 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %180, i32 0)
  %182 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %179), !noalias !10
  %183 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %181, <8 x i32> %182, i32 1)
  %184 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %178, i32 1)
  %185 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %184), !noalias !10
  %186 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %185, i32 0)
  %187 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %184), !noalias !10
  %188 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %186, <8 x i32> %187, i32 1)
  %189 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %183, <16 x i32> %188, i32 24)
  %190 = bitcast <16 x i32> %189 to <32 x bfloat>
  %191 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %190, i32 0)
  %192 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %175, i32 0)
  %193 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %192, <16 x bfloat> %61, i32 1)
  %194 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %191, i32 0)
  %195 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %194, <16 x bfloat> %61, i32 1)
  %196 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %193, <32 x bfloat> %195, i32 60)
  %197 = load <16 x bfloat>, ptr %155, align 32, !tbaa !2
  %198 = getelementptr inbounds bfloat, ptr %0, i20 80
  %199 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %197, i32 8)
  %200 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %199, <16 x i32> %16, i32 2)
  %201 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %200, i32 0)
  %202 = bitcast <8 x i32> %201 to <16 x i16>
  %203 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %202, i32 0, i32 0)
  %204 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %203, i32 6, i32 1)
  %205 = add <16 x i32> %26, %204
  %206 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %205, i32 0)
  %207 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %206), !noalias !5
  %208 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %207, i32 0)
  %209 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %206), !noalias !5
  %210 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %208, <8 x i32> %209, i32 1)
  %211 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %205, i32 1)
  %212 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %211), !noalias !5
  %213 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %212, i32 0)
  %214 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %211), !noalias !5
  %215 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %213, <8 x i32> %214, i32 1)
  %216 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %210, <16 x i32> %215, i32 24)
  %217 = bitcast <16 x i32> %216 to <32 x bfloat>
  %218 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %217, i32 0)
  %219 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %203, i32 -2, i32 1)
  %220 = and <16 x i32> %219, %4
  %221 = add <16 x i32> %45, %220
  %222 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %221, i32 0)
  %223 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %222), !noalias !10
  %224 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %223, i32 0)
  %225 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %222), !noalias !10
  %226 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %224, <8 x i32> %225, i32 1)
  %227 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %221, i32 1)
  %228 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %227), !noalias !10
  %229 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %228, i32 0)
  %230 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %227), !noalias !10
  %231 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %229, <8 x i32> %230, i32 1)
  %232 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %226, <16 x i32> %231, i32 24)
  %233 = bitcast <16 x i32> %232 to <32 x bfloat>
  %234 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %233, i32 0)
  %235 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %218, i32 0)
  %236 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %235, <16 x bfloat> %61, i32 1)
  %237 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %234, i32 0)
  %238 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %237, <16 x bfloat> %61, i32 1)
  %239 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %236, <32 x bfloat> %238, i32 60)
  %240 = load <16 x bfloat>, ptr %198, align 32, !tbaa !2
  %241 = getelementptr inbounds bfloat, ptr %0, i20 96
  %242 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %240, i32 8)
  %243 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %242, <16 x i32> %16, i32 2)
  %244 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %243, i32 0)
  %245 = bitcast <8 x i32> %244 to <16 x i16>
  %246 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %245, i32 0, i32 0)
  %247 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %246, i32 6, i32 1)
  %248 = add <16 x i32> %26, %247
  %249 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %248, i32 0)
  %250 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %249), !noalias !5
  %251 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %250, i32 0)
  %252 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %249), !noalias !5
  %253 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %251, <8 x i32> %252, i32 1)
  %254 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %248, i32 1)
  %255 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %254), !noalias !5
  %256 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %255, i32 0)
  %257 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %254), !noalias !5
  %258 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %256, <8 x i32> %257, i32 1)
  %259 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %253, <16 x i32> %258, i32 24)
  %260 = bitcast <16 x i32> %259 to <32 x bfloat>
  %261 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %260, i32 0)
  %262 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %246, i32 -2, i32 1)
  %263 = and <16 x i32> %262, %4
  %264 = add <16 x i32> %45, %263
  %265 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %264, i32 0)
  %266 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %265), !noalias !10
  %267 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %266, i32 0)
  %268 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %265), !noalias !10
  %269 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %267, <8 x i32> %268, i32 1)
  %270 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %264, i32 1)
  %271 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %270), !noalias !10
  %272 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %271, i32 0)
  %273 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %270), !noalias !10
  %274 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %272, <8 x i32> %273, i32 1)
  %275 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %269, <16 x i32> %274, i32 24)
  %276 = bitcast <16 x i32> %275 to <32 x bfloat>
  %277 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %276, i32 0)
  %278 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %261, i32 0)
  %279 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %278, <16 x bfloat> %61, i32 1)
  %280 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %277, i32 0)
  %281 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %280, <16 x bfloat> %61, i32 1)
  %282 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %279, <32 x bfloat> %281, i32 60)
  %283 = load <16 x bfloat>, ptr %241, align 32, !tbaa !2
  %284 = getelementptr inbounds bfloat, ptr %0, i20 112
  %285 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %283, i32 8)
  %286 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %285, <16 x i32> %16, i32 2)
  %287 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %286, i32 0)
  %288 = bitcast <8 x i32> %287 to <16 x i16>
  %289 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %288, i32 0, i32 0)
  %290 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %289, i32 6, i32 1)
  %291 = add <16 x i32> %26, %290
  %292 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %291, i32 0)
  %293 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %292), !noalias !5
  %294 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %293, i32 0)
  %295 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %292), !noalias !5
  %296 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %294, <8 x i32> %295, i32 1)
  %297 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %291, i32 1)
  %298 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %297), !noalias !5
  %299 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %298, i32 0)
  %300 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %297), !noalias !5
  %301 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %299, <8 x i32> %300, i32 1)
  %302 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %296, <16 x i32> %301, i32 24)
  %303 = bitcast <16 x i32> %302 to <32 x bfloat>
  %304 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %303, i32 0)
  %305 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %289, i32 -2, i32 1)
  %306 = and <16 x i32> %305, %4
  %307 = add <16 x i32> %45, %306
  %308 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %307, i32 0)
  %309 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %308), !noalias !10
  %310 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %309, i32 0)
  %311 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %308), !noalias !10
  %312 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %310, <8 x i32> %311, i32 1)
  %313 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %307, i32 1)
  %314 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %313), !noalias !10
  %315 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %314, i32 0)
  %316 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %313), !noalias !10
  %317 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %315, <8 x i32> %316, i32 1)
  %318 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %312, <16 x i32> %317, i32 24)
  %319 = bitcast <16 x i32> %318 to <32 x bfloat>
  %320 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %319, i32 0)
  %321 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %304, i32 0)
  %322 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %321, <16 x bfloat> %61, i32 1)
  %323 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %320, i32 0)
  %324 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %323, <16 x bfloat> %61, i32 1)
  %325 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %322, <32 x bfloat> %324, i32 60)
  %326 = load <16 x bfloat>, ptr %284, align 32, !tbaa !2
  %327 = getelementptr inbounds bfloat, ptr %0, i20 128
  %328 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %326, i32 8)
  %329 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %328, <16 x i32> %16, i32 2)
  %330 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %329, i32 0)
  %331 = bitcast <8 x i32> %330 to <16 x i16>
  %332 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %331, i32 0, i32 0)
  %333 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %332, i32 6, i32 1)
  %334 = add <16 x i32> %26, %333
  %335 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %334, i32 0)
  %336 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %335), !noalias !5
  %337 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %336, i32 0)
  %338 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %335), !noalias !5
  %339 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %337, <8 x i32> %338, i32 1)
  %340 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %334, i32 1)
  %341 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %340), !noalias !5
  %342 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %341, i32 0)
  %343 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %340), !noalias !5
  %344 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %342, <8 x i32> %343, i32 1)
  %345 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %339, <16 x i32> %344, i32 24)
  %346 = bitcast <16 x i32> %345 to <32 x bfloat>
  %347 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %346, i32 0)
  %348 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %332, i32 -2, i32 1)
  %349 = and <16 x i32> %348, %4
  %350 = add <16 x i32> %45, %349
  %351 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %350, i32 0)
  %352 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %351), !noalias !10
  %353 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %352, i32 0)
  %354 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %351), !noalias !10
  %355 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %353, <8 x i32> %354, i32 1)
  %356 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %350, i32 1)
  %357 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %356), !noalias !10
  %358 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %357, i32 0)
  %359 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %356), !noalias !10
  %360 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %358, <8 x i32> %359, i32 1)
  %361 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %355, <16 x i32> %360, i32 24)
  %362 = bitcast <16 x i32> %361 to <32 x bfloat>
  %363 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %362, i32 0)
  %364 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %347, i32 0)
  %365 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %364, <16 x bfloat> %61, i32 1)
  %366 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %363, i32 0)
  %367 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %366, <16 x bfloat> %61, i32 1)
  %368 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %365, <32 x bfloat> %367, i32 60)
  %369 = load <16 x bfloat>, ptr %327, align 32, !tbaa !2
  %370 = getelementptr inbounds bfloat, ptr %0, i20 144
  %371 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %369, i32 8)
  %372 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %371, <16 x i32> %16, i32 2)
  %373 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %372, i32 0)
  %374 = bitcast <8 x i32> %373 to <16 x i16>
  %375 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %374, i32 0, i32 0)
  %376 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %375, i32 6, i32 1)
  %377 = add <16 x i32> %26, %376
  %378 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %377, i32 0)
  %379 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %378), !noalias !5
  %380 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %379, i32 0)
  %381 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %378), !noalias !5
  %382 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %380, <8 x i32> %381, i32 1)
  %383 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %377, i32 1)
  %384 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %383), !noalias !5
  %385 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %384, i32 0)
  %386 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %383), !noalias !5
  %387 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %385, <8 x i32> %386, i32 1)
  %388 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %382, <16 x i32> %387, i32 24)
  %389 = bitcast <16 x i32> %388 to <32 x bfloat>
  %390 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %389, i32 0)
  %391 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %375, i32 -2, i32 1)
  %392 = and <16 x i32> %391, %4
  %393 = add <16 x i32> %45, %392
  %394 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %393, i32 0)
  %395 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %394), !noalias !10
  %396 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %395, i32 0)
  %397 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %394), !noalias !10
  %398 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %396, <8 x i32> %397, i32 1)
  %399 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %393, i32 1)
  %400 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %399), !noalias !10
  %401 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %400, i32 0)
  %402 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %399), !noalias !10
  %403 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %401, <8 x i32> %402, i32 1)
  %404 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %398, <16 x i32> %403, i32 24)
  %405 = bitcast <16 x i32> %404 to <32 x bfloat>
  %406 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %405, i32 0)
  %407 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %390, i32 0)
  %408 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %407, <16 x bfloat> %61, i32 1)
  %409 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %406, i32 0)
  %410 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %409, <16 x bfloat> %61, i32 1)
  %411 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %408, <32 x bfloat> %410, i32 60)
  %412 = load <16 x bfloat>, ptr %370, align 32, !tbaa !2
  %413 = getelementptr inbounds bfloat, ptr %0, i20 160
  %414 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %412, i32 8)
  %415 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %414, <16 x i32> %16, i32 2)
  %416 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %415, i32 0)
  %417 = bitcast <8 x i32> %416 to <16 x i16>
  %418 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %417, i32 0, i32 0)
  %419 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %418, i32 6, i32 1)
  %420 = add <16 x i32> %26, %419
  %421 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %420, i32 0)
  %422 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %421), !noalias !5
  %423 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %422, i32 0)
  %424 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %421), !noalias !5
  %425 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %423, <8 x i32> %424, i32 1)
  %426 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %420, i32 1)
  %427 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %426), !noalias !5
  %428 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %427, i32 0)
  %429 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %426), !noalias !5
  %430 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %428, <8 x i32> %429, i32 1)
  %431 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %425, <16 x i32> %430, i32 24)
  %432 = bitcast <16 x i32> %431 to <32 x bfloat>
  %433 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %432, i32 0)
  %434 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %418, i32 -2, i32 1)
  %435 = and <16 x i32> %434, %4
  %436 = add <16 x i32> %45, %435
  %437 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %436, i32 0)
  %438 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %437), !noalias !10
  %439 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %438, i32 0)
  %440 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %437), !noalias !10
  %441 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %439, <8 x i32> %440, i32 1)
  %442 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %436, i32 1)
  %443 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %442), !noalias !10
  %444 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %443, i32 0)
  %445 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %442), !noalias !10
  %446 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %444, <8 x i32> %445, i32 1)
  %447 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %441, <16 x i32> %446, i32 24)
  %448 = bitcast <16 x i32> %447 to <32 x bfloat>
  %449 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %448, i32 0)
  %450 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %433, i32 0)
  %451 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %450, <16 x bfloat> %61, i32 1)
  %452 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %449, i32 0)
  %453 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %452, <16 x bfloat> %61, i32 1)
  %454 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %451, <32 x bfloat> %453, i32 60)
  %455 = load <16 x bfloat>, ptr %413, align 32, !tbaa !2
  %456 = getelementptr inbounds bfloat, ptr %0, i20 176
  %457 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %455, i32 8)
  %458 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %457, <16 x i32> %16, i32 2)
  %459 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %458, i32 0)
  %460 = bitcast <8 x i32> %459 to <16 x i16>
  %461 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %460, i32 0, i32 0)
  %462 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %461, i32 6, i32 1)
  %463 = add <16 x i32> %26, %462
  %464 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %463, i32 0)
  %465 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %464), !noalias !5
  %466 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %465, i32 0)
  %467 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %464), !noalias !5
  %468 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %466, <8 x i32> %467, i32 1)
  %469 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %463, i32 1)
  %470 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %469), !noalias !5
  %471 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %470, i32 0)
  %472 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %469), !noalias !5
  %473 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %471, <8 x i32> %472, i32 1)
  %474 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %468, <16 x i32> %473, i32 24)
  %475 = bitcast <16 x i32> %474 to <32 x bfloat>
  %476 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %475, i32 0)
  %477 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %461, i32 -2, i32 1)
  %478 = and <16 x i32> %477, %4
  %479 = add <16 x i32> %45, %478
  %480 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %479, i32 0)
  %481 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %480), !noalias !10
  %482 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %481, i32 0)
  %483 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %480), !noalias !10
  %484 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %482, <8 x i32> %483, i32 1)
  %485 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %479, i32 1)
  %486 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %485), !noalias !10
  %487 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %486, i32 0)
  %488 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %485), !noalias !10
  %489 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %487, <8 x i32> %488, i32 1)
  %490 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %484, <16 x i32> %489, i32 24)
  %491 = bitcast <16 x i32> %490 to <32 x bfloat>
  %492 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %491, i32 0)
  %493 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %476, i32 0)
  %494 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %493, <16 x bfloat> %61, i32 1)
  %495 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %492, i32 0)
  %496 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %495, <16 x bfloat> %61, i32 1)
  %497 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %494, <32 x bfloat> %496, i32 60)
  %498 = load <16 x bfloat>, ptr %456, align 32, !tbaa !2
  %499 = getelementptr inbounds bfloat, ptr %0, i20 192
  %500 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %498, i32 8)
  %501 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %500, <16 x i32> %16, i32 2)
  %502 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %501, i32 0)
  %503 = bitcast <8 x i32> %502 to <16 x i16>
  %504 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %503, i32 0, i32 0)
  %505 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %504, i32 6, i32 1)
  %506 = add <16 x i32> %26, %505
  %507 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %506, i32 0)
  %508 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %507), !noalias !5
  %509 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %508, i32 0)
  %510 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %507), !noalias !5
  %511 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %509, <8 x i32> %510, i32 1)
  %512 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %506, i32 1)
  %513 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %512), !noalias !5
  %514 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %513, i32 0)
  %515 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %512), !noalias !5
  %516 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %514, <8 x i32> %515, i32 1)
  %517 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %511, <16 x i32> %516, i32 24)
  %518 = bitcast <16 x i32> %517 to <32 x bfloat>
  %519 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %518, i32 0)
  %520 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %504, i32 -2, i32 1)
  %521 = and <16 x i32> %520, %4
  %522 = add <16 x i32> %45, %521
  %523 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %522, i32 0)
  %524 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %523), !noalias !10
  %525 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %524, i32 0)
  %526 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %523), !noalias !10
  %527 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %525, <8 x i32> %526, i32 1)
  %528 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %522, i32 1)
  %529 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %528), !noalias !10
  %530 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %529, i32 0)
  %531 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %528), !noalias !10
  %532 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %530, <8 x i32> %531, i32 1)
  %533 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %527, <16 x i32> %532, i32 24)
  %534 = bitcast <16 x i32> %533 to <32 x bfloat>
  %535 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %534, i32 0)
  %536 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %519, i32 0)
  %537 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %536, <16 x bfloat> %61, i32 1)
  %538 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %535, i32 0)
  %539 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %538, <16 x bfloat> %61, i32 1)
  %540 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %537, <32 x bfloat> %539, i32 60)
  %541 = load <16 x bfloat>, ptr %499, align 32, !tbaa !2
  %542 = getelementptr inbounds bfloat, ptr %0, i20 208
  %543 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %541, i32 8)
  %544 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %543, <16 x i32> %16, i32 2)
  %545 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %544, i32 0)
  %546 = bitcast <8 x i32> %545 to <16 x i16>
  %547 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %546, i32 0, i32 0)
  %548 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %547, i32 6, i32 1)
  %549 = add <16 x i32> %26, %548
  %550 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %549, i32 0)
  %551 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %550), !noalias !5
  %552 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %551, i32 0)
  %553 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %550), !noalias !5
  %554 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %552, <8 x i32> %553, i32 1)
  %555 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %549, i32 1)
  %556 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %555), !noalias !5
  %557 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %556, i32 0)
  %558 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %555), !noalias !5
  %559 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %557, <8 x i32> %558, i32 1)
  %560 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %554, <16 x i32> %559, i32 24)
  %561 = bitcast <16 x i32> %560 to <32 x bfloat>
  %562 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %561, i32 0)
  %563 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %547, i32 -2, i32 1)
  %564 = and <16 x i32> %563, %4
  %565 = add <16 x i32> %45, %564
  %566 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %565, i32 0)
  %567 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %566), !noalias !10
  %568 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %567, i32 0)
  %569 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %566), !noalias !10
  %570 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %568, <8 x i32> %569, i32 1)
  %571 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %565, i32 1)
  %572 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %571), !noalias !10
  %573 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %572, i32 0)
  %574 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %571), !noalias !10
  %575 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %573, <8 x i32> %574, i32 1)
  %576 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %570, <16 x i32> %575, i32 24)
  %577 = bitcast <16 x i32> %576 to <32 x bfloat>
  %578 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %577, i32 0)
  %579 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %562, i32 0)
  %580 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %579, <16 x bfloat> %61, i32 1)
  %581 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %578, i32 0)
  %582 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %581, <16 x bfloat> %61, i32 1)
  %583 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %580, <32 x bfloat> %582, i32 60)
  %584 = load <16 x bfloat>, ptr %542, align 32, !tbaa !2
  %585 = getelementptr inbounds bfloat, ptr %0, i20 224
  %586 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %584, i32 8)
  %587 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %586, <16 x i32> %16, i32 2)
  %588 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %587, i32 0)
  %589 = bitcast <8 x i32> %588 to <16 x i16>
  %590 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %589, i32 0, i32 0)
  %591 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %590, i32 6, i32 1)
  %592 = add <16 x i32> %26, %591
  %593 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %592, i32 0)
  %594 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %593), !noalias !5
  %595 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %594, i32 0)
  %596 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %593), !noalias !5
  %597 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %595, <8 x i32> %596, i32 1)
  %598 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %592, i32 1)
  %599 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %598), !noalias !5
  %600 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %599, i32 0)
  %601 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %598), !noalias !5
  %602 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %600, <8 x i32> %601, i32 1)
  %603 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %597, <16 x i32> %602, i32 24)
  %604 = bitcast <16 x i32> %603 to <32 x bfloat>
  %605 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %604, i32 0)
  %606 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %590, i32 -2, i32 1)
  %607 = and <16 x i32> %606, %4
  %608 = add <16 x i32> %45, %607
  %609 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %608, i32 0)
  %610 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %609), !noalias !10
  %611 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %610, i32 0)
  %612 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %609), !noalias !10
  %613 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %611, <8 x i32> %612, i32 1)
  %614 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %608, i32 1)
  %615 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %614), !noalias !10
  %616 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %615, i32 0)
  %617 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %614), !noalias !10
  %618 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %616, <8 x i32> %617, i32 1)
  %619 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %613, <16 x i32> %618, i32 24)
  %620 = bitcast <16 x i32> %619 to <32 x bfloat>
  %621 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %620, i32 0)
  %622 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %605, i32 0)
  %623 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %622, <16 x bfloat> %61, i32 1)
  %624 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %621, i32 0)
  %625 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %624, <16 x bfloat> %61, i32 1)
  %626 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %623, <32 x bfloat> %625, i32 60)
  %627 = load <16 x bfloat>, ptr %585, align 32, !tbaa !2
  %628 = getelementptr inbounds bfloat, ptr %0, i20 240
  %629 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %627, i32 8)
  %630 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %629, <16 x i32> %16, i32 2)
  %631 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %630, i32 0)
  %632 = bitcast <8 x i32> %631 to <16 x i16>
  %633 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %632, i32 0, i32 0)
  %634 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %633, i32 6, i32 1)
  %635 = add <16 x i32> %26, %634
  %636 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %635, i32 0)
  %637 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %636), !noalias !5
  %638 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %637, i32 0)
  %639 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %636), !noalias !5
  %640 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %638, <8 x i32> %639, i32 1)
  %641 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %635, i32 1)
  %642 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %641), !noalias !5
  %643 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %642, i32 0)
  %644 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %641), !noalias !5
  %645 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %643, <8 x i32> %644, i32 1)
  %646 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %640, <16 x i32> %645, i32 24)
  %647 = bitcast <16 x i32> %646 to <32 x bfloat>
  %648 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %647, i32 0)
  %649 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %633, i32 -2, i32 1)
  %650 = and <16 x i32> %649, %4
  %651 = add <16 x i32> %45, %650
  %652 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %651, i32 0)
  %653 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %652), !noalias !10
  %654 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %653, i32 0)
  %655 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %652), !noalias !10
  %656 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %654, <8 x i32> %655, i32 1)
  %657 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %651, i32 1)
  %658 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %657), !noalias !10
  %659 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %658, i32 0)
  %660 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %657), !noalias !10
  %661 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %659, <8 x i32> %660, i32 1)
  %662 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %656, <16 x i32> %661, i32 24)
  %663 = bitcast <16 x i32> %662 to <32 x bfloat>
  %664 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %663, i32 0)
  %665 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %648, i32 0)
  %666 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %665, <16 x bfloat> %61, i32 1)
  %667 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %664, i32 0)
  %668 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %667, <16 x bfloat> %61, i32 1)
  %669 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %666, <32 x bfloat> %668, i32 60)
  %670 = load <16 x bfloat>, ptr %628, align 32, !tbaa !2
  %671 = getelementptr inbounds bfloat, ptr %0, i20 256
  %672 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %670, i32 8)
  %673 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %672, <16 x i32> %16, i32 2)
  %674 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %673, i32 0)
  %675 = bitcast <8 x i32> %674 to <16 x i16>
  %676 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %675, i32 0, i32 0)
  %677 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %676, i32 6, i32 1)
  %678 = add <16 x i32> %26, %677
  %679 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %678, i32 0)
  %680 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %679), !noalias !5
  %681 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %680, i32 0)
  %682 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %679), !noalias !5
  %683 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %681, <8 x i32> %682, i32 1)
  %684 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %678, i32 1)
  %685 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %684), !noalias !5
  %686 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %685, i32 0)
  %687 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %684), !noalias !5
  %688 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %686, <8 x i32> %687, i32 1)
  %689 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %683, <16 x i32> %688, i32 24)
  %690 = bitcast <16 x i32> %689 to <32 x bfloat>
  %691 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %690, i32 0)
  %692 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %676, i32 -2, i32 1)
  %693 = and <16 x i32> %692, %4
  %694 = add <16 x i32> %45, %693
  %695 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %694, i32 0)
  %696 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %695), !noalias !10
  %697 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %696, i32 0)
  %698 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %695), !noalias !10
  %699 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %697, <8 x i32> %698, i32 1)
  %700 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %694, i32 1)
  %701 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %700), !noalias !10
  %702 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %701, i32 0)
  %703 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %700), !noalias !10
  %704 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %702, <8 x i32> %703, i32 1)
  %705 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %699, <16 x i32> %704, i32 24)
  %706 = bitcast <16 x i32> %705 to <32 x bfloat>
  %707 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %706, i32 0)
  %708 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %691, i32 0)
  %709 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %708, <16 x bfloat> %61, i32 1)
  %710 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %707, i32 0)
  %711 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %710, <16 x bfloat> %61, i32 1)
  %712 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %709, <32 x bfloat> %711, i32 60)
  %713 = load <16 x bfloat>, ptr %671, align 32, !tbaa !2
  %714 = getelementptr inbounds bfloat, ptr %0, i20 272
  %715 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %713, i32 8)
  %716 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %715, <16 x i32> %16, i32 2)
  %717 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %716, i32 0)
  %718 = bitcast <8 x i32> %717 to <16 x i16>
  %719 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %718, i32 0, i32 0)
  %720 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %719, i32 6, i32 1)
  %721 = add <16 x i32> %26, %720
  %722 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %721, i32 0)
  %723 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %722), !noalias !5
  %724 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %723, i32 0)
  %725 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %722), !noalias !5
  %726 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %724, <8 x i32> %725, i32 1)
  %727 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %721, i32 1)
  %728 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %727), !noalias !5
  %729 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %728, i32 0)
  %730 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %727), !noalias !5
  %731 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %729, <8 x i32> %730, i32 1)
  %732 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %726, <16 x i32> %731, i32 24)
  %733 = bitcast <16 x i32> %732 to <32 x bfloat>
  %734 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %733, i32 0)
  %735 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %719, i32 -2, i32 1)
  %736 = and <16 x i32> %735, %4
  %737 = add <16 x i32> %45, %736
  %738 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %737, i32 0)
  %739 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %738), !noalias !10
  %740 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %739, i32 0)
  %741 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %738), !noalias !10
  %742 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %740, <8 x i32> %741, i32 1)
  %743 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %737, i32 1)
  %744 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %743), !noalias !10
  %745 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %744, i32 0)
  %746 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %743), !noalias !10
  %747 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %745, <8 x i32> %746, i32 1)
  %748 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %742, <16 x i32> %747, i32 24)
  %749 = bitcast <16 x i32> %748 to <32 x bfloat>
  %750 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %749, i32 0)
  %751 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %734, i32 0)
  %752 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %751, <16 x bfloat> %61, i32 1)
  %753 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %750, i32 0)
  %754 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %753, <16 x bfloat> %61, i32 1)
  %755 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %752, <32 x bfloat> %754, i32 60)
  %756 = load <16 x bfloat>, ptr %714, align 32, !tbaa !2
  %757 = getelementptr inbounds bfloat, ptr %0, i20 288
  %758 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %756, i32 8)
  %759 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %758, <16 x i32> %16, i32 2)
  %760 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %759, i32 0)
  %761 = bitcast <8 x i32> %760 to <16 x i16>
  %762 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %761, i32 0, i32 0)
  %763 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %762, i32 6, i32 1)
  %764 = add <16 x i32> %26, %763
  %765 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %764, i32 0)
  %766 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %765), !noalias !5
  %767 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %766, i32 0)
  %768 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %765), !noalias !5
  %769 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %767, <8 x i32> %768, i32 1)
  %770 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %764, i32 1)
  %771 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %770), !noalias !5
  %772 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %771, i32 0)
  %773 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %770), !noalias !5
  %774 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %772, <8 x i32> %773, i32 1)
  %775 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %769, <16 x i32> %774, i32 24)
  %776 = bitcast <16 x i32> %775 to <32 x bfloat>
  %777 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %776, i32 0)
  %778 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %762, i32 -2, i32 1)
  %779 = and <16 x i32> %778, %4
  %780 = add <16 x i32> %45, %779
  %781 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %780, i32 0)
  %782 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %781), !noalias !10
  %783 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %782, i32 0)
  %784 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %781), !noalias !10
  %785 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %783, <8 x i32> %784, i32 1)
  %786 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %780, i32 1)
  %787 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %786), !noalias !10
  %788 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %787, i32 0)
  %789 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %786), !noalias !10
  %790 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %788, <8 x i32> %789, i32 1)
  %791 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %785, <16 x i32> %790, i32 24)
  %792 = bitcast <16 x i32> %791 to <32 x bfloat>
  %793 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %792, i32 0)
  %794 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %777, i32 0)
  %795 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %794, <16 x bfloat> %61, i32 1)
  %796 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %793, i32 0)
  %797 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %796, <16 x bfloat> %61, i32 1)
  %798 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %795, <32 x bfloat> %797, i32 60)
  %799 = load <16 x bfloat>, ptr %757, align 32, !tbaa !2
  %800 = getelementptr inbounds bfloat, ptr %0, i20 304
  %801 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %799, i32 8)
  %802 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %801, <16 x i32> %16, i32 2)
  %803 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %802, i32 0)
  %804 = bitcast <8 x i32> %803 to <16 x i16>
  %805 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %804, i32 0, i32 0)
  %806 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %805, i32 6, i32 1)
  %807 = add <16 x i32> %26, %806
  %808 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %807, i32 0)
  %809 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %808), !noalias !5
  %810 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %809, i32 0)
  %811 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %808), !noalias !5
  %812 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %810, <8 x i32> %811, i32 1)
  %813 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %807, i32 1)
  %814 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %813), !noalias !5
  %815 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %814, i32 0)
  %816 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %813), !noalias !5
  %817 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %815, <8 x i32> %816, i32 1)
  %818 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %812, <16 x i32> %817, i32 24)
  %819 = bitcast <16 x i32> %818 to <32 x bfloat>
  %820 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %819, i32 0)
  %821 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %805, i32 -2, i32 1)
  %822 = and <16 x i32> %821, %4
  %823 = add <16 x i32> %45, %822
  %824 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %823, i32 0)
  %825 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %824), !noalias !10
  %826 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %825, i32 0)
  %827 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %824), !noalias !10
  %828 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %826, <8 x i32> %827, i32 1)
  %829 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %823, i32 1)
  %830 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %829), !noalias !10
  %831 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %830, i32 0)
  %832 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %829), !noalias !10
  %833 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %831, <8 x i32> %832, i32 1)
  %834 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %828, <16 x i32> %833, i32 24)
  %835 = bitcast <16 x i32> %834 to <32 x bfloat>
  %836 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %835, i32 0)
  %837 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %820, i32 0)
  %838 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %837, <16 x bfloat> %61, i32 1)
  %839 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %836, i32 0)
  %840 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %839, <16 x bfloat> %61, i32 1)
  %841 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %838, <32 x bfloat> %840, i32 60)
  %842 = load <16 x bfloat>, ptr %800, align 32, !tbaa !2
  %843 = getelementptr inbounds bfloat, ptr %0, i20 320
  %844 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %842, i32 8)
  %845 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %844, <16 x i32> %16, i32 2)
  %846 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %845, i32 0)
  %847 = bitcast <8 x i32> %846 to <16 x i16>
  %848 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %847, i32 0, i32 0)
  %849 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %848, i32 6, i32 1)
  %850 = add <16 x i32> %26, %849
  %851 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %850, i32 0)
  %852 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %851), !noalias !5
  %853 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %852, i32 0)
  %854 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %851), !noalias !5
  %855 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %853, <8 x i32> %854, i32 1)
  %856 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %850, i32 1)
  %857 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %856), !noalias !5
  %858 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %857, i32 0)
  %859 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %856), !noalias !5
  %860 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %858, <8 x i32> %859, i32 1)
  %861 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %855, <16 x i32> %860, i32 24)
  %862 = bitcast <16 x i32> %861 to <32 x bfloat>
  %863 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %862, i32 0)
  %864 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %848, i32 -2, i32 1)
  %865 = and <16 x i32> %864, %4
  %866 = add <16 x i32> %45, %865
  %867 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %866, i32 0)
  %868 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %867), !noalias !10
  %869 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %868, i32 0)
  %870 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %867), !noalias !10
  %871 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %869, <8 x i32> %870, i32 1)
  %872 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %866, i32 1)
  %873 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %872), !noalias !10
  %874 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %873, i32 0)
  %875 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %872), !noalias !10
  %876 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %874, <8 x i32> %875, i32 1)
  %877 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %871, <16 x i32> %876, i32 24)
  %878 = bitcast <16 x i32> %877 to <32 x bfloat>
  %879 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %878, i32 0)
  %880 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %863, i32 0)
  %881 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %880, <16 x bfloat> %61, i32 1)
  %882 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %879, i32 0)
  %883 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %882, <16 x bfloat> %61, i32 1)
  %884 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %881, <32 x bfloat> %883, i32 60)
  %885 = load <16 x bfloat>, ptr %843, align 32, !tbaa !2
  %886 = getelementptr inbounds bfloat, ptr %0, i20 336
  %887 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %885, i32 8)
  %888 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %887, <16 x i32> %16, i32 2)
  %889 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %888, i32 0)
  %890 = bitcast <8 x i32> %889 to <16 x i16>
  %891 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %890, i32 0, i32 0)
  %892 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %891, i32 6, i32 1)
  %893 = add <16 x i32> %26, %892
  %894 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %893, i32 0)
  %895 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %894), !noalias !5
  %896 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %895, i32 0)
  %897 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %894), !noalias !5
  %898 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %896, <8 x i32> %897, i32 1)
  %899 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %893, i32 1)
  %900 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %899), !noalias !5
  %901 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %900, i32 0)
  %902 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %899), !noalias !5
  %903 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %901, <8 x i32> %902, i32 1)
  %904 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %898, <16 x i32> %903, i32 24)
  %905 = bitcast <16 x i32> %904 to <32 x bfloat>
  %906 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %905, i32 0)
  %907 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %891, i32 -2, i32 1)
  %908 = and <16 x i32> %907, %4
  %909 = add <16 x i32> %45, %908
  %910 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %909, i32 0)
  %911 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %910), !noalias !10
  %912 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %911, i32 0)
  %913 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %910), !noalias !10
  %914 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %912, <8 x i32> %913, i32 1)
  %915 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %909, i32 1)
  %916 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %915), !noalias !10
  %917 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %916, i32 0)
  %918 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %915), !noalias !10
  %919 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %917, <8 x i32> %918, i32 1)
  %920 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %914, <16 x i32> %919, i32 24)
  %921 = bitcast <16 x i32> %920 to <32 x bfloat>
  %922 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %921, i32 0)
  %923 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %906, i32 0)
  %924 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %923, <16 x bfloat> %61, i32 1)
  %925 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %922, i32 0)
  %926 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %925, <16 x bfloat> %61, i32 1)
  %927 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %924, <32 x bfloat> %926, i32 60)
  %928 = load <16 x bfloat>, ptr %886, align 32, !tbaa !2
  %929 = getelementptr inbounds bfloat, ptr %0, i20 352
  %930 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %928, i32 8)
  %931 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %930, <16 x i32> %16, i32 2)
  %932 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %931, i32 0)
  %933 = bitcast <8 x i32> %932 to <16 x i16>
  %934 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %933, i32 0, i32 0)
  %935 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %934, i32 6, i32 1)
  %936 = add <16 x i32> %26, %935
  %937 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %936, i32 0)
  %938 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %937), !noalias !5
  %939 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %938, i32 0)
  %940 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %937), !noalias !5
  %941 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %939, <8 x i32> %940, i32 1)
  %942 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %936, i32 1)
  %943 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %942), !noalias !5
  %944 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %943, i32 0)
  %945 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %942), !noalias !5
  %946 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %944, <8 x i32> %945, i32 1)
  %947 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %941, <16 x i32> %946, i32 24)
  %948 = bitcast <16 x i32> %947 to <32 x bfloat>
  %949 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %948, i32 0)
  %950 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %934, i32 -2, i32 1)
  %951 = and <16 x i32> %950, %4
  %952 = add <16 x i32> %45, %951
  %953 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %952, i32 0)
  %954 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %953), !noalias !10
  %955 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %954, i32 0)
  %956 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %953), !noalias !10
  %957 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %955, <8 x i32> %956, i32 1)
  %958 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %952, i32 1)
  %959 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %958), !noalias !10
  %960 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %959, i32 0)
  %961 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %958), !noalias !10
  %962 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %960, <8 x i32> %961, i32 1)
  %963 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %957, <16 x i32> %962, i32 24)
  %964 = bitcast <16 x i32> %963 to <32 x bfloat>
  %965 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %964, i32 0)
  %966 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %949, i32 0)
  %967 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %966, <16 x bfloat> %61, i32 1)
  %968 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %965, i32 0)
  %969 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %968, <16 x bfloat> %61, i32 1)
  %970 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %967, <32 x bfloat> %969, i32 60)
  %971 = load <16 x bfloat>, ptr %929, align 32, !tbaa !2
  %972 = getelementptr inbounds bfloat, ptr %0, i20 368
  %973 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %971, i32 8)
  %974 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %973, <16 x i32> %16, i32 2)
  %975 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %974, i32 0)
  %976 = bitcast <8 x i32> %975 to <16 x i16>
  %977 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %976, i32 0, i32 0)
  %978 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %977, i32 6, i32 1)
  %979 = add <16 x i32> %26, %978
  %980 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %979, i32 0)
  %981 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %980), !noalias !5
  %982 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %981, i32 0)
  %983 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %980), !noalias !5
  %984 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %982, <8 x i32> %983, i32 1)
  %985 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %979, i32 1)
  %986 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %985), !noalias !5
  %987 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %986, i32 0)
  %988 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %985), !noalias !5
  %989 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %987, <8 x i32> %988, i32 1)
  %990 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %984, <16 x i32> %989, i32 24)
  %991 = bitcast <16 x i32> %990 to <32 x bfloat>
  %992 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %991, i32 0)
  %993 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %977, i32 -2, i32 1)
  %994 = and <16 x i32> %993, %4
  %995 = add <16 x i32> %45, %994
  %996 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %995, i32 0)
  %997 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %996), !noalias !10
  %998 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %997, i32 0)
  %999 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %996), !noalias !10
  %1000 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %998, <8 x i32> %999, i32 1)
  %1001 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %995, i32 1)
  %1002 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1001), !noalias !10
  %1003 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1002, i32 0)
  %1004 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1001), !noalias !10
  %1005 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1003, <8 x i32> %1004, i32 1)
  %1006 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1000, <16 x i32> %1005, i32 24)
  %1007 = bitcast <16 x i32> %1006 to <32 x bfloat>
  %1008 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1007, i32 0)
  %1009 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %992, i32 0)
  %1010 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1009, <16 x bfloat> %61, i32 1)
  %1011 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1008, i32 0)
  %1012 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1011, <16 x bfloat> %61, i32 1)
  %1013 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1010, <32 x bfloat> %1012, i32 60)
  %1014 = load <16 x bfloat>, ptr %972, align 32, !tbaa !2
  %1015 = getelementptr inbounds bfloat, ptr %0, i20 384
  %1016 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %1014, i32 8)
  %1017 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1016, <16 x i32> %16, i32 2)
  %1018 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1017, i32 0)
  %1019 = bitcast <8 x i32> %1018 to <16 x i16>
  %1020 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %1019, i32 0, i32 0)
  %1021 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1020, i32 6, i32 1)
  %1022 = add <16 x i32> %26, %1021
  %1023 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1022, i32 0)
  %1024 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1023), !noalias !5
  %1025 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1024, i32 0)
  %1026 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1023), !noalias !5
  %1027 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1025, <8 x i32> %1026, i32 1)
  %1028 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1022, i32 1)
  %1029 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1028), !noalias !5
  %1030 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1029, i32 0)
  %1031 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1028), !noalias !5
  %1032 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1030, <8 x i32> %1031, i32 1)
  %1033 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1027, <16 x i32> %1032, i32 24)
  %1034 = bitcast <16 x i32> %1033 to <32 x bfloat>
  %1035 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1034, i32 0)
  %1036 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1020, i32 -2, i32 1)
  %1037 = and <16 x i32> %1036, %4
  %1038 = add <16 x i32> %45, %1037
  %1039 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1038, i32 0)
  %1040 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1039), !noalias !10
  %1041 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1040, i32 0)
  %1042 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1039), !noalias !10
  %1043 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1041, <8 x i32> %1042, i32 1)
  %1044 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1038, i32 1)
  %1045 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1044), !noalias !10
  %1046 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1045, i32 0)
  %1047 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1044), !noalias !10
  %1048 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1046, <8 x i32> %1047, i32 1)
  %1049 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1043, <16 x i32> %1048, i32 24)
  %1050 = bitcast <16 x i32> %1049 to <32 x bfloat>
  %1051 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1050, i32 0)
  %1052 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1035, i32 0)
  %1053 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1052, <16 x bfloat> %61, i32 1)
  %1054 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1051, i32 0)
  %1055 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1054, <16 x bfloat> %61, i32 1)
  %1056 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1053, <32 x bfloat> %1055, i32 60)
  %1057 = load <16 x bfloat>, ptr %1015, align 32, !tbaa !2
  %1058 = getelementptr inbounds bfloat, ptr %0, i20 400
  %1059 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %1057, i32 8)
  %1060 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1059, <16 x i32> %16, i32 2)
  %1061 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1060, i32 0)
  %1062 = bitcast <8 x i32> %1061 to <16 x i16>
  %1063 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %1062, i32 0, i32 0)
  %1064 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1063, i32 6, i32 1)
  %1065 = add <16 x i32> %26, %1064
  %1066 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1065, i32 0)
  %1067 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1066), !noalias !5
  %1068 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1067, i32 0)
  %1069 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1066), !noalias !5
  %1070 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1068, <8 x i32> %1069, i32 1)
  %1071 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1065, i32 1)
  %1072 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1071), !noalias !5
  %1073 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1072, i32 0)
  %1074 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1071), !noalias !5
  %1075 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1073, <8 x i32> %1074, i32 1)
  %1076 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1070, <16 x i32> %1075, i32 24)
  %1077 = bitcast <16 x i32> %1076 to <32 x bfloat>
  %1078 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1077, i32 0)
  %1079 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1063, i32 -2, i32 1)
  %1080 = and <16 x i32> %1079, %4
  %1081 = add <16 x i32> %45, %1080
  %1082 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1081, i32 0)
  %1083 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1082), !noalias !10
  %1084 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1083, i32 0)
  %1085 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1082), !noalias !10
  %1086 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1084, <8 x i32> %1085, i32 1)
  %1087 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1081, i32 1)
  %1088 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1087), !noalias !10
  %1089 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1088, i32 0)
  %1090 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1087), !noalias !10
  %1091 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1089, <8 x i32> %1090, i32 1)
  %1092 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1086, <16 x i32> %1091, i32 24)
  %1093 = bitcast <16 x i32> %1092 to <32 x bfloat>
  %1094 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1093, i32 0)
  %1095 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1078, i32 0)
  %1096 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1095, <16 x bfloat> %61, i32 1)
  %1097 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1094, i32 0)
  %1098 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1097, <16 x bfloat> %61, i32 1)
  %1099 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1096, <32 x bfloat> %1098, i32 60)
  %1100 = load <16 x bfloat>, ptr %1058, align 32, !tbaa !2
  %1101 = getelementptr inbounds bfloat, ptr %0, i20 416
  %1102 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %1100, i32 8)
  %1103 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1102, <16 x i32> %16, i32 2)
  %1104 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1103, i32 0)
  %1105 = bitcast <8 x i32> %1104 to <16 x i16>
  %1106 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %1105, i32 0, i32 0)
  %1107 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1106, i32 6, i32 1)
  %1108 = add <16 x i32> %26, %1107
  %1109 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1108, i32 0)
  %1110 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1109), !noalias !5
  %1111 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1110, i32 0)
  %1112 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1109), !noalias !5
  %1113 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1111, <8 x i32> %1112, i32 1)
  %1114 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1108, i32 1)
  %1115 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1114), !noalias !5
  %1116 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1115, i32 0)
  %1117 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1114), !noalias !5
  %1118 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1116, <8 x i32> %1117, i32 1)
  %1119 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1113, <16 x i32> %1118, i32 24)
  %1120 = bitcast <16 x i32> %1119 to <32 x bfloat>
  %1121 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1120, i32 0)
  %1122 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1106, i32 -2, i32 1)
  %1123 = and <16 x i32> %1122, %4
  %1124 = add <16 x i32> %45, %1123
  %1125 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1124, i32 0)
  %1126 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1125), !noalias !10
  %1127 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1126, i32 0)
  %1128 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1125), !noalias !10
  %1129 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1127, <8 x i32> %1128, i32 1)
  %1130 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1124, i32 1)
  %1131 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1130), !noalias !10
  %1132 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1131, i32 0)
  %1133 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1130), !noalias !10
  %1134 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1132, <8 x i32> %1133, i32 1)
  %1135 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1129, <16 x i32> %1134, i32 24)
  %1136 = bitcast <16 x i32> %1135 to <32 x bfloat>
  %1137 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1136, i32 0)
  %1138 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1121, i32 0)
  %1139 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1138, <16 x bfloat> %61, i32 1)
  %1140 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1137, i32 0)
  %1141 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1140, <16 x bfloat> %61, i32 1)
  %1142 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1139, <32 x bfloat> %1141, i32 60)
  %1143 = load <16 x bfloat>, ptr %1101, align 32, !tbaa !2
  %1144 = getelementptr inbounds bfloat, ptr %0, i20 432
  %1145 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %1143, i32 8)
  %1146 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1145, <16 x i32> %16, i32 2)
  %1147 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1146, i32 0)
  %1148 = bitcast <8 x i32> %1147 to <16 x i16>
  %1149 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %1148, i32 0, i32 0)
  %1150 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1149, i32 6, i32 1)
  %1151 = add <16 x i32> %26, %1150
  %1152 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1151, i32 0)
  %1153 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1152), !noalias !5
  %1154 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1153, i32 0)
  %1155 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1152), !noalias !5
  %1156 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1154, <8 x i32> %1155, i32 1)
  %1157 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1151, i32 1)
  %1158 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1157), !noalias !5
  %1159 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1158, i32 0)
  %1160 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1157), !noalias !5
  %1161 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1159, <8 x i32> %1160, i32 1)
  %1162 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1156, <16 x i32> %1161, i32 24)
  %1163 = bitcast <16 x i32> %1162 to <32 x bfloat>
  %1164 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1163, i32 0)
  %1165 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1149, i32 -2, i32 1)
  %1166 = and <16 x i32> %1165, %4
  %1167 = add <16 x i32> %45, %1166
  %1168 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1167, i32 0)
  %1169 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1168), !noalias !10
  %1170 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1169, i32 0)
  %1171 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1168), !noalias !10
  %1172 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1170, <8 x i32> %1171, i32 1)
  %1173 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1167, i32 1)
  %1174 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1173), !noalias !10
  %1175 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1174, i32 0)
  %1176 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1173), !noalias !10
  %1177 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1175, <8 x i32> %1176, i32 1)
  %1178 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1172, <16 x i32> %1177, i32 24)
  %1179 = bitcast <16 x i32> %1178 to <32 x bfloat>
  %1180 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1179, i32 0)
  %1181 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1164, i32 0)
  %1182 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1181, <16 x bfloat> %61, i32 1)
  %1183 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1180, i32 0)
  %1184 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1183, <16 x bfloat> %61, i32 1)
  %1185 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1182, <32 x bfloat> %1184, i32 60)
  %1186 = load <16 x bfloat>, ptr %1144, align 32, !tbaa !2
  %1187 = getelementptr inbounds bfloat, ptr %0, i20 448
  %1188 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %1186, i32 8)
  %1189 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1188, <16 x i32> %16, i32 2)
  %1190 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1189, i32 0)
  %1191 = bitcast <8 x i32> %1190 to <16 x i16>
  %1192 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %1191, i32 0, i32 0)
  %1193 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1192, i32 6, i32 1)
  %1194 = add <16 x i32> %26, %1193
  %1195 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1194, i32 0)
  %1196 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1195), !noalias !5
  %1197 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1196, i32 0)
  %1198 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1195), !noalias !5
  %1199 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1197, <8 x i32> %1198, i32 1)
  %1200 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1194, i32 1)
  %1201 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1200), !noalias !5
  %1202 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1201, i32 0)
  %1203 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1200), !noalias !5
  %1204 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1202, <8 x i32> %1203, i32 1)
  %1205 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1199, <16 x i32> %1204, i32 24)
  %1206 = bitcast <16 x i32> %1205 to <32 x bfloat>
  %1207 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1206, i32 0)
  %1208 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1192, i32 -2, i32 1)
  %1209 = and <16 x i32> %1208, %4
  %1210 = add <16 x i32> %45, %1209
  %1211 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1210, i32 0)
  %1212 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1211), !noalias !10
  %1213 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1212, i32 0)
  %1214 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1211), !noalias !10
  %1215 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1213, <8 x i32> %1214, i32 1)
  %1216 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1210, i32 1)
  %1217 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1216), !noalias !10
  %1218 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1217, i32 0)
  %1219 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1216), !noalias !10
  %1220 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1218, <8 x i32> %1219, i32 1)
  %1221 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1215, <16 x i32> %1220, i32 24)
  %1222 = bitcast <16 x i32> %1221 to <32 x bfloat>
  %1223 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1222, i32 0)
  %1224 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1207, i32 0)
  %1225 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1224, <16 x bfloat> %61, i32 1)
  %1226 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1223, i32 0)
  %1227 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1226, <16 x bfloat> %61, i32 1)
  %1228 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1225, <32 x bfloat> %1227, i32 60)
  %1229 = load <16 x bfloat>, ptr %1187, align 32, !tbaa !2
  %1230 = getelementptr inbounds bfloat, ptr %0, i20 464
  %1231 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %1229, i32 8)
  %1232 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1231, <16 x i32> %16, i32 2)
  %1233 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1232, i32 0)
  %1234 = bitcast <8 x i32> %1233 to <16 x i16>
  %1235 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %1234, i32 0, i32 0)
  %1236 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1235, i32 6, i32 1)
  %1237 = add <16 x i32> %26, %1236
  %1238 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1237, i32 0)
  %1239 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1238), !noalias !5
  %1240 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1239, i32 0)
  %1241 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1238), !noalias !5
  %1242 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1240, <8 x i32> %1241, i32 1)
  %1243 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1237, i32 1)
  %1244 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1243), !noalias !5
  %1245 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1244, i32 0)
  %1246 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1243), !noalias !5
  %1247 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1245, <8 x i32> %1246, i32 1)
  %1248 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1242, <16 x i32> %1247, i32 24)
  %1249 = bitcast <16 x i32> %1248 to <32 x bfloat>
  %1250 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1249, i32 0)
  %1251 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1235, i32 -2, i32 1)
  %1252 = and <16 x i32> %1251, %4
  %1253 = add <16 x i32> %45, %1252
  %1254 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1253, i32 0)
  %1255 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1254), !noalias !10
  %1256 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1255, i32 0)
  %1257 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1254), !noalias !10
  %1258 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1256, <8 x i32> %1257, i32 1)
  %1259 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1253, i32 1)
  %1260 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1259), !noalias !10
  %1261 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1260, i32 0)
  %1262 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1259), !noalias !10
  %1263 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1261, <8 x i32> %1262, i32 1)
  %1264 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1258, <16 x i32> %1263, i32 24)
  %1265 = bitcast <16 x i32> %1264 to <32 x bfloat>
  %1266 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1265, i32 0)
  %1267 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1250, i32 0)
  %1268 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1267, <16 x bfloat> %61, i32 1)
  %1269 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1266, i32 0)
  %1270 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1269, <16 x bfloat> %61, i32 1)
  %1271 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1268, <32 x bfloat> %1270, i32 60)
  %1272 = load <16 x bfloat>, ptr %1230, align 32, !tbaa !2
  %1273 = getelementptr inbounds bfloat, ptr %0, i20 480
  %1274 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %1272, i32 8)
  %1275 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1274, <16 x i32> %16, i32 2)
  %1276 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1275, i32 0)
  %1277 = bitcast <8 x i32> %1276 to <16 x i16>
  %1278 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %1277, i32 0, i32 0)
  %1279 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1278, i32 6, i32 1)
  %1280 = add <16 x i32> %26, %1279
  %1281 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1280, i32 0)
  %1282 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1281), !noalias !5
  %1283 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1282, i32 0)
  %1284 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1281), !noalias !5
  %1285 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1283, <8 x i32> %1284, i32 1)
  %1286 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1280, i32 1)
  %1287 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1286), !noalias !5
  %1288 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1287, i32 0)
  %1289 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1286), !noalias !5
  %1290 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1288, <8 x i32> %1289, i32 1)
  %1291 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1285, <16 x i32> %1290, i32 24)
  %1292 = bitcast <16 x i32> %1291 to <32 x bfloat>
  %1293 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1292, i32 0)
  %1294 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1278, i32 -2, i32 1)
  %1295 = and <16 x i32> %1294, %4
  %1296 = add <16 x i32> %45, %1295
  %1297 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1296, i32 0)
  %1298 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1297), !noalias !10
  %1299 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1298, i32 0)
  %1300 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1297), !noalias !10
  %1301 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1299, <8 x i32> %1300, i32 1)
  %1302 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1296, i32 1)
  %1303 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1302), !noalias !10
  %1304 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1303, i32 0)
  %1305 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1302), !noalias !10
  %1306 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1304, <8 x i32> %1305, i32 1)
  %1307 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1301, <16 x i32> %1306, i32 24)
  %1308 = bitcast <16 x i32> %1307 to <32 x bfloat>
  %1309 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1308, i32 0)
  %1310 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1293, i32 0)
  %1311 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1310, <16 x bfloat> %61, i32 1)
  %1312 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1309, i32 0)
  %1313 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1312, <16 x bfloat> %61, i32 1)
  %1314 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1311, <32 x bfloat> %1313, i32 60)
  %1315 = load <16 x bfloat>, ptr %1273, align 32, !tbaa !2
  %1316 = getelementptr inbounds bfloat, ptr %0, i20 496
  %1317 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %1315, i32 8)
  %1318 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1317, <16 x i32> %16, i32 2)
  %1319 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1318, i32 0)
  %1320 = bitcast <8 x i32> %1319 to <16 x i16>
  %1321 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %1320, i32 0, i32 0)
  %1322 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1321, i32 6, i32 1)
  %1323 = add <16 x i32> %26, %1322
  %1324 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1323, i32 0)
  %1325 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1324), !noalias !5
  %1326 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1325, i32 0)
  %1327 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1324), !noalias !5
  %1328 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1326, <8 x i32> %1327, i32 1)
  %1329 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1323, i32 1)
  %1330 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1329), !noalias !5
  %1331 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1330, i32 0)
  %1332 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1329), !noalias !5
  %1333 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1331, <8 x i32> %1332, i32 1)
  %1334 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1328, <16 x i32> %1333, i32 24)
  %1335 = bitcast <16 x i32> %1334 to <32 x bfloat>
  %1336 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1335, i32 0)
  %1337 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1321, i32 -2, i32 1)
  %1338 = and <16 x i32> %1337, %4
  %1339 = add <16 x i32> %45, %1338
  %1340 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1339, i32 0)
  %1341 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1340), !noalias !10
  %1342 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1341, i32 0)
  %1343 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1340), !noalias !10
  %1344 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1342, <8 x i32> %1343, i32 1)
  %1345 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1339, i32 1)
  %1346 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1345), !noalias !10
  %1347 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1346, i32 0)
  %1348 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1345), !noalias !10
  %1349 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1347, <8 x i32> %1348, i32 1)
  %1350 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1344, <16 x i32> %1349, i32 24)
  %1351 = bitcast <16 x i32> %1350 to <32 x bfloat>
  %1352 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1351, i32 0)
  %1353 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1336, i32 0)
  %1354 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1353, <16 x bfloat> %61, i32 1)
  %1355 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1352, i32 0)
  %1356 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1355, <16 x bfloat> %61, i32 1)
  %1357 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1354, <32 x bfloat> %1356, i32 60)
  %1358 = load <16 x bfloat>, ptr %1316, align 32, !tbaa !2
  %1359 = getelementptr inbounds bfloat, ptr %0, i20 512
  %1360 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %1358, i32 8)
  %1361 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1360, <16 x i32> %16, i32 2)
  %1362 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1361, i32 0)
  %1363 = bitcast <8 x i32> %1362 to <16 x i16>
  %1364 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %1363, i32 0, i32 0)
  %1365 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1364, i32 6, i32 1)
  %1366 = add <16 x i32> %26, %1365
  %1367 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1366, i32 0)
  %1368 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1367), !noalias !5
  %1369 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1368, i32 0)
  %1370 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1367), !noalias !5
  %1371 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1369, <8 x i32> %1370, i32 1)
  %1372 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1366, i32 1)
  %1373 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1372), !noalias !5
  %1374 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1373, i32 0)
  %1375 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1372), !noalias !5
  %1376 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1374, <8 x i32> %1375, i32 1)
  %1377 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1371, <16 x i32> %1376, i32 24)
  %1378 = bitcast <16 x i32> %1377 to <32 x bfloat>
  %1379 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1378, i32 0)
  %1380 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1364, i32 -2, i32 1)
  %1381 = and <16 x i32> %1380, %4
  %1382 = add <16 x i32> %45, %1381
  %1383 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1382, i32 0)
  %1384 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1383), !noalias !10
  %1385 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1384, i32 0)
  %1386 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1383), !noalias !10
  %1387 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1385, <8 x i32> %1386, i32 1)
  %1388 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1382, i32 1)
  %1389 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1388), !noalias !10
  %1390 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1389, i32 0)
  %1391 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1388), !noalias !10
  %1392 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1390, <8 x i32> %1391, i32 1)
  %1393 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1387, <16 x i32> %1392, i32 24)
  %1394 = bitcast <16 x i32> %1393 to <32 x bfloat>
  %1395 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1394, i32 0)
  %1396 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1379, i32 0)
  %1397 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1396, <16 x bfloat> %61, i32 1)
  %1398 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1395, i32 0)
  %1399 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1398, <16 x bfloat> %61, i32 1)
  %1400 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1397, <32 x bfloat> %1399, i32 60)
  %1401 = load <16 x bfloat>, ptr %1359, align 32, !tbaa !2
  %1402 = getelementptr inbounds bfloat, ptr %0, i20 528
  %1403 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %1401, i32 8)
  %1404 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1403, <16 x i32> %16, i32 2)
  %1405 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1404, i32 0)
  %1406 = bitcast <8 x i32> %1405 to <16 x i16>
  %1407 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %1406, i32 0, i32 0)
  %1408 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1407, i32 6, i32 1)
  %1409 = add <16 x i32> %26, %1408
  %1410 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1409, i32 0)
  %1411 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1410), !noalias !5
  %1412 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1411, i32 0)
  %1413 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1410), !noalias !5
  %1414 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1412, <8 x i32> %1413, i32 1)
  %1415 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1409, i32 1)
  %1416 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1415), !noalias !5
  %1417 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1416, i32 0)
  %1418 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1415), !noalias !5
  %1419 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1417, <8 x i32> %1418, i32 1)
  %1420 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1414, <16 x i32> %1419, i32 24)
  %1421 = bitcast <16 x i32> %1420 to <32 x bfloat>
  %1422 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1421, i32 0)
  %1423 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1407, i32 -2, i32 1)
  %1424 = and <16 x i32> %1423, %4
  %1425 = add <16 x i32> %45, %1424
  %1426 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1425, i32 0)
  %1427 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1426), !noalias !10
  %1428 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1427, i32 0)
  %1429 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1426), !noalias !10
  %1430 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1428, <8 x i32> %1429, i32 1)
  %1431 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1425, i32 1)
  %1432 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1431), !noalias !10
  %1433 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1432, i32 0)
  %1434 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1431), !noalias !10
  %1435 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1433, <8 x i32> %1434, i32 1)
  %1436 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1430, <16 x i32> %1435, i32 24)
  %1437 = bitcast <16 x i32> %1436 to <32 x bfloat>
  %1438 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1437, i32 0)
  %1439 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1422, i32 0)
  %1440 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1439, <16 x bfloat> %61, i32 1)
  %1441 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1438, i32 0)
  %1442 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1441, <16 x bfloat> %61, i32 1)
  %1443 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1440, <32 x bfloat> %1442, i32 60)
  %1444 = load <16 x bfloat>, ptr %1402, align 32, !tbaa !2
  %1445 = getelementptr inbounds bfloat, ptr %0, i20 544
  %1446 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %1444, i32 8)
  %1447 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1446, <16 x i32> %16, i32 2)
  %1448 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1447, i32 0)
  %1449 = bitcast <8 x i32> %1448 to <16 x i16>
  %1450 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %1449, i32 0, i32 0)
  %1451 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1450, i32 6, i32 1)
  %1452 = add <16 x i32> %26, %1451
  %1453 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1452, i32 0)
  %1454 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1453), !noalias !5
  %1455 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1454, i32 0)
  %1456 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1453), !noalias !5
  %1457 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1455, <8 x i32> %1456, i32 1)
  %1458 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1452, i32 1)
  %1459 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1458), !noalias !5
  %1460 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1459, i32 0)
  %1461 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1458), !noalias !5
  %1462 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1460, <8 x i32> %1461, i32 1)
  %1463 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1457, <16 x i32> %1462, i32 24)
  %1464 = bitcast <16 x i32> %1463 to <32 x bfloat>
  %1465 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1464, i32 0)
  %1466 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1450, i32 -2, i32 1)
  %1467 = and <16 x i32> %1466, %4
  %1468 = add <16 x i32> %45, %1467
  %1469 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1468, i32 0)
  %1470 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1469), !noalias !10
  %1471 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1470, i32 0)
  %1472 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1469), !noalias !10
  %1473 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1471, <8 x i32> %1472, i32 1)
  %1474 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1468, i32 1)
  %1475 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1474), !noalias !10
  %1476 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1475, i32 0)
  %1477 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1474), !noalias !10
  %1478 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1476, <8 x i32> %1477, i32 1)
  %1479 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1473, <16 x i32> %1478, i32 24)
  %1480 = bitcast <16 x i32> %1479 to <32 x bfloat>
  %1481 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1480, i32 0)
  %1482 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1465, i32 0)
  %1483 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1482, <16 x bfloat> %61, i32 1)
  %1484 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1481, i32 0)
  %1485 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1484, <16 x bfloat> %61, i32 1)
  %1486 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1483, <32 x bfloat> %1485, i32 60)
  %1487 = load <16 x bfloat>, ptr %1445, align 32, !tbaa !2
  %1488 = getelementptr inbounds bfloat, ptr %0, i20 560
  %1489 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %1487, i32 8)
  %1490 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1489, <16 x i32> %16, i32 2)
  %1491 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1490, i32 0)
  %1492 = bitcast <8 x i32> %1491 to <16 x i16>
  %1493 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %1492, i32 0, i32 0)
  %1494 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1493, i32 6, i32 1)
  %1495 = add <16 x i32> %26, %1494
  %1496 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1495, i32 0)
  %1497 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1496), !noalias !5
  %1498 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1497, i32 0)
  %1499 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1496), !noalias !5
  %1500 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1498, <8 x i32> %1499, i32 1)
  %1501 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1495, i32 1)
  %1502 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1501), !noalias !5
  %1503 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1502, i32 0)
  %1504 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1501), !noalias !5
  %1505 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1503, <8 x i32> %1504, i32 1)
  %1506 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1500, <16 x i32> %1505, i32 24)
  %1507 = bitcast <16 x i32> %1506 to <32 x bfloat>
  %1508 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1507, i32 0)
  %1509 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1493, i32 -2, i32 1)
  %1510 = and <16 x i32> %1509, %4
  %1511 = add <16 x i32> %45, %1510
  %1512 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1511, i32 0)
  %1513 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1512), !noalias !10
  %1514 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1513, i32 0)
  %1515 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1512), !noalias !10
  %1516 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1514, <8 x i32> %1515, i32 1)
  %1517 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1511, i32 1)
  %1518 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1517), !noalias !10
  %1519 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1518, i32 0)
  %1520 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1517), !noalias !10
  %1521 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1519, <8 x i32> %1520, i32 1)
  %1522 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1516, <16 x i32> %1521, i32 24)
  %1523 = bitcast <16 x i32> %1522 to <32 x bfloat>
  %1524 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1523, i32 0)
  %1525 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1508, i32 0)
  %1526 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1525, <16 x bfloat> %61, i32 1)
  %1527 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1524, i32 0)
  %1528 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1527, <16 x bfloat> %61, i32 1)
  %1529 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1526, <32 x bfloat> %1528, i32 60)
  %1530 = load <16 x bfloat>, ptr %1488, align 32, !tbaa !2
  %1531 = getelementptr inbounds bfloat, ptr %0, i20 576
  %1532 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %1530, i32 8)
  %1533 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1532, <16 x i32> %16, i32 2)
  %1534 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1533, i32 0)
  %1535 = bitcast <8 x i32> %1534 to <16 x i16>
  %1536 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %1535, i32 0, i32 0)
  %1537 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1536, i32 6, i32 1)
  %1538 = add <16 x i32> %26, %1537
  %1539 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1538, i32 0)
  %1540 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1539), !noalias !5
  %1541 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1540, i32 0)
  %1542 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1539), !noalias !5
  %1543 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1541, <8 x i32> %1542, i32 1)
  %1544 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1538, i32 1)
  %1545 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1544), !noalias !5
  %1546 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1545, i32 0)
  %1547 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1544), !noalias !5
  %1548 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1546, <8 x i32> %1547, i32 1)
  %1549 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1543, <16 x i32> %1548, i32 24)
  %1550 = bitcast <16 x i32> %1549 to <32 x bfloat>
  %1551 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1550, i32 0)
  %1552 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1536, i32 -2, i32 1)
  %1553 = and <16 x i32> %1552, %4
  %1554 = add <16 x i32> %45, %1553
  %1555 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1554, i32 0)
  %1556 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1555), !noalias !10
  %1557 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1556, i32 0)
  %1558 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1555), !noalias !10
  %1559 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1557, <8 x i32> %1558, i32 1)
  %1560 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1554, i32 1)
  %1561 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1560), !noalias !10
  %1562 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1561, i32 0)
  %1563 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1560), !noalias !10
  %1564 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1562, <8 x i32> %1563, i32 1)
  %1565 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1559, <16 x i32> %1564, i32 24)
  %1566 = bitcast <16 x i32> %1565 to <32 x bfloat>
  %1567 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1566, i32 0)
  %1568 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1551, i32 0)
  %1569 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1568, <16 x bfloat> %61, i32 1)
  %1570 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1567, i32 0)
  %1571 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1570, <16 x bfloat> %61, i32 1)
  %1572 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1569, <32 x bfloat> %1571, i32 60)
  %1573 = load <16 x bfloat>, ptr %1531, align 32, !tbaa !2
  %1574 = getelementptr inbounds bfloat, ptr %0, i20 592
  %1575 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %1573, i32 8)
  %1576 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1575, <16 x i32> %16, i32 2)
  %1577 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1576, i32 0)
  %1578 = bitcast <8 x i32> %1577 to <16 x i16>
  %1579 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %1578, i32 0, i32 0)
  %1580 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1579, i32 6, i32 1)
  %1581 = add <16 x i32> %26, %1580
  %1582 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1581, i32 0)
  %1583 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1582), !noalias !5
  %1584 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1583, i32 0)
  %1585 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1582), !noalias !5
  %1586 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1584, <8 x i32> %1585, i32 1)
  %1587 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1581, i32 1)
  %1588 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1587), !noalias !5
  %1589 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1588, i32 0)
  %1590 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1587), !noalias !5
  %1591 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1589, <8 x i32> %1590, i32 1)
  %1592 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1586, <16 x i32> %1591, i32 24)
  %1593 = bitcast <16 x i32> %1592 to <32 x bfloat>
  %1594 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1593, i32 0)
  %1595 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1579, i32 -2, i32 1)
  %1596 = and <16 x i32> %1595, %4
  %1597 = add <16 x i32> %45, %1596
  %1598 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1597, i32 0)
  %1599 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1598), !noalias !10
  %1600 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1599, i32 0)
  %1601 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1598), !noalias !10
  %1602 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1600, <8 x i32> %1601, i32 1)
  %1603 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1597, i32 1)
  %1604 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1603), !noalias !10
  %1605 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1604, i32 0)
  %1606 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1603), !noalias !10
  %1607 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1605, <8 x i32> %1606, i32 1)
  %1608 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1602, <16 x i32> %1607, i32 24)
  %1609 = bitcast <16 x i32> %1608 to <32 x bfloat>
  %1610 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1609, i32 0)
  %1611 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1594, i32 0)
  %1612 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1611, <16 x bfloat> %61, i32 1)
  %1613 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1610, i32 0)
  %1614 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1613, <16 x bfloat> %61, i32 1)
  %1615 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1612, <32 x bfloat> %1614, i32 60)
  %1616 = load <16 x bfloat>, ptr %1574, align 32, !tbaa !2
  %1617 = getelementptr inbounds bfloat, ptr %0, i20 608
  %1618 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %1616, i32 8)
  %1619 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1618, <16 x i32> %16, i32 2)
  %1620 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1619, i32 0)
  %1621 = bitcast <8 x i32> %1620 to <16 x i16>
  %1622 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %1621, i32 0, i32 0)
  %1623 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1622, i32 6, i32 1)
  %1624 = add <16 x i32> %26, %1623
  %1625 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1624, i32 0)
  %1626 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1625), !noalias !5
  %1627 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1626, i32 0)
  %1628 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1625), !noalias !5
  %1629 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1627, <8 x i32> %1628, i32 1)
  %1630 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1624, i32 1)
  %1631 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1630), !noalias !5
  %1632 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1631, i32 0)
  %1633 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1630), !noalias !5
  %1634 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1632, <8 x i32> %1633, i32 1)
  %1635 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1629, <16 x i32> %1634, i32 24)
  %1636 = bitcast <16 x i32> %1635 to <32 x bfloat>
  %1637 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1636, i32 0)
  %1638 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1622, i32 -2, i32 1)
  %1639 = and <16 x i32> %1638, %4
  %1640 = add <16 x i32> %45, %1639
  %1641 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1640, i32 0)
  %1642 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1641), !noalias !10
  %1643 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1642, i32 0)
  %1644 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1641), !noalias !10
  %1645 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1643, <8 x i32> %1644, i32 1)
  %1646 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1640, i32 1)
  %1647 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1646), !noalias !10
  %1648 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1647, i32 0)
  %1649 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1646), !noalias !10
  %1650 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1648, <8 x i32> %1649, i32 1)
  %1651 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1645, <16 x i32> %1650, i32 24)
  %1652 = bitcast <16 x i32> %1651 to <32 x bfloat>
  %1653 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1652, i32 0)
  %1654 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1637, i32 0)
  %1655 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1654, <16 x bfloat> %61, i32 1)
  %1656 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1653, i32 0)
  %1657 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1656, <16 x bfloat> %61, i32 1)
  %1658 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1655, <32 x bfloat> %1657, i32 60)
  %1659 = load <16 x bfloat>, ptr %1617, align 32, !tbaa !2
  %1660 = getelementptr inbounds bfloat, ptr %0, i20 624
  %1661 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %1659, i32 8)
  %1662 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1661, <16 x i32> %16, i32 2)
  %1663 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1662, i32 0)
  %1664 = bitcast <8 x i32> %1663 to <16 x i16>
  %1665 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %1664, i32 0, i32 0)
  %1666 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1665, i32 6, i32 1)
  %1667 = add <16 x i32> %26, %1666
  %1668 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1667, i32 0)
  %1669 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1668), !noalias !5
  %1670 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1669, i32 0)
  %1671 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1668), !noalias !5
  %1672 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1670, <8 x i32> %1671, i32 1)
  %1673 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1667, i32 1)
  %1674 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1673), !noalias !5
  %1675 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1674, i32 0)
  %1676 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1673), !noalias !5
  %1677 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1675, <8 x i32> %1676, i32 1)
  %1678 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1672, <16 x i32> %1677, i32 24)
  %1679 = bitcast <16 x i32> %1678 to <32 x bfloat>
  %1680 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1679, i32 0)
  %1681 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1665, i32 -2, i32 1)
  %1682 = and <16 x i32> %1681, %4
  %1683 = add <16 x i32> %45, %1682
  %1684 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1683, i32 0)
  %1685 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1684), !noalias !10
  %1686 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1685, i32 0)
  %1687 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1684), !noalias !10
  %1688 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1686, <8 x i32> %1687, i32 1)
  %1689 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1683, i32 1)
  %1690 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1689), !noalias !10
  %1691 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1690, i32 0)
  %1692 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1689), !noalias !10
  %1693 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1691, <8 x i32> %1692, i32 1)
  %1694 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1688, <16 x i32> %1693, i32 24)
  %1695 = bitcast <16 x i32> %1694 to <32 x bfloat>
  %1696 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1695, i32 0)
  %1697 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1680, i32 0)
  %1698 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1697, <16 x bfloat> %61, i32 1)
  %1699 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1696, i32 0)
  %1700 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1699, <16 x bfloat> %61, i32 1)
  %1701 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1698, <32 x bfloat> %1700, i32 60)
  %1702 = load <16 x bfloat>, ptr %1660, align 32, !tbaa !2
  %1703 = getelementptr inbounds bfloat, ptr %0, i20 640
  %1704 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %1702, i32 8)
  %1705 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1704, <16 x i32> %16, i32 2)
  %1706 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1705, i32 0)
  %1707 = bitcast <8 x i32> %1706 to <16 x i16>
  %1708 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %1707, i32 0, i32 0)
  %1709 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1708, i32 6, i32 1)
  %1710 = add <16 x i32> %26, %1709
  %1711 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1710, i32 0)
  %1712 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1711), !noalias !5
  %1713 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1712, i32 0)
  %1714 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1711), !noalias !5
  %1715 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1713, <8 x i32> %1714, i32 1)
  %1716 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1710, i32 1)
  %1717 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1716), !noalias !5
  %1718 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1717, i32 0)
  %1719 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1716), !noalias !5
  %1720 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1718, <8 x i32> %1719, i32 1)
  %1721 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1715, <16 x i32> %1720, i32 24)
  %1722 = bitcast <16 x i32> %1721 to <32 x bfloat>
  %1723 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1722, i32 0)
  %1724 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1708, i32 -2, i32 1)
  %1725 = and <16 x i32> %1724, %4
  %1726 = add <16 x i32> %45, %1725
  %1727 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1726, i32 0)
  %1728 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1727), !noalias !10
  %1729 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1728, i32 0)
  %1730 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1727), !noalias !10
  %1731 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1729, <8 x i32> %1730, i32 1)
  %1732 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1726, i32 1)
  %1733 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1732), !noalias !10
  %1734 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1733, i32 0)
  %1735 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1732), !noalias !10
  %1736 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1734, <8 x i32> %1735, i32 1)
  %1737 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1731, <16 x i32> %1736, i32 24)
  %1738 = bitcast <16 x i32> %1737 to <32 x bfloat>
  %1739 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1738, i32 0)
  %1740 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1723, i32 0)
  %1741 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1740, <16 x bfloat> %61, i32 1)
  %1742 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1739, i32 0)
  %1743 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1742, <16 x bfloat> %61, i32 1)
  %1744 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1741, <32 x bfloat> %1743, i32 60)
  %1745 = load <16 x bfloat>, ptr %1703, align 32, !tbaa !2
  %1746 = getelementptr inbounds bfloat, ptr %0, i20 656
  %1747 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %1745, i32 8)
  %1748 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1747, <16 x i32> %16, i32 2)
  %1749 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1748, i32 0)
  %1750 = bitcast <8 x i32> %1749 to <16 x i16>
  %1751 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %1750, i32 0, i32 0)
  %1752 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1751, i32 6, i32 1)
  %1753 = add <16 x i32> %26, %1752
  %1754 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1753, i32 0)
  %1755 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1754), !noalias !5
  %1756 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1755, i32 0)
  %1757 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1754), !noalias !5
  %1758 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1756, <8 x i32> %1757, i32 1)
  %1759 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1753, i32 1)
  %1760 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1759), !noalias !5
  %1761 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1760, i32 0)
  %1762 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1759), !noalias !5
  %1763 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1761, <8 x i32> %1762, i32 1)
  %1764 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1758, <16 x i32> %1763, i32 24)
  %1765 = bitcast <16 x i32> %1764 to <32 x bfloat>
  %1766 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1765, i32 0)
  %1767 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1751, i32 -2, i32 1)
  %1768 = and <16 x i32> %1767, %4
  %1769 = add <16 x i32> %45, %1768
  %1770 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1769, i32 0)
  %1771 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1770), !noalias !10
  %1772 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1771, i32 0)
  %1773 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1770), !noalias !10
  %1774 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1772, <8 x i32> %1773, i32 1)
  %1775 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1769, i32 1)
  %1776 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1775), !noalias !10
  %1777 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1776, i32 0)
  %1778 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1775), !noalias !10
  %1779 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1777, <8 x i32> %1778, i32 1)
  %1780 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1774, <16 x i32> %1779, i32 24)
  %1781 = bitcast <16 x i32> %1780 to <32 x bfloat>
  %1782 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1781, i32 0)
  %1783 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1766, i32 0)
  %1784 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1783, <16 x bfloat> %61, i32 1)
  %1785 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1782, i32 0)
  %1786 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1785, <16 x bfloat> %61, i32 1)
  %1787 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1784, <32 x bfloat> %1786, i32 60)
  %1788 = load <16 x bfloat>, ptr %1746, align 32, !tbaa !2
  %1789 = getelementptr inbounds bfloat, ptr %0, i20 672
  %1790 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %1788, i32 8)
  %1791 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1790, <16 x i32> %16, i32 2)
  %1792 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1791, i32 0)
  %1793 = bitcast <8 x i32> %1792 to <16 x i16>
  %1794 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %1793, i32 0, i32 0)
  %1795 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1794, i32 6, i32 1)
  %1796 = add <16 x i32> %26, %1795
  %1797 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1796, i32 0)
  %1798 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1797), !noalias !5
  %1799 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1798, i32 0)
  %1800 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1797), !noalias !5
  %1801 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1799, <8 x i32> %1800, i32 1)
  %1802 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1796, i32 1)
  %1803 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1802), !noalias !5
  %1804 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1803, i32 0)
  %1805 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1802), !noalias !5
  %1806 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1804, <8 x i32> %1805, i32 1)
  %1807 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1801, <16 x i32> %1806, i32 24)
  %1808 = bitcast <16 x i32> %1807 to <32 x bfloat>
  %1809 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1808, i32 0)
  %1810 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1794, i32 -2, i32 1)
  %1811 = and <16 x i32> %1810, %4
  %1812 = add <16 x i32> %45, %1811
  %1813 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1812, i32 0)
  %1814 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1813), !noalias !10
  %1815 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1814, i32 0)
  %1816 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1813), !noalias !10
  %1817 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1815, <8 x i32> %1816, i32 1)
  %1818 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1812, i32 1)
  %1819 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1818), !noalias !10
  %1820 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1819, i32 0)
  %1821 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1818), !noalias !10
  %1822 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1820, <8 x i32> %1821, i32 1)
  %1823 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1817, <16 x i32> %1822, i32 24)
  %1824 = bitcast <16 x i32> %1823 to <32 x bfloat>
  %1825 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1824, i32 0)
  %1826 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1809, i32 0)
  %1827 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1826, <16 x bfloat> %61, i32 1)
  %1828 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1825, i32 0)
  %1829 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1828, <16 x bfloat> %61, i32 1)
  %1830 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1827, <32 x bfloat> %1829, i32 60)
  %1831 = load <16 x bfloat>, ptr %1789, align 32, !tbaa !2
  %1832 = getelementptr inbounds bfloat, ptr %0, i20 688
  %1833 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %1831, i32 8)
  %1834 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1833, <16 x i32> %16, i32 2)
  %1835 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1834, i32 0)
  %1836 = bitcast <8 x i32> %1835 to <16 x i16>
  %1837 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %1836, i32 0, i32 0)
  %1838 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1837, i32 6, i32 1)
  %1839 = add <16 x i32> %26, %1838
  %1840 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1839, i32 0)
  %1841 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1840), !noalias !5
  %1842 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1841, i32 0)
  %1843 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1840), !noalias !5
  %1844 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1842, <8 x i32> %1843, i32 1)
  %1845 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1839, i32 1)
  %1846 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1845), !noalias !5
  %1847 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1846, i32 0)
  %1848 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1845), !noalias !5
  %1849 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1847, <8 x i32> %1848, i32 1)
  %1850 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1844, <16 x i32> %1849, i32 24)
  %1851 = bitcast <16 x i32> %1850 to <32 x bfloat>
  %1852 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1851, i32 0)
  %1853 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1837, i32 -2, i32 1)
  %1854 = and <16 x i32> %1853, %4
  %1855 = add <16 x i32> %45, %1854
  %1856 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1855, i32 0)
  %1857 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1856), !noalias !10
  %1858 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1857, i32 0)
  %1859 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1856), !noalias !10
  %1860 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1858, <8 x i32> %1859, i32 1)
  %1861 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1855, i32 1)
  %1862 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1861), !noalias !10
  %1863 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1862, i32 0)
  %1864 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1861), !noalias !10
  %1865 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1863, <8 x i32> %1864, i32 1)
  %1866 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1860, <16 x i32> %1865, i32 24)
  %1867 = bitcast <16 x i32> %1866 to <32 x bfloat>
  %1868 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1867, i32 0)
  %1869 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1852, i32 0)
  %1870 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1869, <16 x bfloat> %61, i32 1)
  %1871 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1868, i32 0)
  %1872 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1871, <16 x bfloat> %61, i32 1)
  %1873 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1870, <32 x bfloat> %1872, i32 60)
  %1874 = load <16 x bfloat>, ptr %1832, align 32, !tbaa !2
  %1875 = getelementptr inbounds bfloat, ptr %0, i20 704
  %1876 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %1874, i32 8)
  %1877 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1876, <16 x i32> %16, i32 2)
  %1878 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1877, i32 0)
  %1879 = bitcast <8 x i32> %1878 to <16 x i16>
  %1880 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %1879, i32 0, i32 0)
  %1881 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1880, i32 6, i32 1)
  %1882 = add <16 x i32> %26, %1881
  %1883 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1882, i32 0)
  %1884 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1883), !noalias !5
  %1885 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1884, i32 0)
  %1886 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1883), !noalias !5
  %1887 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1885, <8 x i32> %1886, i32 1)
  %1888 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1882, i32 1)
  %1889 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1888), !noalias !5
  %1890 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1889, i32 0)
  %1891 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1888), !noalias !5
  %1892 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1890, <8 x i32> %1891, i32 1)
  %1893 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1887, <16 x i32> %1892, i32 24)
  %1894 = bitcast <16 x i32> %1893 to <32 x bfloat>
  %1895 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1894, i32 0)
  %1896 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1880, i32 -2, i32 1)
  %1897 = and <16 x i32> %1896, %4
  %1898 = add <16 x i32> %45, %1897
  %1899 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1898, i32 0)
  %1900 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1899), !noalias !10
  %1901 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1900, i32 0)
  %1902 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1899), !noalias !10
  %1903 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1901, <8 x i32> %1902, i32 1)
  %1904 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1898, i32 1)
  %1905 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1904), !noalias !10
  %1906 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1905, i32 0)
  %1907 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1904), !noalias !10
  %1908 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1906, <8 x i32> %1907, i32 1)
  %1909 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1903, <16 x i32> %1908, i32 24)
  %1910 = bitcast <16 x i32> %1909 to <32 x bfloat>
  %1911 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1910, i32 0)
  %1912 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1895, i32 0)
  %1913 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1912, <16 x bfloat> %61, i32 1)
  %1914 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1911, i32 0)
  %1915 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1914, <16 x bfloat> %61, i32 1)
  %1916 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1913, <32 x bfloat> %1915, i32 60)
  %1917 = load <16 x bfloat>, ptr %1875, align 32, !tbaa !2
  %1918 = getelementptr inbounds bfloat, ptr %0, i20 720
  %1919 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %1917, i32 8)
  %1920 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1919, <16 x i32> %16, i32 2)
  %1921 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1920, i32 0)
  %1922 = bitcast <8 x i32> %1921 to <16 x i16>
  %1923 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %1922, i32 0, i32 0)
  %1924 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1923, i32 6, i32 1)
  %1925 = add <16 x i32> %26, %1924
  %1926 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1925, i32 0)
  %1927 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1926), !noalias !5
  %1928 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1927, i32 0)
  %1929 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1926), !noalias !5
  %1930 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1928, <8 x i32> %1929, i32 1)
  %1931 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1925, i32 1)
  %1932 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1931), !noalias !5
  %1933 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1932, i32 0)
  %1934 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1931), !noalias !5
  %1935 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1933, <8 x i32> %1934, i32 1)
  %1936 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1930, <16 x i32> %1935, i32 24)
  %1937 = bitcast <16 x i32> %1936 to <32 x bfloat>
  %1938 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1937, i32 0)
  %1939 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1923, i32 -2, i32 1)
  %1940 = and <16 x i32> %1939, %4
  %1941 = add <16 x i32> %45, %1940
  %1942 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1941, i32 0)
  %1943 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1942), !noalias !10
  %1944 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1943, i32 0)
  %1945 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1942), !noalias !10
  %1946 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1944, <8 x i32> %1945, i32 1)
  %1947 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1941, i32 1)
  %1948 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1947), !noalias !10
  %1949 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1948, i32 0)
  %1950 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1947), !noalias !10
  %1951 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1949, <8 x i32> %1950, i32 1)
  %1952 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1946, <16 x i32> %1951, i32 24)
  %1953 = bitcast <16 x i32> %1952 to <32 x bfloat>
  %1954 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1953, i32 0)
  %1955 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1938, i32 0)
  %1956 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1955, <16 x bfloat> %61, i32 1)
  %1957 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1954, i32 0)
  %1958 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1957, <16 x bfloat> %61, i32 1)
  %1959 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1956, <32 x bfloat> %1958, i32 60)
  %1960 = load <16 x bfloat>, ptr %1918, align 32, !tbaa !2
  %1961 = getelementptr inbounds bfloat, ptr %0, i20 736
  %1962 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %1960, i32 8)
  %1963 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1962, <16 x i32> %16, i32 2)
  %1964 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1963, i32 0)
  %1965 = bitcast <8 x i32> %1964 to <16 x i16>
  %1966 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %1965, i32 0, i32 0)
  %1967 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1966, i32 6, i32 1)
  %1968 = add <16 x i32> %26, %1967
  %1969 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1968, i32 0)
  %1970 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1969), !noalias !5
  %1971 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1970, i32 0)
  %1972 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1969), !noalias !5
  %1973 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1971, <8 x i32> %1972, i32 1)
  %1974 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1968, i32 1)
  %1975 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1974), !noalias !5
  %1976 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1975, i32 0)
  %1977 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1974), !noalias !5
  %1978 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1976, <8 x i32> %1977, i32 1)
  %1979 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1973, <16 x i32> %1978, i32 24)
  %1980 = bitcast <16 x i32> %1979 to <32 x bfloat>
  %1981 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1980, i32 0)
  %1982 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1966, i32 -2, i32 1)
  %1983 = and <16 x i32> %1982, %4
  %1984 = add <16 x i32> %45, %1983
  %1985 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1984, i32 0)
  %1986 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1985), !noalias !10
  %1987 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1986, i32 0)
  %1988 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1985), !noalias !10
  %1989 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1987, <8 x i32> %1988, i32 1)
  %1990 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1984, i32 1)
  %1991 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1990), !noalias !10
  %1992 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1991, i32 0)
  %1993 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1990), !noalias !10
  %1994 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1992, <8 x i32> %1993, i32 1)
  %1995 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1989, <16 x i32> %1994, i32 24)
  %1996 = bitcast <16 x i32> %1995 to <32 x bfloat>
  %1997 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1996, i32 0)
  %1998 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1981, i32 0)
  %1999 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1998, <16 x bfloat> %61, i32 1)
  %2000 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1997, i32 0)
  %2001 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2000, <16 x bfloat> %61, i32 1)
  %2002 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1999, <32 x bfloat> %2001, i32 60)
  %2003 = load <16 x bfloat>, ptr %1961, align 32, !tbaa !2
  %2004 = getelementptr inbounds bfloat, ptr %0, i20 752
  %2005 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %2003, i32 8)
  %2006 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2005, <16 x i32> %16, i32 2)
  %2007 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2006, i32 0)
  %2008 = bitcast <8 x i32> %2007 to <16 x i16>
  %2009 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %2008, i32 0, i32 0)
  %2010 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2009, i32 6, i32 1)
  %2011 = add <16 x i32> %26, %2010
  %2012 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2011, i32 0)
  %2013 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2012), !noalias !5
  %2014 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2013, i32 0)
  %2015 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2012), !noalias !5
  %2016 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2014, <8 x i32> %2015, i32 1)
  %2017 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2011, i32 1)
  %2018 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2017), !noalias !5
  %2019 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2018, i32 0)
  %2020 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2017), !noalias !5
  %2021 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2019, <8 x i32> %2020, i32 1)
  %2022 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2016, <16 x i32> %2021, i32 24)
  %2023 = bitcast <16 x i32> %2022 to <32 x bfloat>
  %2024 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2023, i32 0)
  %2025 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2009, i32 -2, i32 1)
  %2026 = and <16 x i32> %2025, %4
  %2027 = add <16 x i32> %45, %2026
  %2028 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2027, i32 0)
  %2029 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2028), !noalias !10
  %2030 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2029, i32 0)
  %2031 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2028), !noalias !10
  %2032 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2030, <8 x i32> %2031, i32 1)
  %2033 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2027, i32 1)
  %2034 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2033), !noalias !10
  %2035 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2034, i32 0)
  %2036 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2033), !noalias !10
  %2037 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2035, <8 x i32> %2036, i32 1)
  %2038 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2032, <16 x i32> %2037, i32 24)
  %2039 = bitcast <16 x i32> %2038 to <32 x bfloat>
  %2040 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2039, i32 0)
  %2041 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2024, i32 0)
  %2042 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2041, <16 x bfloat> %61, i32 1)
  %2043 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2040, i32 0)
  %2044 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2043, <16 x bfloat> %61, i32 1)
  %2045 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %2042, <32 x bfloat> %2044, i32 60)
  %2046 = load <16 x bfloat>, ptr %2004, align 32, !tbaa !2
  %2047 = getelementptr inbounds bfloat, ptr %0, i20 768
  %2048 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %2046, i32 8)
  %2049 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2048, <16 x i32> %16, i32 2)
  %2050 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2049, i32 0)
  %2051 = bitcast <8 x i32> %2050 to <16 x i16>
  %2052 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %2051, i32 0, i32 0)
  %2053 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2052, i32 6, i32 1)
  %2054 = add <16 x i32> %26, %2053
  %2055 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2054, i32 0)
  %2056 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2055), !noalias !5
  %2057 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2056, i32 0)
  %2058 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2055), !noalias !5
  %2059 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2057, <8 x i32> %2058, i32 1)
  %2060 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2054, i32 1)
  %2061 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2060), !noalias !5
  %2062 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2061, i32 0)
  %2063 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2060), !noalias !5
  %2064 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2062, <8 x i32> %2063, i32 1)
  %2065 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2059, <16 x i32> %2064, i32 24)
  %2066 = bitcast <16 x i32> %2065 to <32 x bfloat>
  %2067 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2066, i32 0)
  %2068 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2052, i32 -2, i32 1)
  %2069 = and <16 x i32> %2068, %4
  %2070 = add <16 x i32> %45, %2069
  %2071 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2070, i32 0)
  %2072 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2071), !noalias !10
  %2073 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2072, i32 0)
  %2074 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2071), !noalias !10
  %2075 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2073, <8 x i32> %2074, i32 1)
  %2076 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2070, i32 1)
  %2077 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2076), !noalias !10
  %2078 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2077, i32 0)
  %2079 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2076), !noalias !10
  %2080 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2078, <8 x i32> %2079, i32 1)
  %2081 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2075, <16 x i32> %2080, i32 24)
  %2082 = bitcast <16 x i32> %2081 to <32 x bfloat>
  %2083 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2082, i32 0)
  %2084 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2067, i32 0)
  %2085 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2084, <16 x bfloat> %61, i32 1)
  %2086 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2083, i32 0)
  %2087 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2086, <16 x bfloat> %61, i32 1)
  %2088 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %2085, <32 x bfloat> %2087, i32 60)
  %2089 = load <16 x bfloat>, ptr %2047, align 32, !tbaa !2
  %2090 = getelementptr inbounds bfloat, ptr %0, i20 784
  %2091 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %2089, i32 8)
  %2092 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2091, <16 x i32> %16, i32 2)
  %2093 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2092, i32 0)
  %2094 = bitcast <8 x i32> %2093 to <16 x i16>
  %2095 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %2094, i32 0, i32 0)
  %2096 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2095, i32 6, i32 1)
  %2097 = add <16 x i32> %26, %2096
  %2098 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2097, i32 0)
  %2099 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2098), !noalias !5
  %2100 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2099, i32 0)
  %2101 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2098), !noalias !5
  %2102 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2100, <8 x i32> %2101, i32 1)
  %2103 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2097, i32 1)
  %2104 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2103), !noalias !5
  %2105 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2104, i32 0)
  %2106 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2103), !noalias !5
  %2107 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2105, <8 x i32> %2106, i32 1)
  %2108 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2102, <16 x i32> %2107, i32 24)
  %2109 = bitcast <16 x i32> %2108 to <32 x bfloat>
  %2110 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2109, i32 0)
  %2111 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2095, i32 -2, i32 1)
  %2112 = and <16 x i32> %2111, %4
  %2113 = add <16 x i32> %45, %2112
  %2114 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2113, i32 0)
  %2115 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2114), !noalias !10
  %2116 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2115, i32 0)
  %2117 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2114), !noalias !10
  %2118 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2116, <8 x i32> %2117, i32 1)
  %2119 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2113, i32 1)
  %2120 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2119), !noalias !10
  %2121 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2120, i32 0)
  %2122 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2119), !noalias !10
  %2123 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2121, <8 x i32> %2122, i32 1)
  %2124 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2118, <16 x i32> %2123, i32 24)
  %2125 = bitcast <16 x i32> %2124 to <32 x bfloat>
  %2126 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2125, i32 0)
  %2127 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2110, i32 0)
  %2128 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2127, <16 x bfloat> %61, i32 1)
  %2129 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2126, i32 0)
  %2130 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2129, <16 x bfloat> %61, i32 1)
  %2131 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %2128, <32 x bfloat> %2130, i32 60)
  %2132 = load <16 x bfloat>, ptr %2090, align 32, !tbaa !2
  %2133 = getelementptr inbounds bfloat, ptr %0, i20 800
  %2134 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %2132, i32 8)
  %2135 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2134, <16 x i32> %16, i32 2)
  %2136 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2135, i32 0)
  %2137 = bitcast <8 x i32> %2136 to <16 x i16>
  %2138 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %2137, i32 0, i32 0)
  %2139 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2138, i32 6, i32 1)
  %2140 = add <16 x i32> %26, %2139
  %2141 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2140, i32 0)
  %2142 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2141), !noalias !5
  %2143 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2142, i32 0)
  %2144 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2141), !noalias !5
  %2145 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2143, <8 x i32> %2144, i32 1)
  %2146 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2140, i32 1)
  %2147 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2146), !noalias !5
  %2148 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2147, i32 0)
  %2149 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2146), !noalias !5
  %2150 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2148, <8 x i32> %2149, i32 1)
  %2151 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2145, <16 x i32> %2150, i32 24)
  %2152 = bitcast <16 x i32> %2151 to <32 x bfloat>
  %2153 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2152, i32 0)
  %2154 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2138, i32 -2, i32 1)
  %2155 = and <16 x i32> %2154, %4
  %2156 = add <16 x i32> %45, %2155
  %2157 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2156, i32 0)
  %2158 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2157), !noalias !10
  %2159 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2158, i32 0)
  %2160 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2157), !noalias !10
  %2161 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2159, <8 x i32> %2160, i32 1)
  %2162 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2156, i32 1)
  %2163 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2162), !noalias !10
  %2164 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2163, i32 0)
  %2165 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2162), !noalias !10
  %2166 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2164, <8 x i32> %2165, i32 1)
  %2167 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2161, <16 x i32> %2166, i32 24)
  %2168 = bitcast <16 x i32> %2167 to <32 x bfloat>
  %2169 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2168, i32 0)
  %2170 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2153, i32 0)
  %2171 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2170, <16 x bfloat> %61, i32 1)
  %2172 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2169, i32 0)
  %2173 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2172, <16 x bfloat> %61, i32 1)
  %2174 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %2171, <32 x bfloat> %2173, i32 60)
  %2175 = load <16 x bfloat>, ptr %2133, align 32, !tbaa !2
  %2176 = getelementptr inbounds bfloat, ptr %0, i20 816
  %2177 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %2175, i32 8)
  %2178 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2177, <16 x i32> %16, i32 2)
  %2179 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2178, i32 0)
  %2180 = bitcast <8 x i32> %2179 to <16 x i16>
  %2181 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %2180, i32 0, i32 0)
  %2182 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2181, i32 6, i32 1)
  %2183 = add <16 x i32> %26, %2182
  %2184 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2183, i32 0)
  %2185 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2184), !noalias !5
  %2186 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2185, i32 0)
  %2187 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2184), !noalias !5
  %2188 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2186, <8 x i32> %2187, i32 1)
  %2189 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2183, i32 1)
  %2190 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2189), !noalias !5
  %2191 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2190, i32 0)
  %2192 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2189), !noalias !5
  %2193 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2191, <8 x i32> %2192, i32 1)
  %2194 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2188, <16 x i32> %2193, i32 24)
  %2195 = bitcast <16 x i32> %2194 to <32 x bfloat>
  %2196 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2195, i32 0)
  %2197 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2181, i32 -2, i32 1)
  %2198 = and <16 x i32> %2197, %4
  %2199 = add <16 x i32> %45, %2198
  %2200 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2199, i32 0)
  %2201 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2200), !noalias !10
  %2202 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2201, i32 0)
  %2203 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2200), !noalias !10
  %2204 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2202, <8 x i32> %2203, i32 1)
  %2205 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2199, i32 1)
  %2206 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2205), !noalias !10
  %2207 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2206, i32 0)
  %2208 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2205), !noalias !10
  %2209 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2207, <8 x i32> %2208, i32 1)
  %2210 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2204, <16 x i32> %2209, i32 24)
  %2211 = bitcast <16 x i32> %2210 to <32 x bfloat>
  %2212 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2211, i32 0)
  %2213 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2196, i32 0)
  %2214 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2213, <16 x bfloat> %61, i32 1)
  %2215 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2212, i32 0)
  %2216 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2215, <16 x bfloat> %61, i32 1)
  %2217 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %2214, <32 x bfloat> %2216, i32 60)
  %2218 = load <16 x bfloat>, ptr %2176, align 32, !tbaa !2
  %2219 = getelementptr inbounds bfloat, ptr %0, i20 832
  %2220 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %2218, i32 8)
  %2221 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2220, <16 x i32> %16, i32 2)
  %2222 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2221, i32 0)
  %2223 = bitcast <8 x i32> %2222 to <16 x i16>
  %2224 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %2223, i32 0, i32 0)
  %2225 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2224, i32 6, i32 1)
  %2226 = add <16 x i32> %26, %2225
  %2227 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2226, i32 0)
  %2228 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2227), !noalias !5
  %2229 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2228, i32 0)
  %2230 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2227), !noalias !5
  %2231 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2229, <8 x i32> %2230, i32 1)
  %2232 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2226, i32 1)
  %2233 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2232), !noalias !5
  %2234 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2233, i32 0)
  %2235 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2232), !noalias !5
  %2236 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2234, <8 x i32> %2235, i32 1)
  %2237 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2231, <16 x i32> %2236, i32 24)
  %2238 = bitcast <16 x i32> %2237 to <32 x bfloat>
  %2239 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2238, i32 0)
  %2240 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2224, i32 -2, i32 1)
  %2241 = and <16 x i32> %2240, %4
  %2242 = add <16 x i32> %45, %2241
  %2243 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2242, i32 0)
  %2244 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2243), !noalias !10
  %2245 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2244, i32 0)
  %2246 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2243), !noalias !10
  %2247 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2245, <8 x i32> %2246, i32 1)
  %2248 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2242, i32 1)
  %2249 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2248), !noalias !10
  %2250 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2249, i32 0)
  %2251 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2248), !noalias !10
  %2252 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2250, <8 x i32> %2251, i32 1)
  %2253 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2247, <16 x i32> %2252, i32 24)
  %2254 = bitcast <16 x i32> %2253 to <32 x bfloat>
  %2255 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2254, i32 0)
  %2256 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2239, i32 0)
  %2257 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2256, <16 x bfloat> %61, i32 1)
  %2258 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2255, i32 0)
  %2259 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2258, <16 x bfloat> %61, i32 1)
  %2260 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %2257, <32 x bfloat> %2259, i32 60)
  %2261 = load <16 x bfloat>, ptr %2219, align 32, !tbaa !2
  %2262 = getelementptr inbounds bfloat, ptr %0, i20 848
  %2263 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %2261, i32 8)
  %2264 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2263, <16 x i32> %16, i32 2)
  %2265 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2264, i32 0)
  %2266 = bitcast <8 x i32> %2265 to <16 x i16>
  %2267 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %2266, i32 0, i32 0)
  %2268 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2267, i32 6, i32 1)
  %2269 = add <16 x i32> %26, %2268
  %2270 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2269, i32 0)
  %2271 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2270), !noalias !5
  %2272 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2271, i32 0)
  %2273 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2270), !noalias !5
  %2274 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2272, <8 x i32> %2273, i32 1)
  %2275 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2269, i32 1)
  %2276 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2275), !noalias !5
  %2277 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2276, i32 0)
  %2278 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2275), !noalias !5
  %2279 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2277, <8 x i32> %2278, i32 1)
  %2280 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2274, <16 x i32> %2279, i32 24)
  %2281 = bitcast <16 x i32> %2280 to <32 x bfloat>
  %2282 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2281, i32 0)
  %2283 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2267, i32 -2, i32 1)
  %2284 = and <16 x i32> %2283, %4
  %2285 = add <16 x i32> %45, %2284
  %2286 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2285, i32 0)
  %2287 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2286), !noalias !10
  %2288 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2287, i32 0)
  %2289 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2286), !noalias !10
  %2290 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2288, <8 x i32> %2289, i32 1)
  %2291 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2285, i32 1)
  %2292 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2291), !noalias !10
  %2293 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2292, i32 0)
  %2294 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2291), !noalias !10
  %2295 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2293, <8 x i32> %2294, i32 1)
  %2296 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2290, <16 x i32> %2295, i32 24)
  %2297 = bitcast <16 x i32> %2296 to <32 x bfloat>
  %2298 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2297, i32 0)
  %2299 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2282, i32 0)
  %2300 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2299, <16 x bfloat> %61, i32 1)
  %2301 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2298, i32 0)
  %2302 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2301, <16 x bfloat> %61, i32 1)
  %2303 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %2300, <32 x bfloat> %2302, i32 60)
  %2304 = load <16 x bfloat>, ptr %2262, align 32, !tbaa !2
  %2305 = getelementptr inbounds bfloat, ptr %0, i20 864
  %2306 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %2304, i32 8)
  %2307 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2306, <16 x i32> %16, i32 2)
  %2308 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2307, i32 0)
  %2309 = bitcast <8 x i32> %2308 to <16 x i16>
  %2310 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %2309, i32 0, i32 0)
  %2311 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2310, i32 6, i32 1)
  %2312 = add <16 x i32> %26, %2311
  %2313 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2312, i32 0)
  %2314 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2313), !noalias !5
  %2315 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2314, i32 0)
  %2316 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2313), !noalias !5
  %2317 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2315, <8 x i32> %2316, i32 1)
  %2318 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2312, i32 1)
  %2319 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2318), !noalias !5
  %2320 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2319, i32 0)
  %2321 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2318), !noalias !5
  %2322 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2320, <8 x i32> %2321, i32 1)
  %2323 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2317, <16 x i32> %2322, i32 24)
  %2324 = bitcast <16 x i32> %2323 to <32 x bfloat>
  %2325 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2324, i32 0)
  %2326 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2310, i32 -2, i32 1)
  %2327 = and <16 x i32> %2326, %4
  %2328 = add <16 x i32> %45, %2327
  %2329 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2328, i32 0)
  %2330 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2329), !noalias !10
  %2331 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2330, i32 0)
  %2332 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2329), !noalias !10
  %2333 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2331, <8 x i32> %2332, i32 1)
  %2334 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2328, i32 1)
  %2335 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2334), !noalias !10
  %2336 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2335, i32 0)
  %2337 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2334), !noalias !10
  %2338 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2336, <8 x i32> %2337, i32 1)
  %2339 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2333, <16 x i32> %2338, i32 24)
  %2340 = bitcast <16 x i32> %2339 to <32 x bfloat>
  %2341 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2340, i32 0)
  %2342 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2325, i32 0)
  %2343 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2342, <16 x bfloat> %61, i32 1)
  %2344 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2341, i32 0)
  %2345 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2344, <16 x bfloat> %61, i32 1)
  %2346 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %2343, <32 x bfloat> %2345, i32 60)
  %2347 = load <16 x bfloat>, ptr %2305, align 32, !tbaa !2
  %2348 = getelementptr inbounds bfloat, ptr %0, i20 880
  %2349 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %2347, i32 8)
  %2350 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2349, <16 x i32> %16, i32 2)
  %2351 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2350, i32 0)
  %2352 = bitcast <8 x i32> %2351 to <16 x i16>
  %2353 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %2352, i32 0, i32 0)
  %2354 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2353, i32 6, i32 1)
  %2355 = add <16 x i32> %26, %2354
  %2356 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2355, i32 0)
  %2357 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2356), !noalias !5
  %2358 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2357, i32 0)
  %2359 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2356), !noalias !5
  %2360 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2358, <8 x i32> %2359, i32 1)
  %2361 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2355, i32 1)
  %2362 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2361), !noalias !5
  %2363 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2362, i32 0)
  %2364 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2361), !noalias !5
  %2365 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2363, <8 x i32> %2364, i32 1)
  %2366 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2360, <16 x i32> %2365, i32 24)
  %2367 = bitcast <16 x i32> %2366 to <32 x bfloat>
  %2368 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2367, i32 0)
  %2369 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2353, i32 -2, i32 1)
  %2370 = and <16 x i32> %2369, %4
  %2371 = add <16 x i32> %45, %2370
  %2372 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2371, i32 0)
  %2373 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2372), !noalias !10
  %2374 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2373, i32 0)
  %2375 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2372), !noalias !10
  %2376 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2374, <8 x i32> %2375, i32 1)
  %2377 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2371, i32 1)
  %2378 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2377), !noalias !10
  %2379 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2378, i32 0)
  %2380 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2377), !noalias !10
  %2381 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2379, <8 x i32> %2380, i32 1)
  %2382 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2376, <16 x i32> %2381, i32 24)
  %2383 = bitcast <16 x i32> %2382 to <32 x bfloat>
  %2384 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2383, i32 0)
  %2385 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2368, i32 0)
  %2386 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2385, <16 x bfloat> %61, i32 1)
  %2387 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2384, i32 0)
  %2388 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2387, <16 x bfloat> %61, i32 1)
  %2389 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %2386, <32 x bfloat> %2388, i32 60)
  %2390 = load <16 x bfloat>, ptr %2348, align 32, !tbaa !2
  %2391 = getelementptr inbounds bfloat, ptr %0, i20 896
  %2392 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %2390, i32 8)
  %2393 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2392, <16 x i32> %16, i32 2)
  %2394 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2393, i32 0)
  %2395 = bitcast <8 x i32> %2394 to <16 x i16>
  %2396 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %2395, i32 0, i32 0)
  %2397 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2396, i32 6, i32 1)
  %2398 = add <16 x i32> %26, %2397
  %2399 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2398, i32 0)
  %2400 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2399), !noalias !5
  %2401 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2400, i32 0)
  %2402 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2399), !noalias !5
  %2403 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2401, <8 x i32> %2402, i32 1)
  %2404 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2398, i32 1)
  %2405 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2404), !noalias !5
  %2406 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2405, i32 0)
  %2407 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2404), !noalias !5
  %2408 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2406, <8 x i32> %2407, i32 1)
  %2409 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2403, <16 x i32> %2408, i32 24)
  %2410 = bitcast <16 x i32> %2409 to <32 x bfloat>
  %2411 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2410, i32 0)
  %2412 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2396, i32 -2, i32 1)
  %2413 = and <16 x i32> %2412, %4
  %2414 = add <16 x i32> %45, %2413
  %2415 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2414, i32 0)
  %2416 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2415), !noalias !10
  %2417 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2416, i32 0)
  %2418 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2415), !noalias !10
  %2419 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2417, <8 x i32> %2418, i32 1)
  %2420 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2414, i32 1)
  %2421 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2420), !noalias !10
  %2422 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2421, i32 0)
  %2423 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2420), !noalias !10
  %2424 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2422, <8 x i32> %2423, i32 1)
  %2425 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2419, <16 x i32> %2424, i32 24)
  %2426 = bitcast <16 x i32> %2425 to <32 x bfloat>
  %2427 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2426, i32 0)
  %2428 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2411, i32 0)
  %2429 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2428, <16 x bfloat> %61, i32 1)
  %2430 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2427, i32 0)
  %2431 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2430, <16 x bfloat> %61, i32 1)
  %2432 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %2429, <32 x bfloat> %2431, i32 60)
  %2433 = load <16 x bfloat>, ptr %2391, align 32, !tbaa !2
  %2434 = getelementptr inbounds bfloat, ptr %0, i20 912
  %2435 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %2433, i32 8)
  %2436 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2435, <16 x i32> %16, i32 2)
  %2437 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2436, i32 0)
  %2438 = bitcast <8 x i32> %2437 to <16 x i16>
  %2439 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %2438, i32 0, i32 0)
  %2440 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2439, i32 6, i32 1)
  %2441 = add <16 x i32> %26, %2440
  %2442 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2441, i32 0)
  %2443 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2442), !noalias !5
  %2444 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2443, i32 0)
  %2445 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2442), !noalias !5
  %2446 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2444, <8 x i32> %2445, i32 1)
  %2447 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2441, i32 1)
  %2448 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2447), !noalias !5
  %2449 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2448, i32 0)
  %2450 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2447), !noalias !5
  %2451 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2449, <8 x i32> %2450, i32 1)
  %2452 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2446, <16 x i32> %2451, i32 24)
  %2453 = bitcast <16 x i32> %2452 to <32 x bfloat>
  %2454 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2453, i32 0)
  %2455 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2439, i32 -2, i32 1)
  %2456 = and <16 x i32> %2455, %4
  %2457 = add <16 x i32> %45, %2456
  %2458 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2457, i32 0)
  %2459 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2458), !noalias !10
  %2460 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2459, i32 0)
  %2461 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2458), !noalias !10
  %2462 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2460, <8 x i32> %2461, i32 1)
  %2463 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2457, i32 1)
  %2464 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2463), !noalias !10
  %2465 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2464, i32 0)
  %2466 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2463), !noalias !10
  %2467 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2465, <8 x i32> %2466, i32 1)
  %2468 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2462, <16 x i32> %2467, i32 24)
  %2469 = bitcast <16 x i32> %2468 to <32 x bfloat>
  %2470 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2469, i32 0)
  %2471 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2454, i32 0)
  %2472 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2471, <16 x bfloat> %61, i32 1)
  %2473 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2470, i32 0)
  %2474 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2473, <16 x bfloat> %61, i32 1)
  %2475 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %2472, <32 x bfloat> %2474, i32 60)
  %2476 = load <16 x bfloat>, ptr %2434, align 32, !tbaa !2
  %2477 = getelementptr inbounds bfloat, ptr %0, i20 928
  %2478 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %2476, i32 8)
  %2479 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2478, <16 x i32> %16, i32 2)
  %2480 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2479, i32 0)
  %2481 = bitcast <8 x i32> %2480 to <16 x i16>
  %2482 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %2481, i32 0, i32 0)
  %2483 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2482, i32 6, i32 1)
  %2484 = add <16 x i32> %26, %2483
  %2485 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2484, i32 0)
  %2486 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2485), !noalias !5
  %2487 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2486, i32 0)
  %2488 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2485), !noalias !5
  %2489 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2487, <8 x i32> %2488, i32 1)
  %2490 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2484, i32 1)
  %2491 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2490), !noalias !5
  %2492 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2491, i32 0)
  %2493 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2490), !noalias !5
  %2494 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2492, <8 x i32> %2493, i32 1)
  %2495 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2489, <16 x i32> %2494, i32 24)
  %2496 = bitcast <16 x i32> %2495 to <32 x bfloat>
  %2497 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2496, i32 0)
  %2498 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2482, i32 -2, i32 1)
  %2499 = and <16 x i32> %2498, %4
  %2500 = add <16 x i32> %45, %2499
  %2501 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2500, i32 0)
  %2502 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2501), !noalias !10
  %2503 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2502, i32 0)
  %2504 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2501), !noalias !10
  %2505 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2503, <8 x i32> %2504, i32 1)
  %2506 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2500, i32 1)
  %2507 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2506), !noalias !10
  %2508 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2507, i32 0)
  %2509 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2506), !noalias !10
  %2510 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2508, <8 x i32> %2509, i32 1)
  %2511 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2505, <16 x i32> %2510, i32 24)
  %2512 = bitcast <16 x i32> %2511 to <32 x bfloat>
  %2513 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2512, i32 0)
  %2514 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2497, i32 0)
  %2515 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2514, <16 x bfloat> %61, i32 1)
  %2516 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2513, i32 0)
  %2517 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2516, <16 x bfloat> %61, i32 1)
  %2518 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %2515, <32 x bfloat> %2517, i32 60)
  %2519 = load <16 x bfloat>, ptr %2477, align 32, !tbaa !2
  %2520 = getelementptr inbounds bfloat, ptr %0, i20 944
  %2521 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %2519, i32 8)
  %2522 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2521, <16 x i32> %16, i32 2)
  %2523 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2522, i32 0)
  %2524 = bitcast <8 x i32> %2523 to <16 x i16>
  %2525 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %2524, i32 0, i32 0)
  %2526 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2525, i32 6, i32 1)
  %2527 = add <16 x i32> %26, %2526
  %2528 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2527, i32 0)
  %2529 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2528), !noalias !5
  %2530 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2529, i32 0)
  %2531 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2528), !noalias !5
  %2532 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2530, <8 x i32> %2531, i32 1)
  %2533 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2527, i32 1)
  %2534 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2533), !noalias !5
  %2535 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2534, i32 0)
  %2536 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2533), !noalias !5
  %2537 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2535, <8 x i32> %2536, i32 1)
  %2538 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2532, <16 x i32> %2537, i32 24)
  %2539 = bitcast <16 x i32> %2538 to <32 x bfloat>
  %2540 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2539, i32 0)
  %2541 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2525, i32 -2, i32 1)
  %2542 = and <16 x i32> %2541, %4
  %2543 = add <16 x i32> %45, %2542
  %2544 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2543, i32 0)
  %2545 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2544), !noalias !10
  %2546 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2545, i32 0)
  %2547 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2544), !noalias !10
  %2548 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2546, <8 x i32> %2547, i32 1)
  %2549 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2543, i32 1)
  %2550 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2549), !noalias !10
  %2551 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2550, i32 0)
  %2552 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2549), !noalias !10
  %2553 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2551, <8 x i32> %2552, i32 1)
  %2554 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2548, <16 x i32> %2553, i32 24)
  %2555 = bitcast <16 x i32> %2554 to <32 x bfloat>
  %2556 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2555, i32 0)
  %2557 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2540, i32 0)
  %2558 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2557, <16 x bfloat> %61, i32 1)
  %2559 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2556, i32 0)
  %2560 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2559, <16 x bfloat> %61, i32 1)
  %2561 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %2558, <32 x bfloat> %2560, i32 60)
  %2562 = load <16 x bfloat>, ptr %2520, align 32, !tbaa !2
  %2563 = getelementptr inbounds bfloat, ptr %0, i20 960
  %2564 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %2562, i32 8)
  %2565 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2564, <16 x i32> %16, i32 2)
  %2566 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2565, i32 0)
  %2567 = bitcast <8 x i32> %2566 to <16 x i16>
  %2568 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %2567, i32 0, i32 0)
  %2569 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2568, i32 6, i32 1)
  %2570 = add <16 x i32> %26, %2569
  %2571 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2570, i32 0)
  %2572 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2571), !noalias !5
  %2573 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2572, i32 0)
  %2574 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2571), !noalias !5
  %2575 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2573, <8 x i32> %2574, i32 1)
  %2576 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2570, i32 1)
  %2577 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2576), !noalias !5
  %2578 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2577, i32 0)
  %2579 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2576), !noalias !5
  %2580 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2578, <8 x i32> %2579, i32 1)
  %2581 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2575, <16 x i32> %2580, i32 24)
  %2582 = bitcast <16 x i32> %2581 to <32 x bfloat>
  %2583 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2582, i32 0)
  %2584 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2568, i32 -2, i32 1)
  %2585 = and <16 x i32> %2584, %4
  %2586 = add <16 x i32> %45, %2585
  %2587 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2586, i32 0)
  %2588 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2587), !noalias !10
  %2589 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2588, i32 0)
  %2590 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2587), !noalias !10
  %2591 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2589, <8 x i32> %2590, i32 1)
  %2592 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2586, i32 1)
  %2593 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2592), !noalias !10
  %2594 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2593, i32 0)
  %2595 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2592), !noalias !10
  %2596 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2594, <8 x i32> %2595, i32 1)
  %2597 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2591, <16 x i32> %2596, i32 24)
  %2598 = bitcast <16 x i32> %2597 to <32 x bfloat>
  %2599 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2598, i32 0)
  %2600 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2583, i32 0)
  %2601 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2600, <16 x bfloat> %61, i32 1)
  %2602 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2599, i32 0)
  %2603 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2602, <16 x bfloat> %61, i32 1)
  %2604 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %2601, <32 x bfloat> %2603, i32 60)
  %2605 = load <16 x bfloat>, ptr %2563, align 32, !tbaa !2
  %2606 = getelementptr inbounds bfloat, ptr %0, i20 976
  %2607 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %2605, i32 8)
  %2608 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2607, <16 x i32> %16, i32 2)
  %2609 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2608, i32 0)
  %2610 = bitcast <8 x i32> %2609 to <16 x i16>
  %2611 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %2610, i32 0, i32 0)
  %2612 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2611, i32 6, i32 1)
  %2613 = add <16 x i32> %26, %2612
  %2614 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2613, i32 0)
  %2615 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2614), !noalias !5
  %2616 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2615, i32 0)
  %2617 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2614), !noalias !5
  %2618 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2616, <8 x i32> %2617, i32 1)
  %2619 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2613, i32 1)
  %2620 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2619), !noalias !5
  %2621 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2620, i32 0)
  %2622 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2619), !noalias !5
  %2623 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2621, <8 x i32> %2622, i32 1)
  %2624 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2618, <16 x i32> %2623, i32 24)
  %2625 = bitcast <16 x i32> %2624 to <32 x bfloat>
  %2626 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2625, i32 0)
  %2627 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2611, i32 -2, i32 1)
  %2628 = and <16 x i32> %2627, %4
  %2629 = add <16 x i32> %45, %2628
  %2630 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2629, i32 0)
  %2631 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2630), !noalias !10
  %2632 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2631, i32 0)
  %2633 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2630), !noalias !10
  %2634 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2632, <8 x i32> %2633, i32 1)
  %2635 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2629, i32 1)
  %2636 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2635), !noalias !10
  %2637 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2636, i32 0)
  %2638 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2635), !noalias !10
  %2639 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2637, <8 x i32> %2638, i32 1)
  %2640 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2634, <16 x i32> %2639, i32 24)
  %2641 = bitcast <16 x i32> %2640 to <32 x bfloat>
  %2642 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2641, i32 0)
  %2643 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2626, i32 0)
  %2644 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2643, <16 x bfloat> %61, i32 1)
  %2645 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2642, i32 0)
  %2646 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2645, <16 x bfloat> %61, i32 1)
  %2647 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %2644, <32 x bfloat> %2646, i32 60)
  %2648 = load <16 x bfloat>, ptr %2606, align 32, !tbaa !2
  %2649 = getelementptr inbounds bfloat, ptr %0, i20 992
  %2650 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %2648, i32 8)
  %2651 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2650, <16 x i32> %16, i32 2)
  %2652 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2651, i32 0)
  %2653 = bitcast <8 x i32> %2652 to <16 x i16>
  %2654 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %2653, i32 0, i32 0)
  %2655 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2654, i32 6, i32 1)
  %2656 = add <16 x i32> %26, %2655
  %2657 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2656, i32 0)
  %2658 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2657), !noalias !5
  %2659 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2658, i32 0)
  %2660 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2657), !noalias !5
  %2661 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2659, <8 x i32> %2660, i32 1)
  %2662 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2656, i32 1)
  %2663 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2662), !noalias !5
  %2664 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2663, i32 0)
  %2665 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2662), !noalias !5
  %2666 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2664, <8 x i32> %2665, i32 1)
  %2667 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2661, <16 x i32> %2666, i32 24)
  %2668 = bitcast <16 x i32> %2667 to <32 x bfloat>
  %2669 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2668, i32 0)
  %2670 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2654, i32 -2, i32 1)
  %2671 = and <16 x i32> %2670, %4
  %2672 = add <16 x i32> %45, %2671
  %2673 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2672, i32 0)
  %2674 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2673), !noalias !10
  %2675 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2674, i32 0)
  %2676 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2673), !noalias !10
  %2677 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2675, <8 x i32> %2676, i32 1)
  %2678 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2672, i32 1)
  %2679 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2678), !noalias !10
  %2680 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2679, i32 0)
  %2681 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2678), !noalias !10
  %2682 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2680, <8 x i32> %2681, i32 1)
  %2683 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2677, <16 x i32> %2682, i32 24)
  %2684 = bitcast <16 x i32> %2683 to <32 x bfloat>
  %2685 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2684, i32 0)
  %2686 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2669, i32 0)
  %2687 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2686, <16 x bfloat> %61, i32 1)
  %2688 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2685, i32 0)
  %2689 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2688, <16 x bfloat> %61, i32 1)
  %2690 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %2687, <32 x bfloat> %2689, i32 60)
  %2691 = load <16 x bfloat>, ptr %2649, align 32, !tbaa !2
  %2692 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %2691, i32 8)
  %2693 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2692, <16 x i32> %16, i32 2)
  %2694 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2693, i32 0)
  %2695 = bitcast <8 x i32> %2694 to <16 x i16>
  %2696 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %2695, i32 0, i32 0)
  %2697 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2696, i32 6, i32 1)
  %2698 = add <16 x i32> %26, %2697
  %2699 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2698, i32 0)
  %2700 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2699), !noalias !5
  %2701 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2700, i32 0)
  %2702 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2699), !noalias !5
  %2703 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2701, <8 x i32> %2702, i32 1)
  %2704 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2698, i32 1)
  %2705 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2704), !noalias !5
  %2706 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2705, i32 0)
  %2707 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2704), !noalias !5
  %2708 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2706, <8 x i32> %2707, i32 1)
  %2709 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2703, <16 x i32> %2708, i32 24)
  %2710 = bitcast <16 x i32> %2709 to <32 x bfloat>
  %2711 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2710, i32 0)
  %2712 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2696, i32 -2, i32 1)
  %2713 = and <16 x i32> %2712, %4
  %2714 = add <16 x i32> %45, %2713
  %2715 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2714, i32 0)
  %2716 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2715), !noalias !10
  %2717 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2716, i32 0)
  %2718 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2715), !noalias !10
  %2719 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2717, <8 x i32> %2718, i32 1)
  %2720 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2714, i32 1)
  %2721 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2720), !noalias !10
  %2722 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2721, i32 0)
  %2723 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2720), !noalias !10
  %2724 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2722, <8 x i32> %2723, i32 1)
  %2725 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2719, <16 x i32> %2724, i32 24)
  %2726 = bitcast <16 x i32> %2725 to <32 x bfloat>
  %2727 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2726, i32 0)
  %2728 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2711, i32 0)
  %2729 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2728, <16 x bfloat> %61, i32 1)
  %2730 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2727, i32 0)
  %2731 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2730, <16 x bfloat> %61, i32 1)
  %2732 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %2729, <32 x bfloat> %2731, i32 60)
  %2733 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %2732)
  store <16 x bfloat> %2733, ptr %1, align 32, !tbaa !2
  ret void
}

; Function Attrs: nofree nounwind memory(inaccessiblemem: read)
declare <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat>, i32) #1

; Function Attrs: nofree nosync nounwind memory(none)
declare <8 x i64> @llvm.aie2.v16accfloat() #2

; Function Attrs: nofree nosync nounwind memory(none)
declare <32 x bfloat> @llvm.aie2.v32bfloat16() #2

; Function Attrs: nofree nosync nounwind memory(none)
declare <32 x bfloat> @llvm.aie2.vbroadcast16.bf512(bfloat) #2

; Function Attrs: nofree nosync nounwind memory(none)
declare <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat>, i32) #2

; Function Attrs: nofree nosync nounwind memory(none)
declare <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat>, i32) #2

; Function Attrs: nofree nosync nounwind memory(none)
declare <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat>, <16 x bfloat>, i32) #2

; Function Attrs: nofree nounwind memory(inaccessiblemem: read)
declare <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat>, <32 x bfloat>, i32) #1

; Function Attrs: nofree nounwind memory(inaccessiblemem: read)
declare <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64>) #1

; Function Attrs: nofree nosync nounwind memory(none)
declare <16 x i32> @llvm.aie2.v16int32() #2

; Function Attrs: nofree nosync nounwind memory(none)
declare <16 x i32> @llvm.aie2.vbroadcast32.I512(i32) #2

; Function Attrs: nofree nosync nounwind memory(none)
declare <16 x bfloat> @llvm.aie2.v16bfloat16() #2

; Function Attrs: nofree nounwind memory(inaccessiblemem: read)
declare <8 x i64> @llvm.aie2.clr16f.conf() #1

; Function Attrs: nofree nosync nounwind memory(none)
declare <16 x i32> @llvm.aie2.vshuffle(<16 x i32>, <16 x i32>, i32) #2

; Function Attrs: nofree nosync nounwind memory(none)
declare <32 x i16> @llvm.aie2.v32int16() #2

; Function Attrs: nofree nosync nounwind memory(none)
declare <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32>, i32) #2

; Function Attrs: nofree nosync nounwind memory(none)
declare <16 x i64> @llvm.aie2.v16acc64() #2

; Function Attrs: nofree nounwind memory(inaccessiblemem: read)
declare <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16>, i32, i32) #1

; Function Attrs: nofree nounwind memory(inaccessiblemem: read)
declare <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64>, i32, i32) #1

; Function Attrs: nofree nosync nounwind memory(none)
declare <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32>, <8 x i32>, i32) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare <16 x i32> @llvm.aie2.vsel32(<16 x i32>, <16 x i32>, i32) #3

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(read)
declare <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32>) #4

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(read)
declare <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32>) #4

attributes #0 = { mustprogress nofree nounwind memory(read, argmem: readwrite) "no-trapping-math"="true" "stack-protector-buffer-size"="8" }
attributes #1 = { nofree nounwind memory(inaccessiblemem: read) }
attributes #2 = { nofree nosync nounwind memory(none) }
attributes #3 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #4 = { mustprogress nocallback nofree nosync nounwind willreturn memory(read) }

!llvm.linker.options = !{}
!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 18.0.0git"}
!2 = !{!3, !3, i64 0}
!3 = !{!"omnipotent char", !4, i64 0}
!4 = !{!"Simple C++ TBAA"}
!5 = !{!6, !8}
!6 = distinct !{!6, !7, !"_ZN3aie6detail15parallel_lookupItNS0_3lutILj4Eu6__bf16u6__bf16EELNS0_14lut_oor_policyE1EE5fetchINS_6vectorItLj16EEELj16EQaaaaleclsrTL0__4sizeELi32EleTL0_0_clsrS9_4sizeEleTL0_0_sr20native_vector_lengthIT0_EE5valueEENS7_Iu6__bf16XT0_EEERKT_: argument 0"}
!7 = distinct !{!7, !"_ZN3aie6detail15parallel_lookupItNS0_3lutILj4Eu6__bf16u6__bf16EELNS0_14lut_oor_policyE1EE5fetchINS_6vectorItLj16EEELj16EQaaaaleclsrTL0__4sizeELi32EleTL0_0_clsrS9_4sizeEleTL0_0_sr20native_vector_lengthIT0_EE5valueEENS7_Iu6__bf16XT0_EEERKT_"}
!8 = distinct !{!8, !9, !"_ZN3aie15parallel_lookupItNS_3lutILj4Eu6__bf16u6__bf16EELNS_6detail14lut_oor_policyE1EE5fetchITkNS_6VectorENS_6vectorItLj16EEELj16EEENS7_Iu6__bf16XT0_EEERKT_: argument 0"}
!9 = distinct !{!9, !"_ZN3aie15parallel_lookupItNS_3lutILj4Eu6__bf16u6__bf16EELNS_6detail14lut_oor_policyE1EE5fetchITkNS_6VectorENS_6vectorItLj16EEELj16EEENS7_Iu6__bf16XT0_EEERKT_"}
!10 = !{!11, !13}
!11 = distinct !{!11, !12, !"_ZN3aie6detail15parallel_lookupItNS0_3lutILj4Eu6__bf16u6__bf16EELNS0_14lut_oor_policyE1EE5fetchINS_6vectorItLj16EEELj16EQaaaaleclsrTL0__4sizeELi32EleTL0_0_clsrS9_4sizeEleTL0_0_sr20native_vector_lengthIT0_EE5valueEENS7_Iu6__bf16XT0_EEERKT_: argument 0"}
!12 = distinct !{!12, !"_ZN3aie6detail15parallel_lookupItNS0_3lutILj4Eu6__bf16u6__bf16EELNS0_14lut_oor_policyE1EE5fetchINS_6vectorItLj16EEELj16EQaaaaleclsrTL0__4sizeELi32EleTL0_0_clsrS9_4sizeEleTL0_0_sr20native_vector_lengthIT0_EE5valueEENS7_Iu6__bf16XT0_EEERKT_"}
!13 = distinct !{!13, !14, !"_ZN3aie15parallel_lookupItNS_3lutILj4Eu6__bf16u6__bf16EELNS_6detail14lut_oor_policyE1EE5fetchITkNS_6VectorENS_6vectorItLj16EEELj16EEENS7_Iu6__bf16XT0_EEERKT_: argument 0"}
!14 = distinct !{!14, !"_ZN3aie15parallel_lookupItNS_3lutILj4Eu6__bf16u6__bf16EELNS_6detail14lut_oor_policyE1EE5fetchITkNS_6VectorENS_6vectorItLj16EEELj16EEENS7_Iu6__bf16XT0_EEERKT_"}
