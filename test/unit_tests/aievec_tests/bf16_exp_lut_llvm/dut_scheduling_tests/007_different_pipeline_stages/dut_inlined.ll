; ModuleID = 'dut_inlined.cc'
source_filename = "dut_inlined.cc"
target datalayout = "e-m:e-p:20:32-i1:8:32-i8:8:32-i16:16:32-i32:32:32-f32:32:32-i64:32-f64:32-a:0:32-n32"
target triple = "aie2"

@exp_ilut_ab = external dso_local global [512 x i16], align 32
@exp_ilut_cd = external dso_local global [512 x i16], align 32
@exp_flut_ab = external dso_local global [512 x i16], align 32
@exp_flut_cd = external dso_local global [512 x i16], align 32

; Function Attrs: mustprogress nofree nounwind memory(read, argmem: readwrite)
define dso_local void @dut(ptr noalias nocapture readonly %0, ptr noalias nocapture writeonly %1) local_unnamed_addr #0 {
  %3 = tail call noundef <16 x i32> @llvm.aie2.v16int32()
  %4 = tail call noundef <16 x i32> @llvm.aie2.vbroadcast32.I512(i32 1023)
  %5 = tail call noundef <16 x i32> @llvm.aie2.vbroadcast32.I512(i32 0)
  %6 = tail call noundef <16 x bfloat> @llvm.aie2.v16bfloat16()
  %7 = tail call noundef <8 x i64> @llvm.aie2.v16accfloat()
  %8 = tail call noundef <16 x i16> @llvm.aie2.v16int16()
  %9 = load <16 x bfloat>, ptr %0, align 32, !tbaa !2
  %10 = getelementptr inbounds bfloat, ptr %0, i20 16
  %11 = load <16 x bfloat>, ptr %10, align 32, !tbaa !2
  %12 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %9, i32 8)
  %13 = tail call noundef <32 x i16> @llvm.aie2.v32int16()
  %14 = bitcast <32 x i16> %13 to <16 x i32>
  %15 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %12, <16 x i32> %14, i32 2)
  %16 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %15, i32 0)
  %17 = bitcast <8 x i32> %16 to <16 x i16>
  %18 = getelementptr inbounds bfloat, ptr %0, i20 32
  %19 = load <16 x bfloat>, ptr %18, align 32, !tbaa !2
  %20 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %11, i32 8)
  %21 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %20, <16 x i32> %14, i32 2)
  %22 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %21, i32 0)
  %23 = tail call noundef <32 x bfloat> @llvm.aie2.v32bfloat16()
  %24 = tail call noundef <16 x i64> @llvm.aie2.v16acc64()
  %25 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %17, i32 0, i32 0)
  %26 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %25, i32 6, i32 1)
  %27 = zext i20 ptrtoint (ptr @exp_ilut_ab to i20) to i32
  %28 = tail call noundef <16 x i32> @llvm.aie2.vbroadcast32.I512(i32 %27)
  %29 = zext i20 ptrtoint (ptr @exp_ilut_cd to i20) to i32
  %30 = tail call noundef <16 x i32> @llvm.aie2.vbroadcast32.I512(i32 %29)
  %31 = tail call noundef <16 x i32> @llvm.aie2.vsel32(<16 x i32> %28, <16 x i32> %30, i32 52428)
  %32 = add <16 x i32> %31, %26
  %33 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %32, i32 0)
  %34 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %33), !noalias !5
  %35 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %34, i32 0)
  %36 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %33), !noalias !5
  %37 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %35, <8 x i32> %36, i32 1)
  %38 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %32, i32 1)
  %39 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %38), !noalias !5
  %40 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %39, i32 0)
  %41 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %38), !noalias !5
  %42 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %40, <8 x i32> %41, i32 1)
  %43 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %37, <16 x i32> %42, i32 24)
  %44 = bitcast <16 x i32> %43 to <32 x bfloat>
  %45 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %44, i32 0)
  %46 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %25, i32 -2, i32 1)
  %47 = and <16 x i32> %46, %4
  %48 = zext i20 ptrtoint (ptr @exp_flut_ab to i20) to i32
  %49 = tail call noundef <16 x i32> @llvm.aie2.vbroadcast32.I512(i32 %48)
  %50 = zext i20 ptrtoint (ptr @exp_flut_cd to i20) to i32
  %51 = tail call noundef <16 x i32> @llvm.aie2.vbroadcast32.I512(i32 %50)
  %52 = tail call noundef <16 x i32> @llvm.aie2.vsel32(<16 x i32> %49, <16 x i32> %51, i32 52428)
  %53 = add <16 x i32> %52, %47
  %54 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %53, i32 0)
  %55 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %54), !noalias !10
  %56 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %55, i32 0)
  %57 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %54), !noalias !10
  %58 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %56, <8 x i32> %57, i32 1)
  %59 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %53, i32 1)
  %60 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %59), !noalias !10
  %61 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %60, i32 0)
  %62 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %59), !noalias !10
  %63 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %61, <8 x i32> %62, i32 1)
  %64 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %58, <16 x i32> %63, i32 24)
  %65 = bitcast <16 x i32> %64 to <32 x bfloat>
  %66 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %65, i32 0)
  %67 = getelementptr bfloat, ptr %0, i20 48
  %68 = bitcast <8 x i32> %22 to <16 x i16>
  %69 = load <16 x bfloat>, ptr %67, align 32, !tbaa !2
  %70 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %19, i32 8)
  %71 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %70, <16 x i32> %14, i32 2)
  %72 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %71, i32 0)
  %73 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %68, i32 0, i32 0)
  %74 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %73, i32 6, i32 1)
  %75 = add <16 x i32> %74, %31
  %76 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %75, i32 0)
  %77 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %76), !noalias !15
  %78 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %77, i32 0)
  %79 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %76), !noalias !15
  %80 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %78, <8 x i32> %79, i32 1)
  %81 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %75, i32 1)
  %82 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %81), !noalias !15
  %83 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %82, i32 0)
  %84 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %81), !noalias !15
  %85 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %83, <8 x i32> %84, i32 1)
  %86 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %80, <16 x i32> %85, i32 24)
  %87 = bitcast <16 x i32> %86 to <32 x bfloat>
  %88 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %87, i32 0)
  %89 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %73, i32 -2, i32 1)
  %90 = and <16 x i32> %89, %4
  %91 = add <16 x i32> %90, %52
  %92 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %91, i32 0)
  %93 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %92), !noalias !20
  %94 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %93, i32 0)
  %95 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %92), !noalias !20
  %96 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %94, <8 x i32> %95, i32 1)
  %97 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %91, i32 1)
  %98 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %97), !noalias !20
  %99 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %98, i32 0)
  %100 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %97), !noalias !20
  %101 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %99, <8 x i32> %100, i32 1)
  %102 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %96, <16 x i32> %101, i32 24)
  %103 = bitcast <16 x i32> %102 to <32 x bfloat>
  %104 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %103, i32 0)
  %105 = tail call noundef <32 x bfloat> @llvm.aie2.vbroadcast16.bf512(bfloat 0xR0000)
  %106 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %105, i32 0)
  %107 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %45, i32 0)
  %108 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %107, <16 x bfloat> %106, i32 1)
  %109 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %66, i32 0)
  %110 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %109, <16 x bfloat> %106, i32 1)
  %111 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %108, <32 x bfloat> %110, i32 60)
  %112 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %111)
  store <16 x bfloat> %112, ptr %1, align 32, !tbaa !2
  %113 = bitcast <8 x i32> %72 to <16 x i16>
  %114 = getelementptr bfloat, ptr %0, i20 64
  %115 = load <16 x bfloat>, ptr %114, align 32, !tbaa !2
  %116 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %69, i32 8)
  %117 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %116, <16 x i32> %14, i32 2)
  %118 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %117, i32 0)
  %119 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %113, i32 0, i32 0)
  %120 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %119, i32 6, i32 1)
  %121 = add <16 x i32> %120, %31
  %122 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %121, i32 0)
  %123 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %122), !noalias !15
  %124 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %123, i32 0)
  %125 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %122), !noalias !15
  %126 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %124, <8 x i32> %125, i32 1)
  %127 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %121, i32 1)
  %128 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %127), !noalias !15
  %129 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %128, i32 0)
  %130 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %127), !noalias !15
  %131 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %129, <8 x i32> %130, i32 1)
  %132 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %126, <16 x i32> %131, i32 24)
  %133 = bitcast <16 x i32> %132 to <32 x bfloat>
  %134 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %133, i32 0)
  %135 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %119, i32 -2, i32 1)
  %136 = and <16 x i32> %135, %4
  %137 = add <16 x i32> %136, %52
  %138 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %137, i32 0)
  %139 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %138), !noalias !20
  %140 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %139, i32 0)
  %141 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %138), !noalias !20
  %142 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %140, <8 x i32> %141, i32 1)
  %143 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %137, i32 1)
  %144 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %143), !noalias !20
  %145 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %144, i32 0)
  %146 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %143), !noalias !20
  %147 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %145, <8 x i32> %146, i32 1)
  %148 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %142, <16 x i32> %147, i32 24)
  %149 = bitcast <16 x i32> %148 to <32 x bfloat>
  %150 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %149, i32 0)
  %151 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %88, i32 0)
  %152 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %151, <16 x bfloat> %106, i32 1)
  %153 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %104, i32 0)
  %154 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %153, <16 x bfloat> %106, i32 1)
  %155 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %152, <32 x bfloat> %154, i32 60)
  %156 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %155)
  %157 = getelementptr inbounds bfloat, ptr %1, i20 16
  store <16 x bfloat> %156, ptr %157, align 32, !tbaa !2
  %158 = bitcast <8 x i32> %118 to <16 x i16>
  %159 = getelementptr bfloat, ptr %0, i20 80
  %160 = load <16 x bfloat>, ptr %159, align 32, !tbaa !2
  %161 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %115, i32 8)
  %162 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %161, <16 x i32> %14, i32 2)
  %163 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %162, i32 0)
  %164 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %158, i32 0, i32 0)
  %165 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %164, i32 6, i32 1)
  %166 = add <16 x i32> %165, %31
  %167 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %166, i32 0)
  %168 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %167), !noalias !15
  %169 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %168, i32 0)
  %170 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %167), !noalias !15
  %171 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %169, <8 x i32> %170, i32 1)
  %172 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %166, i32 1)
  %173 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %172), !noalias !15
  %174 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %173, i32 0)
  %175 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %172), !noalias !15
  %176 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %174, <8 x i32> %175, i32 1)
  %177 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %171, <16 x i32> %176, i32 24)
  %178 = bitcast <16 x i32> %177 to <32 x bfloat>
  %179 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %178, i32 0)
  %180 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %164, i32 -2, i32 1)
  %181 = and <16 x i32> %180, %4
  %182 = add <16 x i32> %181, %52
  %183 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %182, i32 0)
  %184 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %183), !noalias !20
  %185 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %184, i32 0)
  %186 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %183), !noalias !20
  %187 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %185, <8 x i32> %186, i32 1)
  %188 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %182, i32 1)
  %189 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %188), !noalias !20
  %190 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %189, i32 0)
  %191 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %188), !noalias !20
  %192 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %190, <8 x i32> %191, i32 1)
  %193 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %187, <16 x i32> %192, i32 24)
  %194 = bitcast <16 x i32> %193 to <32 x bfloat>
  %195 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %194, i32 0)
  %196 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %134, i32 0)
  %197 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %196, <16 x bfloat> %106, i32 1)
  %198 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %150, i32 0)
  %199 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %198, <16 x bfloat> %106, i32 1)
  %200 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %197, <32 x bfloat> %199, i32 60)
  %201 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %200)
  %202 = getelementptr inbounds bfloat, ptr %1, i20 32
  store <16 x bfloat> %201, ptr %202, align 32, !tbaa !2
  %203 = bitcast <8 x i32> %163 to <16 x i16>
  %204 = getelementptr bfloat, ptr %0, i20 96
  %205 = load <16 x bfloat>, ptr %204, align 32, !tbaa !2
  %206 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %160, i32 8)
  %207 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %206, <16 x i32> %14, i32 2)
  %208 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %207, i32 0)
  %209 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %203, i32 0, i32 0)
  %210 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %209, i32 6, i32 1)
  %211 = add <16 x i32> %210, %31
  %212 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %211, i32 0)
  %213 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %212), !noalias !15
  %214 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %213, i32 0)
  %215 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %212), !noalias !15
  %216 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %214, <8 x i32> %215, i32 1)
  %217 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %211, i32 1)
  %218 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %217), !noalias !15
  %219 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %218, i32 0)
  %220 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %217), !noalias !15
  %221 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %219, <8 x i32> %220, i32 1)
  %222 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %216, <16 x i32> %221, i32 24)
  %223 = bitcast <16 x i32> %222 to <32 x bfloat>
  %224 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %223, i32 0)
  %225 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %209, i32 -2, i32 1)
  %226 = and <16 x i32> %225, %4
  %227 = add <16 x i32> %226, %52
  %228 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %227, i32 0)
  %229 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %228), !noalias !20
  %230 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %229, i32 0)
  %231 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %228), !noalias !20
  %232 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %230, <8 x i32> %231, i32 1)
  %233 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %227, i32 1)
  %234 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %233), !noalias !20
  %235 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %234, i32 0)
  %236 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %233), !noalias !20
  %237 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %235, <8 x i32> %236, i32 1)
  %238 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %232, <16 x i32> %237, i32 24)
  %239 = bitcast <16 x i32> %238 to <32 x bfloat>
  %240 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %239, i32 0)
  %241 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %179, i32 0)
  %242 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %241, <16 x bfloat> %106, i32 1)
  %243 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %195, i32 0)
  %244 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %243, <16 x bfloat> %106, i32 1)
  %245 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %242, <32 x bfloat> %244, i32 60)
  %246 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %245)
  %247 = getelementptr inbounds bfloat, ptr %1, i20 48
  store <16 x bfloat> %246, ptr %247, align 32, !tbaa !2
  %248 = bitcast <8 x i32> %208 to <16 x i16>
  %249 = getelementptr bfloat, ptr %0, i20 112
  %250 = load <16 x bfloat>, ptr %249, align 32, !tbaa !2
  %251 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %205, i32 8)
  %252 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %251, <16 x i32> %14, i32 2)
  %253 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %252, i32 0)
  %254 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %248, i32 0, i32 0)
  %255 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %254, i32 6, i32 1)
  %256 = add <16 x i32> %255, %31
  %257 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %256, i32 0)
  %258 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %257), !noalias !15
  %259 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %258, i32 0)
  %260 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %257), !noalias !15
  %261 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %259, <8 x i32> %260, i32 1)
  %262 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %256, i32 1)
  %263 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %262), !noalias !15
  %264 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %263, i32 0)
  %265 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %262), !noalias !15
  %266 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %264, <8 x i32> %265, i32 1)
  %267 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %261, <16 x i32> %266, i32 24)
  %268 = bitcast <16 x i32> %267 to <32 x bfloat>
  %269 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %268, i32 0)
  %270 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %254, i32 -2, i32 1)
  %271 = and <16 x i32> %270, %4
  %272 = add <16 x i32> %271, %52
  %273 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %272, i32 0)
  %274 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %273), !noalias !20
  %275 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %274, i32 0)
  %276 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %273), !noalias !20
  %277 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %275, <8 x i32> %276, i32 1)
  %278 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %272, i32 1)
  %279 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %278), !noalias !20
  %280 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %279, i32 0)
  %281 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %278), !noalias !20
  %282 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %280, <8 x i32> %281, i32 1)
  %283 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %277, <16 x i32> %282, i32 24)
  %284 = bitcast <16 x i32> %283 to <32 x bfloat>
  %285 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %284, i32 0)
  %286 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %224, i32 0)
  %287 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %286, <16 x bfloat> %106, i32 1)
  %288 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %240, i32 0)
  %289 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %288, <16 x bfloat> %106, i32 1)
  %290 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %287, <32 x bfloat> %289, i32 60)
  %291 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %290)
  %292 = getelementptr inbounds bfloat, ptr %1, i20 64
  store <16 x bfloat> %291, ptr %292, align 32, !tbaa !2
  %293 = bitcast <8 x i32> %253 to <16 x i16>
  %294 = getelementptr bfloat, ptr %0, i20 128
  %295 = load <16 x bfloat>, ptr %294, align 32, !tbaa !2
  %296 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %250, i32 8)
  %297 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %296, <16 x i32> %14, i32 2)
  %298 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %297, i32 0)
  %299 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %293, i32 0, i32 0)
  %300 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %299, i32 6, i32 1)
  %301 = add <16 x i32> %300, %31
  %302 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %301, i32 0)
  %303 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %302), !noalias !15
  %304 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %303, i32 0)
  %305 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %302), !noalias !15
  %306 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %304, <8 x i32> %305, i32 1)
  %307 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %301, i32 1)
  %308 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %307), !noalias !15
  %309 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %308, i32 0)
  %310 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %307), !noalias !15
  %311 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %309, <8 x i32> %310, i32 1)
  %312 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %306, <16 x i32> %311, i32 24)
  %313 = bitcast <16 x i32> %312 to <32 x bfloat>
  %314 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %313, i32 0)
  %315 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %299, i32 -2, i32 1)
  %316 = and <16 x i32> %315, %4
  %317 = add <16 x i32> %316, %52
  %318 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %317, i32 0)
  %319 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %318), !noalias !20
  %320 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %319, i32 0)
  %321 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %318), !noalias !20
  %322 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %320, <8 x i32> %321, i32 1)
  %323 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %317, i32 1)
  %324 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %323), !noalias !20
  %325 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %324, i32 0)
  %326 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %323), !noalias !20
  %327 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %325, <8 x i32> %326, i32 1)
  %328 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %322, <16 x i32> %327, i32 24)
  %329 = bitcast <16 x i32> %328 to <32 x bfloat>
  %330 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %329, i32 0)
  %331 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %269, i32 0)
  %332 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %331, <16 x bfloat> %106, i32 1)
  %333 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %285, i32 0)
  %334 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %333, <16 x bfloat> %106, i32 1)
  %335 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %332, <32 x bfloat> %334, i32 60)
  %336 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %335)
  %337 = getelementptr inbounds bfloat, ptr %1, i20 80
  store <16 x bfloat> %336, ptr %337, align 32, !tbaa !2
  %338 = bitcast <8 x i32> %298 to <16 x i16>
  %339 = getelementptr bfloat, ptr %0, i20 144
  %340 = load <16 x bfloat>, ptr %339, align 32, !tbaa !2
  %341 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %295, i32 8)
  %342 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %341, <16 x i32> %14, i32 2)
  %343 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %342, i32 0)
  %344 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %338, i32 0, i32 0)
  %345 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %344, i32 6, i32 1)
  %346 = add <16 x i32> %345, %31
  %347 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %346, i32 0)
  %348 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %347), !noalias !15
  %349 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %348, i32 0)
  %350 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %347), !noalias !15
  %351 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %349, <8 x i32> %350, i32 1)
  %352 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %346, i32 1)
  %353 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %352), !noalias !15
  %354 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %353, i32 0)
  %355 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %352), !noalias !15
  %356 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %354, <8 x i32> %355, i32 1)
  %357 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %351, <16 x i32> %356, i32 24)
  %358 = bitcast <16 x i32> %357 to <32 x bfloat>
  %359 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %358, i32 0)
  %360 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %344, i32 -2, i32 1)
  %361 = and <16 x i32> %360, %4
  %362 = add <16 x i32> %361, %52
  %363 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %362, i32 0)
  %364 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %363), !noalias !20
  %365 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %364, i32 0)
  %366 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %363), !noalias !20
  %367 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %365, <8 x i32> %366, i32 1)
  %368 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %362, i32 1)
  %369 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %368), !noalias !20
  %370 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %369, i32 0)
  %371 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %368), !noalias !20
  %372 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %370, <8 x i32> %371, i32 1)
  %373 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %367, <16 x i32> %372, i32 24)
  %374 = bitcast <16 x i32> %373 to <32 x bfloat>
  %375 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %374, i32 0)
  %376 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %314, i32 0)
  %377 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %376, <16 x bfloat> %106, i32 1)
  %378 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %330, i32 0)
  %379 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %378, <16 x bfloat> %106, i32 1)
  %380 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %377, <32 x bfloat> %379, i32 60)
  %381 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %380)
  %382 = getelementptr inbounds bfloat, ptr %1, i20 96
  store <16 x bfloat> %381, ptr %382, align 32, !tbaa !2
  %383 = bitcast <8 x i32> %343 to <16 x i16>
  %384 = getelementptr bfloat, ptr %0, i20 160
  %385 = load <16 x bfloat>, ptr %384, align 32, !tbaa !2
  %386 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %340, i32 8)
  %387 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %386, <16 x i32> %14, i32 2)
  %388 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %387, i32 0)
  %389 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %383, i32 0, i32 0)
  %390 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %389, i32 6, i32 1)
  %391 = add <16 x i32> %390, %31
  %392 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %391, i32 0)
  %393 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %392), !noalias !15
  %394 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %393, i32 0)
  %395 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %392), !noalias !15
  %396 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %394, <8 x i32> %395, i32 1)
  %397 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %391, i32 1)
  %398 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %397), !noalias !15
  %399 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %398, i32 0)
  %400 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %397), !noalias !15
  %401 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %399, <8 x i32> %400, i32 1)
  %402 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %396, <16 x i32> %401, i32 24)
  %403 = bitcast <16 x i32> %402 to <32 x bfloat>
  %404 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %403, i32 0)
  %405 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %389, i32 -2, i32 1)
  %406 = and <16 x i32> %405, %4
  %407 = add <16 x i32> %406, %52
  %408 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %407, i32 0)
  %409 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %408), !noalias !20
  %410 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %409, i32 0)
  %411 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %408), !noalias !20
  %412 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %410, <8 x i32> %411, i32 1)
  %413 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %407, i32 1)
  %414 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %413), !noalias !20
  %415 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %414, i32 0)
  %416 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %413), !noalias !20
  %417 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %415, <8 x i32> %416, i32 1)
  %418 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %412, <16 x i32> %417, i32 24)
  %419 = bitcast <16 x i32> %418 to <32 x bfloat>
  %420 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %419, i32 0)
  %421 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %359, i32 0)
  %422 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %421, <16 x bfloat> %106, i32 1)
  %423 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %375, i32 0)
  %424 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %423, <16 x bfloat> %106, i32 1)
  %425 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %422, <32 x bfloat> %424, i32 60)
  %426 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %425)
  %427 = getelementptr inbounds bfloat, ptr %1, i20 112
  store <16 x bfloat> %426, ptr %427, align 32, !tbaa !2
  %428 = bitcast <8 x i32> %388 to <16 x i16>
  %429 = getelementptr bfloat, ptr %0, i20 176
  %430 = load <16 x bfloat>, ptr %429, align 32, !tbaa !2
  %431 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %385, i32 8)
  %432 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %431, <16 x i32> %14, i32 2)
  %433 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %432, i32 0)
  %434 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %428, i32 0, i32 0)
  %435 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %434, i32 6, i32 1)
  %436 = add <16 x i32> %435, %31
  %437 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %436, i32 0)
  %438 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %437), !noalias !15
  %439 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %438, i32 0)
  %440 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %437), !noalias !15
  %441 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %439, <8 x i32> %440, i32 1)
  %442 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %436, i32 1)
  %443 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %442), !noalias !15
  %444 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %443, i32 0)
  %445 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %442), !noalias !15
  %446 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %444, <8 x i32> %445, i32 1)
  %447 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %441, <16 x i32> %446, i32 24)
  %448 = bitcast <16 x i32> %447 to <32 x bfloat>
  %449 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %448, i32 0)
  %450 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %434, i32 -2, i32 1)
  %451 = and <16 x i32> %450, %4
  %452 = add <16 x i32> %451, %52
  %453 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %452, i32 0)
  %454 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %453), !noalias !20
  %455 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %454, i32 0)
  %456 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %453), !noalias !20
  %457 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %455, <8 x i32> %456, i32 1)
  %458 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %452, i32 1)
  %459 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %458), !noalias !20
  %460 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %459, i32 0)
  %461 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %458), !noalias !20
  %462 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %460, <8 x i32> %461, i32 1)
  %463 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %457, <16 x i32> %462, i32 24)
  %464 = bitcast <16 x i32> %463 to <32 x bfloat>
  %465 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %464, i32 0)
  %466 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %404, i32 0)
  %467 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %466, <16 x bfloat> %106, i32 1)
  %468 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %420, i32 0)
  %469 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %468, <16 x bfloat> %106, i32 1)
  %470 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %467, <32 x bfloat> %469, i32 60)
  %471 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %470)
  %472 = getelementptr inbounds bfloat, ptr %1, i20 128
  store <16 x bfloat> %471, ptr %472, align 32, !tbaa !2
  %473 = bitcast <8 x i32> %433 to <16 x i16>
  %474 = getelementptr bfloat, ptr %0, i20 192
  %475 = load <16 x bfloat>, ptr %474, align 32, !tbaa !2
  %476 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %430, i32 8)
  %477 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %476, <16 x i32> %14, i32 2)
  %478 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %477, i32 0)
  %479 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %473, i32 0, i32 0)
  %480 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %479, i32 6, i32 1)
  %481 = add <16 x i32> %480, %31
  %482 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %481, i32 0)
  %483 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %482), !noalias !15
  %484 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %483, i32 0)
  %485 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %482), !noalias !15
  %486 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %484, <8 x i32> %485, i32 1)
  %487 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %481, i32 1)
  %488 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %487), !noalias !15
  %489 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %488, i32 0)
  %490 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %487), !noalias !15
  %491 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %489, <8 x i32> %490, i32 1)
  %492 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %486, <16 x i32> %491, i32 24)
  %493 = bitcast <16 x i32> %492 to <32 x bfloat>
  %494 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %493, i32 0)
  %495 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %479, i32 -2, i32 1)
  %496 = and <16 x i32> %495, %4
  %497 = add <16 x i32> %496, %52
  %498 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %497, i32 0)
  %499 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %498), !noalias !20
  %500 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %499, i32 0)
  %501 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %498), !noalias !20
  %502 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %500, <8 x i32> %501, i32 1)
  %503 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %497, i32 1)
  %504 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %503), !noalias !20
  %505 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %504, i32 0)
  %506 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %503), !noalias !20
  %507 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %505, <8 x i32> %506, i32 1)
  %508 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %502, <16 x i32> %507, i32 24)
  %509 = bitcast <16 x i32> %508 to <32 x bfloat>
  %510 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %509, i32 0)
  %511 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %449, i32 0)
  %512 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %511, <16 x bfloat> %106, i32 1)
  %513 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %465, i32 0)
  %514 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %513, <16 x bfloat> %106, i32 1)
  %515 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %512, <32 x bfloat> %514, i32 60)
  %516 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %515)
  %517 = getelementptr inbounds bfloat, ptr %1, i20 144
  store <16 x bfloat> %516, ptr %517, align 32, !tbaa !2
  %518 = bitcast <8 x i32> %478 to <16 x i16>
  %519 = getelementptr bfloat, ptr %0, i20 208
  %520 = load <16 x bfloat>, ptr %519, align 32, !tbaa !2
  %521 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %475, i32 8)
  %522 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %521, <16 x i32> %14, i32 2)
  %523 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %522, i32 0)
  %524 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %518, i32 0, i32 0)
  %525 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %524, i32 6, i32 1)
  %526 = add <16 x i32> %525, %31
  %527 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %526, i32 0)
  %528 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %527), !noalias !15
  %529 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %528, i32 0)
  %530 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %527), !noalias !15
  %531 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %529, <8 x i32> %530, i32 1)
  %532 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %526, i32 1)
  %533 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %532), !noalias !15
  %534 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %533, i32 0)
  %535 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %532), !noalias !15
  %536 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %534, <8 x i32> %535, i32 1)
  %537 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %531, <16 x i32> %536, i32 24)
  %538 = bitcast <16 x i32> %537 to <32 x bfloat>
  %539 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %538, i32 0)
  %540 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %524, i32 -2, i32 1)
  %541 = and <16 x i32> %540, %4
  %542 = add <16 x i32> %541, %52
  %543 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %542, i32 0)
  %544 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %543), !noalias !20
  %545 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %544, i32 0)
  %546 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %543), !noalias !20
  %547 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %545, <8 x i32> %546, i32 1)
  %548 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %542, i32 1)
  %549 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %548), !noalias !20
  %550 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %549, i32 0)
  %551 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %548), !noalias !20
  %552 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %550, <8 x i32> %551, i32 1)
  %553 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %547, <16 x i32> %552, i32 24)
  %554 = bitcast <16 x i32> %553 to <32 x bfloat>
  %555 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %554, i32 0)
  %556 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %494, i32 0)
  %557 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %556, <16 x bfloat> %106, i32 1)
  %558 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %510, i32 0)
  %559 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %558, <16 x bfloat> %106, i32 1)
  %560 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %557, <32 x bfloat> %559, i32 60)
  %561 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %560)
  %562 = getelementptr inbounds bfloat, ptr %1, i20 160
  store <16 x bfloat> %561, ptr %562, align 32, !tbaa !2
  %563 = bitcast <8 x i32> %523 to <16 x i16>
  %564 = getelementptr bfloat, ptr %0, i20 224
  %565 = load <16 x bfloat>, ptr %564, align 32, !tbaa !2
  %566 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %520, i32 8)
  %567 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %566, <16 x i32> %14, i32 2)
  %568 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %567, i32 0)
  %569 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %563, i32 0, i32 0)
  %570 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %569, i32 6, i32 1)
  %571 = add <16 x i32> %570, %31
  %572 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %571, i32 0)
  %573 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %572), !noalias !15
  %574 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %573, i32 0)
  %575 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %572), !noalias !15
  %576 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %574, <8 x i32> %575, i32 1)
  %577 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %571, i32 1)
  %578 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %577), !noalias !15
  %579 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %578, i32 0)
  %580 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %577), !noalias !15
  %581 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %579, <8 x i32> %580, i32 1)
  %582 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %576, <16 x i32> %581, i32 24)
  %583 = bitcast <16 x i32> %582 to <32 x bfloat>
  %584 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %583, i32 0)
  %585 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %569, i32 -2, i32 1)
  %586 = and <16 x i32> %585, %4
  %587 = add <16 x i32> %586, %52
  %588 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %587, i32 0)
  %589 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %588), !noalias !20
  %590 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %589, i32 0)
  %591 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %588), !noalias !20
  %592 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %590, <8 x i32> %591, i32 1)
  %593 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %587, i32 1)
  %594 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %593), !noalias !20
  %595 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %594, i32 0)
  %596 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %593), !noalias !20
  %597 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %595, <8 x i32> %596, i32 1)
  %598 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %592, <16 x i32> %597, i32 24)
  %599 = bitcast <16 x i32> %598 to <32 x bfloat>
  %600 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %599, i32 0)
  %601 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %539, i32 0)
  %602 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %601, <16 x bfloat> %106, i32 1)
  %603 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %555, i32 0)
  %604 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %603, <16 x bfloat> %106, i32 1)
  %605 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %602, <32 x bfloat> %604, i32 60)
  %606 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %605)
  %607 = getelementptr inbounds bfloat, ptr %1, i20 176
  store <16 x bfloat> %606, ptr %607, align 32, !tbaa !2
  %608 = bitcast <8 x i32> %568 to <16 x i16>
  %609 = getelementptr bfloat, ptr %0, i20 240
  %610 = load <16 x bfloat>, ptr %609, align 32, !tbaa !2
  %611 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %565, i32 8)
  %612 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %611, <16 x i32> %14, i32 2)
  %613 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %612, i32 0)
  %614 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %608, i32 0, i32 0)
  %615 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %614, i32 6, i32 1)
  %616 = add <16 x i32> %615, %31
  %617 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %616, i32 0)
  %618 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %617), !noalias !15
  %619 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %618, i32 0)
  %620 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %617), !noalias !15
  %621 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %619, <8 x i32> %620, i32 1)
  %622 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %616, i32 1)
  %623 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %622), !noalias !15
  %624 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %623, i32 0)
  %625 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %622), !noalias !15
  %626 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %624, <8 x i32> %625, i32 1)
  %627 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %621, <16 x i32> %626, i32 24)
  %628 = bitcast <16 x i32> %627 to <32 x bfloat>
  %629 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %628, i32 0)
  %630 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %614, i32 -2, i32 1)
  %631 = and <16 x i32> %630, %4
  %632 = add <16 x i32> %631, %52
  %633 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %632, i32 0)
  %634 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %633), !noalias !20
  %635 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %634, i32 0)
  %636 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %633), !noalias !20
  %637 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %635, <8 x i32> %636, i32 1)
  %638 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %632, i32 1)
  %639 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %638), !noalias !20
  %640 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %639, i32 0)
  %641 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %638), !noalias !20
  %642 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %640, <8 x i32> %641, i32 1)
  %643 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %637, <16 x i32> %642, i32 24)
  %644 = bitcast <16 x i32> %643 to <32 x bfloat>
  %645 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %644, i32 0)
  %646 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %584, i32 0)
  %647 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %646, <16 x bfloat> %106, i32 1)
  %648 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %600, i32 0)
  %649 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %648, <16 x bfloat> %106, i32 1)
  %650 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %647, <32 x bfloat> %649, i32 60)
  %651 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %650)
  %652 = getelementptr inbounds bfloat, ptr %1, i20 192
  store <16 x bfloat> %651, ptr %652, align 32, !tbaa !2
  %653 = bitcast <8 x i32> %613 to <16 x i16>
  %654 = getelementptr bfloat, ptr %0, i20 256
  %655 = load <16 x bfloat>, ptr %654, align 32, !tbaa !2
  %656 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %610, i32 8)
  %657 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %656, <16 x i32> %14, i32 2)
  %658 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %657, i32 0)
  %659 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %653, i32 0, i32 0)
  %660 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %659, i32 6, i32 1)
  %661 = add <16 x i32> %660, %31
  %662 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %661, i32 0)
  %663 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %662), !noalias !15
  %664 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %663, i32 0)
  %665 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %662), !noalias !15
  %666 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %664, <8 x i32> %665, i32 1)
  %667 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %661, i32 1)
  %668 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %667), !noalias !15
  %669 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %668, i32 0)
  %670 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %667), !noalias !15
  %671 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %669, <8 x i32> %670, i32 1)
  %672 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %666, <16 x i32> %671, i32 24)
  %673 = bitcast <16 x i32> %672 to <32 x bfloat>
  %674 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %673, i32 0)
  %675 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %659, i32 -2, i32 1)
  %676 = and <16 x i32> %675, %4
  %677 = add <16 x i32> %676, %52
  %678 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %677, i32 0)
  %679 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %678), !noalias !20
  %680 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %679, i32 0)
  %681 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %678), !noalias !20
  %682 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %680, <8 x i32> %681, i32 1)
  %683 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %677, i32 1)
  %684 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %683), !noalias !20
  %685 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %684, i32 0)
  %686 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %683), !noalias !20
  %687 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %685, <8 x i32> %686, i32 1)
  %688 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %682, <16 x i32> %687, i32 24)
  %689 = bitcast <16 x i32> %688 to <32 x bfloat>
  %690 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %689, i32 0)
  %691 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %629, i32 0)
  %692 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %691, <16 x bfloat> %106, i32 1)
  %693 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %645, i32 0)
  %694 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %693, <16 x bfloat> %106, i32 1)
  %695 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %692, <32 x bfloat> %694, i32 60)
  %696 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %695)
  %697 = getelementptr inbounds bfloat, ptr %1, i20 208
  store <16 x bfloat> %696, ptr %697, align 32, !tbaa !2
  %698 = bitcast <8 x i32> %658 to <16 x i16>
  %699 = getelementptr bfloat, ptr %0, i20 272
  %700 = load <16 x bfloat>, ptr %699, align 32, !tbaa !2
  %701 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %655, i32 8)
  %702 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %701, <16 x i32> %14, i32 2)
  %703 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %702, i32 0)
  %704 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %698, i32 0, i32 0)
  %705 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %704, i32 6, i32 1)
  %706 = add <16 x i32> %705, %31
  %707 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %706, i32 0)
  %708 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %707), !noalias !15
  %709 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %708, i32 0)
  %710 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %707), !noalias !15
  %711 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %709, <8 x i32> %710, i32 1)
  %712 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %706, i32 1)
  %713 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %712), !noalias !15
  %714 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %713, i32 0)
  %715 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %712), !noalias !15
  %716 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %714, <8 x i32> %715, i32 1)
  %717 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %711, <16 x i32> %716, i32 24)
  %718 = bitcast <16 x i32> %717 to <32 x bfloat>
  %719 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %718, i32 0)
  %720 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %704, i32 -2, i32 1)
  %721 = and <16 x i32> %720, %4
  %722 = add <16 x i32> %721, %52
  %723 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %722, i32 0)
  %724 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %723), !noalias !20
  %725 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %724, i32 0)
  %726 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %723), !noalias !20
  %727 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %725, <8 x i32> %726, i32 1)
  %728 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %722, i32 1)
  %729 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %728), !noalias !20
  %730 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %729, i32 0)
  %731 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %728), !noalias !20
  %732 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %730, <8 x i32> %731, i32 1)
  %733 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %727, <16 x i32> %732, i32 24)
  %734 = bitcast <16 x i32> %733 to <32 x bfloat>
  %735 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %734, i32 0)
  %736 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %674, i32 0)
  %737 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %736, <16 x bfloat> %106, i32 1)
  %738 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %690, i32 0)
  %739 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %738, <16 x bfloat> %106, i32 1)
  %740 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %737, <32 x bfloat> %739, i32 60)
  %741 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %740)
  %742 = getelementptr inbounds bfloat, ptr %1, i20 224
  store <16 x bfloat> %741, ptr %742, align 32, !tbaa !2
  %743 = bitcast <8 x i32> %703 to <16 x i16>
  %744 = getelementptr bfloat, ptr %0, i20 288
  %745 = load <16 x bfloat>, ptr %744, align 32, !tbaa !2
  %746 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %700, i32 8)
  %747 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %746, <16 x i32> %14, i32 2)
  %748 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %747, i32 0)
  %749 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %743, i32 0, i32 0)
  %750 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %749, i32 6, i32 1)
  %751 = add <16 x i32> %750, %31
  %752 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %751, i32 0)
  %753 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %752), !noalias !15
  %754 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %753, i32 0)
  %755 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %752), !noalias !15
  %756 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %754, <8 x i32> %755, i32 1)
  %757 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %751, i32 1)
  %758 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %757), !noalias !15
  %759 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %758, i32 0)
  %760 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %757), !noalias !15
  %761 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %759, <8 x i32> %760, i32 1)
  %762 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %756, <16 x i32> %761, i32 24)
  %763 = bitcast <16 x i32> %762 to <32 x bfloat>
  %764 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %763, i32 0)
  %765 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %749, i32 -2, i32 1)
  %766 = and <16 x i32> %765, %4
  %767 = add <16 x i32> %766, %52
  %768 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %767, i32 0)
  %769 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %768), !noalias !20
  %770 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %769, i32 0)
  %771 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %768), !noalias !20
  %772 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %770, <8 x i32> %771, i32 1)
  %773 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %767, i32 1)
  %774 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %773), !noalias !20
  %775 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %774, i32 0)
  %776 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %773), !noalias !20
  %777 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %775, <8 x i32> %776, i32 1)
  %778 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %772, <16 x i32> %777, i32 24)
  %779 = bitcast <16 x i32> %778 to <32 x bfloat>
  %780 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %779, i32 0)
  %781 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %719, i32 0)
  %782 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %781, <16 x bfloat> %106, i32 1)
  %783 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %735, i32 0)
  %784 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %783, <16 x bfloat> %106, i32 1)
  %785 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %782, <32 x bfloat> %784, i32 60)
  %786 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %785)
  %787 = getelementptr inbounds bfloat, ptr %1, i20 240
  store <16 x bfloat> %786, ptr %787, align 32, !tbaa !2
  %788 = bitcast <8 x i32> %748 to <16 x i16>
  %789 = getelementptr bfloat, ptr %0, i20 304
  %790 = load <16 x bfloat>, ptr %789, align 32, !tbaa !2
  %791 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %745, i32 8)
  %792 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %791, <16 x i32> %14, i32 2)
  %793 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %792, i32 0)
  %794 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %788, i32 0, i32 0)
  %795 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %794, i32 6, i32 1)
  %796 = add <16 x i32> %795, %31
  %797 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %796, i32 0)
  %798 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %797), !noalias !15
  %799 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %798, i32 0)
  %800 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %797), !noalias !15
  %801 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %799, <8 x i32> %800, i32 1)
  %802 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %796, i32 1)
  %803 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %802), !noalias !15
  %804 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %803, i32 0)
  %805 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %802), !noalias !15
  %806 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %804, <8 x i32> %805, i32 1)
  %807 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %801, <16 x i32> %806, i32 24)
  %808 = bitcast <16 x i32> %807 to <32 x bfloat>
  %809 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %808, i32 0)
  %810 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %794, i32 -2, i32 1)
  %811 = and <16 x i32> %810, %4
  %812 = add <16 x i32> %811, %52
  %813 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %812, i32 0)
  %814 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %813), !noalias !20
  %815 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %814, i32 0)
  %816 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %813), !noalias !20
  %817 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %815, <8 x i32> %816, i32 1)
  %818 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %812, i32 1)
  %819 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %818), !noalias !20
  %820 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %819, i32 0)
  %821 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %818), !noalias !20
  %822 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %820, <8 x i32> %821, i32 1)
  %823 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %817, <16 x i32> %822, i32 24)
  %824 = bitcast <16 x i32> %823 to <32 x bfloat>
  %825 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %824, i32 0)
  %826 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %764, i32 0)
  %827 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %826, <16 x bfloat> %106, i32 1)
  %828 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %780, i32 0)
  %829 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %828, <16 x bfloat> %106, i32 1)
  %830 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %827, <32 x bfloat> %829, i32 60)
  %831 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %830)
  %832 = getelementptr inbounds bfloat, ptr %1, i20 256
  store <16 x bfloat> %831, ptr %832, align 32, !tbaa !2
  %833 = bitcast <8 x i32> %793 to <16 x i16>
  %834 = getelementptr bfloat, ptr %0, i20 320
  %835 = load <16 x bfloat>, ptr %834, align 32, !tbaa !2
  %836 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %790, i32 8)
  %837 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %836, <16 x i32> %14, i32 2)
  %838 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %837, i32 0)
  %839 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %833, i32 0, i32 0)
  %840 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %839, i32 6, i32 1)
  %841 = add <16 x i32> %840, %31
  %842 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %841, i32 0)
  %843 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %842), !noalias !15
  %844 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %843, i32 0)
  %845 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %842), !noalias !15
  %846 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %844, <8 x i32> %845, i32 1)
  %847 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %841, i32 1)
  %848 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %847), !noalias !15
  %849 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %848, i32 0)
  %850 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %847), !noalias !15
  %851 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %849, <8 x i32> %850, i32 1)
  %852 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %846, <16 x i32> %851, i32 24)
  %853 = bitcast <16 x i32> %852 to <32 x bfloat>
  %854 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %853, i32 0)
  %855 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %839, i32 -2, i32 1)
  %856 = and <16 x i32> %855, %4
  %857 = add <16 x i32> %856, %52
  %858 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %857, i32 0)
  %859 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %858), !noalias !20
  %860 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %859, i32 0)
  %861 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %858), !noalias !20
  %862 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %860, <8 x i32> %861, i32 1)
  %863 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %857, i32 1)
  %864 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %863), !noalias !20
  %865 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %864, i32 0)
  %866 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %863), !noalias !20
  %867 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %865, <8 x i32> %866, i32 1)
  %868 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %862, <16 x i32> %867, i32 24)
  %869 = bitcast <16 x i32> %868 to <32 x bfloat>
  %870 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %869, i32 0)
  %871 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %809, i32 0)
  %872 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %871, <16 x bfloat> %106, i32 1)
  %873 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %825, i32 0)
  %874 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %873, <16 x bfloat> %106, i32 1)
  %875 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %872, <32 x bfloat> %874, i32 60)
  %876 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %875)
  %877 = getelementptr inbounds bfloat, ptr %1, i20 272
  store <16 x bfloat> %876, ptr %877, align 32, !tbaa !2
  %878 = bitcast <8 x i32> %838 to <16 x i16>
  %879 = getelementptr bfloat, ptr %0, i20 336
  %880 = load <16 x bfloat>, ptr %879, align 32, !tbaa !2
  %881 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %835, i32 8)
  %882 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %881, <16 x i32> %14, i32 2)
  %883 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %882, i32 0)
  %884 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %878, i32 0, i32 0)
  %885 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %884, i32 6, i32 1)
  %886 = add <16 x i32> %885, %31
  %887 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %886, i32 0)
  %888 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %887), !noalias !15
  %889 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %888, i32 0)
  %890 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %887), !noalias !15
  %891 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %889, <8 x i32> %890, i32 1)
  %892 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %886, i32 1)
  %893 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %892), !noalias !15
  %894 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %893, i32 0)
  %895 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %892), !noalias !15
  %896 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %894, <8 x i32> %895, i32 1)
  %897 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %891, <16 x i32> %896, i32 24)
  %898 = bitcast <16 x i32> %897 to <32 x bfloat>
  %899 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %898, i32 0)
  %900 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %884, i32 -2, i32 1)
  %901 = and <16 x i32> %900, %4
  %902 = add <16 x i32> %901, %52
  %903 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %902, i32 0)
  %904 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %903), !noalias !20
  %905 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %904, i32 0)
  %906 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %903), !noalias !20
  %907 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %905, <8 x i32> %906, i32 1)
  %908 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %902, i32 1)
  %909 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %908), !noalias !20
  %910 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %909, i32 0)
  %911 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %908), !noalias !20
  %912 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %910, <8 x i32> %911, i32 1)
  %913 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %907, <16 x i32> %912, i32 24)
  %914 = bitcast <16 x i32> %913 to <32 x bfloat>
  %915 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %914, i32 0)
  %916 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %854, i32 0)
  %917 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %916, <16 x bfloat> %106, i32 1)
  %918 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %870, i32 0)
  %919 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %918, <16 x bfloat> %106, i32 1)
  %920 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %917, <32 x bfloat> %919, i32 60)
  %921 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %920)
  %922 = getelementptr inbounds bfloat, ptr %1, i20 288
  store <16 x bfloat> %921, ptr %922, align 32, !tbaa !2
  %923 = bitcast <8 x i32> %883 to <16 x i16>
  %924 = getelementptr bfloat, ptr %0, i20 352
  %925 = load <16 x bfloat>, ptr %924, align 32, !tbaa !2
  %926 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %880, i32 8)
  %927 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %926, <16 x i32> %14, i32 2)
  %928 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %927, i32 0)
  %929 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %923, i32 0, i32 0)
  %930 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %929, i32 6, i32 1)
  %931 = add <16 x i32> %930, %31
  %932 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %931, i32 0)
  %933 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %932), !noalias !15
  %934 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %933, i32 0)
  %935 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %932), !noalias !15
  %936 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %934, <8 x i32> %935, i32 1)
  %937 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %931, i32 1)
  %938 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %937), !noalias !15
  %939 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %938, i32 0)
  %940 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %937), !noalias !15
  %941 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %939, <8 x i32> %940, i32 1)
  %942 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %936, <16 x i32> %941, i32 24)
  %943 = bitcast <16 x i32> %942 to <32 x bfloat>
  %944 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %943, i32 0)
  %945 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %929, i32 -2, i32 1)
  %946 = and <16 x i32> %945, %4
  %947 = add <16 x i32> %946, %52
  %948 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %947, i32 0)
  %949 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %948), !noalias !20
  %950 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %949, i32 0)
  %951 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %948), !noalias !20
  %952 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %950, <8 x i32> %951, i32 1)
  %953 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %947, i32 1)
  %954 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %953), !noalias !20
  %955 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %954, i32 0)
  %956 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %953), !noalias !20
  %957 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %955, <8 x i32> %956, i32 1)
  %958 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %952, <16 x i32> %957, i32 24)
  %959 = bitcast <16 x i32> %958 to <32 x bfloat>
  %960 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %959, i32 0)
  %961 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %899, i32 0)
  %962 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %961, <16 x bfloat> %106, i32 1)
  %963 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %915, i32 0)
  %964 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %963, <16 x bfloat> %106, i32 1)
  %965 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %962, <32 x bfloat> %964, i32 60)
  %966 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %965)
  %967 = getelementptr inbounds bfloat, ptr %1, i20 304
  store <16 x bfloat> %966, ptr %967, align 32, !tbaa !2
  %968 = bitcast <8 x i32> %928 to <16 x i16>
  %969 = getelementptr bfloat, ptr %0, i20 368
  %970 = load <16 x bfloat>, ptr %969, align 32, !tbaa !2
  %971 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %925, i32 8)
  %972 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %971, <16 x i32> %14, i32 2)
  %973 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %972, i32 0)
  %974 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %968, i32 0, i32 0)
  %975 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %974, i32 6, i32 1)
  %976 = add <16 x i32> %975, %31
  %977 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %976, i32 0)
  %978 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %977), !noalias !15
  %979 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %978, i32 0)
  %980 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %977), !noalias !15
  %981 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %979, <8 x i32> %980, i32 1)
  %982 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %976, i32 1)
  %983 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %982), !noalias !15
  %984 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %983, i32 0)
  %985 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %982), !noalias !15
  %986 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %984, <8 x i32> %985, i32 1)
  %987 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %981, <16 x i32> %986, i32 24)
  %988 = bitcast <16 x i32> %987 to <32 x bfloat>
  %989 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %988, i32 0)
  %990 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %974, i32 -2, i32 1)
  %991 = and <16 x i32> %990, %4
  %992 = add <16 x i32> %991, %52
  %993 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %992, i32 0)
  %994 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %993), !noalias !20
  %995 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %994, i32 0)
  %996 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %993), !noalias !20
  %997 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %995, <8 x i32> %996, i32 1)
  %998 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %992, i32 1)
  %999 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %998), !noalias !20
  %1000 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %999, i32 0)
  %1001 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %998), !noalias !20
  %1002 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1000, <8 x i32> %1001, i32 1)
  %1003 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %997, <16 x i32> %1002, i32 24)
  %1004 = bitcast <16 x i32> %1003 to <32 x bfloat>
  %1005 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1004, i32 0)
  %1006 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %944, i32 0)
  %1007 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1006, <16 x bfloat> %106, i32 1)
  %1008 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %960, i32 0)
  %1009 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1008, <16 x bfloat> %106, i32 1)
  %1010 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1007, <32 x bfloat> %1009, i32 60)
  %1011 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %1010)
  %1012 = getelementptr inbounds bfloat, ptr %1, i20 320
  store <16 x bfloat> %1011, ptr %1012, align 32, !tbaa !2
  %1013 = bitcast <8 x i32> %973 to <16 x i16>
  %1014 = getelementptr bfloat, ptr %0, i20 384
  %1015 = load <16 x bfloat>, ptr %1014, align 32, !tbaa !2
  %1016 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %970, i32 8)
  %1017 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1016, <16 x i32> %14, i32 2)
  %1018 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1017, i32 0)
  %1019 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %1013, i32 0, i32 0)
  %1020 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1019, i32 6, i32 1)
  %1021 = add <16 x i32> %1020, %31
  %1022 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1021, i32 0)
  %1023 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1022), !noalias !15
  %1024 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1023, i32 0)
  %1025 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1022), !noalias !15
  %1026 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1024, <8 x i32> %1025, i32 1)
  %1027 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1021, i32 1)
  %1028 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1027), !noalias !15
  %1029 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1028, i32 0)
  %1030 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1027), !noalias !15
  %1031 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1029, <8 x i32> %1030, i32 1)
  %1032 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1026, <16 x i32> %1031, i32 24)
  %1033 = bitcast <16 x i32> %1032 to <32 x bfloat>
  %1034 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1033, i32 0)
  %1035 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1019, i32 -2, i32 1)
  %1036 = and <16 x i32> %1035, %4
  %1037 = add <16 x i32> %1036, %52
  %1038 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1037, i32 0)
  %1039 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1038), !noalias !20
  %1040 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1039, i32 0)
  %1041 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1038), !noalias !20
  %1042 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1040, <8 x i32> %1041, i32 1)
  %1043 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1037, i32 1)
  %1044 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1043), !noalias !20
  %1045 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1044, i32 0)
  %1046 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1043), !noalias !20
  %1047 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1045, <8 x i32> %1046, i32 1)
  %1048 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1042, <16 x i32> %1047, i32 24)
  %1049 = bitcast <16 x i32> %1048 to <32 x bfloat>
  %1050 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1049, i32 0)
  %1051 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %989, i32 0)
  %1052 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1051, <16 x bfloat> %106, i32 1)
  %1053 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1005, i32 0)
  %1054 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1053, <16 x bfloat> %106, i32 1)
  %1055 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1052, <32 x bfloat> %1054, i32 60)
  %1056 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %1055)
  %1057 = getelementptr inbounds bfloat, ptr %1, i20 336
  store <16 x bfloat> %1056, ptr %1057, align 32, !tbaa !2
  %1058 = bitcast <8 x i32> %1018 to <16 x i16>
  %1059 = getelementptr bfloat, ptr %0, i20 400
  %1060 = load <16 x bfloat>, ptr %1059, align 32, !tbaa !2
  %1061 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %1015, i32 8)
  %1062 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1061, <16 x i32> %14, i32 2)
  %1063 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1062, i32 0)
  %1064 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %1058, i32 0, i32 0)
  %1065 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1064, i32 6, i32 1)
  %1066 = add <16 x i32> %1065, %31
  %1067 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1066, i32 0)
  %1068 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1067), !noalias !15
  %1069 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1068, i32 0)
  %1070 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1067), !noalias !15
  %1071 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1069, <8 x i32> %1070, i32 1)
  %1072 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1066, i32 1)
  %1073 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1072), !noalias !15
  %1074 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1073, i32 0)
  %1075 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1072), !noalias !15
  %1076 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1074, <8 x i32> %1075, i32 1)
  %1077 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1071, <16 x i32> %1076, i32 24)
  %1078 = bitcast <16 x i32> %1077 to <32 x bfloat>
  %1079 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1078, i32 0)
  %1080 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1064, i32 -2, i32 1)
  %1081 = and <16 x i32> %1080, %4
  %1082 = add <16 x i32> %1081, %52
  %1083 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1082, i32 0)
  %1084 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1083), !noalias !20
  %1085 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1084, i32 0)
  %1086 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1083), !noalias !20
  %1087 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1085, <8 x i32> %1086, i32 1)
  %1088 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1082, i32 1)
  %1089 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1088), !noalias !20
  %1090 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1089, i32 0)
  %1091 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1088), !noalias !20
  %1092 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1090, <8 x i32> %1091, i32 1)
  %1093 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1087, <16 x i32> %1092, i32 24)
  %1094 = bitcast <16 x i32> %1093 to <32 x bfloat>
  %1095 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1094, i32 0)
  %1096 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1034, i32 0)
  %1097 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1096, <16 x bfloat> %106, i32 1)
  %1098 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1050, i32 0)
  %1099 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1098, <16 x bfloat> %106, i32 1)
  %1100 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1097, <32 x bfloat> %1099, i32 60)
  %1101 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %1100)
  %1102 = getelementptr inbounds bfloat, ptr %1, i20 352
  store <16 x bfloat> %1101, ptr %1102, align 32, !tbaa !2
  %1103 = bitcast <8 x i32> %1063 to <16 x i16>
  %1104 = getelementptr bfloat, ptr %0, i20 416
  %1105 = load <16 x bfloat>, ptr %1104, align 32, !tbaa !2
  %1106 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %1060, i32 8)
  %1107 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1106, <16 x i32> %14, i32 2)
  %1108 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1107, i32 0)
  %1109 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %1103, i32 0, i32 0)
  %1110 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1109, i32 6, i32 1)
  %1111 = add <16 x i32> %1110, %31
  %1112 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1111, i32 0)
  %1113 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1112), !noalias !15
  %1114 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1113, i32 0)
  %1115 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1112), !noalias !15
  %1116 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1114, <8 x i32> %1115, i32 1)
  %1117 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1111, i32 1)
  %1118 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1117), !noalias !15
  %1119 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1118, i32 0)
  %1120 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1117), !noalias !15
  %1121 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1119, <8 x i32> %1120, i32 1)
  %1122 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1116, <16 x i32> %1121, i32 24)
  %1123 = bitcast <16 x i32> %1122 to <32 x bfloat>
  %1124 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1123, i32 0)
  %1125 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1109, i32 -2, i32 1)
  %1126 = and <16 x i32> %1125, %4
  %1127 = add <16 x i32> %1126, %52
  %1128 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1127, i32 0)
  %1129 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1128), !noalias !20
  %1130 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1129, i32 0)
  %1131 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1128), !noalias !20
  %1132 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1130, <8 x i32> %1131, i32 1)
  %1133 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1127, i32 1)
  %1134 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1133), !noalias !20
  %1135 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1134, i32 0)
  %1136 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1133), !noalias !20
  %1137 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1135, <8 x i32> %1136, i32 1)
  %1138 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1132, <16 x i32> %1137, i32 24)
  %1139 = bitcast <16 x i32> %1138 to <32 x bfloat>
  %1140 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1139, i32 0)
  %1141 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1079, i32 0)
  %1142 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1141, <16 x bfloat> %106, i32 1)
  %1143 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1095, i32 0)
  %1144 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1143, <16 x bfloat> %106, i32 1)
  %1145 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1142, <32 x bfloat> %1144, i32 60)
  %1146 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %1145)
  %1147 = getelementptr inbounds bfloat, ptr %1, i20 368
  store <16 x bfloat> %1146, ptr %1147, align 32, !tbaa !2
  %1148 = bitcast <8 x i32> %1108 to <16 x i16>
  %1149 = getelementptr bfloat, ptr %0, i20 432
  %1150 = load <16 x bfloat>, ptr %1149, align 32, !tbaa !2
  %1151 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %1105, i32 8)
  %1152 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1151, <16 x i32> %14, i32 2)
  %1153 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1152, i32 0)
  %1154 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %1148, i32 0, i32 0)
  %1155 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1154, i32 6, i32 1)
  %1156 = add <16 x i32> %1155, %31
  %1157 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1156, i32 0)
  %1158 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1157), !noalias !15
  %1159 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1158, i32 0)
  %1160 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1157), !noalias !15
  %1161 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1159, <8 x i32> %1160, i32 1)
  %1162 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1156, i32 1)
  %1163 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1162), !noalias !15
  %1164 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1163, i32 0)
  %1165 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1162), !noalias !15
  %1166 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1164, <8 x i32> %1165, i32 1)
  %1167 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1161, <16 x i32> %1166, i32 24)
  %1168 = bitcast <16 x i32> %1167 to <32 x bfloat>
  %1169 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1168, i32 0)
  %1170 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1154, i32 -2, i32 1)
  %1171 = and <16 x i32> %1170, %4
  %1172 = add <16 x i32> %1171, %52
  %1173 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1172, i32 0)
  %1174 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1173), !noalias !20
  %1175 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1174, i32 0)
  %1176 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1173), !noalias !20
  %1177 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1175, <8 x i32> %1176, i32 1)
  %1178 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1172, i32 1)
  %1179 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1178), !noalias !20
  %1180 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1179, i32 0)
  %1181 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1178), !noalias !20
  %1182 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1180, <8 x i32> %1181, i32 1)
  %1183 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1177, <16 x i32> %1182, i32 24)
  %1184 = bitcast <16 x i32> %1183 to <32 x bfloat>
  %1185 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1184, i32 0)
  %1186 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1124, i32 0)
  %1187 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1186, <16 x bfloat> %106, i32 1)
  %1188 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1140, i32 0)
  %1189 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1188, <16 x bfloat> %106, i32 1)
  %1190 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1187, <32 x bfloat> %1189, i32 60)
  %1191 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %1190)
  %1192 = getelementptr inbounds bfloat, ptr %1, i20 384
  store <16 x bfloat> %1191, ptr %1192, align 32, !tbaa !2
  %1193 = bitcast <8 x i32> %1153 to <16 x i16>
  %1194 = getelementptr bfloat, ptr %0, i20 448
  %1195 = load <16 x bfloat>, ptr %1194, align 32, !tbaa !2
  %1196 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %1150, i32 8)
  %1197 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1196, <16 x i32> %14, i32 2)
  %1198 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1197, i32 0)
  %1199 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %1193, i32 0, i32 0)
  %1200 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1199, i32 6, i32 1)
  %1201 = add <16 x i32> %1200, %31
  %1202 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1201, i32 0)
  %1203 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1202), !noalias !15
  %1204 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1203, i32 0)
  %1205 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1202), !noalias !15
  %1206 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1204, <8 x i32> %1205, i32 1)
  %1207 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1201, i32 1)
  %1208 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1207), !noalias !15
  %1209 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1208, i32 0)
  %1210 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1207), !noalias !15
  %1211 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1209, <8 x i32> %1210, i32 1)
  %1212 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1206, <16 x i32> %1211, i32 24)
  %1213 = bitcast <16 x i32> %1212 to <32 x bfloat>
  %1214 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1213, i32 0)
  %1215 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1199, i32 -2, i32 1)
  %1216 = and <16 x i32> %1215, %4
  %1217 = add <16 x i32> %1216, %52
  %1218 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1217, i32 0)
  %1219 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1218), !noalias !20
  %1220 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1219, i32 0)
  %1221 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1218), !noalias !20
  %1222 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1220, <8 x i32> %1221, i32 1)
  %1223 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1217, i32 1)
  %1224 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1223), !noalias !20
  %1225 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1224, i32 0)
  %1226 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1223), !noalias !20
  %1227 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1225, <8 x i32> %1226, i32 1)
  %1228 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1222, <16 x i32> %1227, i32 24)
  %1229 = bitcast <16 x i32> %1228 to <32 x bfloat>
  %1230 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1229, i32 0)
  %1231 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1169, i32 0)
  %1232 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1231, <16 x bfloat> %106, i32 1)
  %1233 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1185, i32 0)
  %1234 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1233, <16 x bfloat> %106, i32 1)
  %1235 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1232, <32 x bfloat> %1234, i32 60)
  %1236 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %1235)
  %1237 = getelementptr inbounds bfloat, ptr %1, i20 400
  store <16 x bfloat> %1236, ptr %1237, align 32, !tbaa !2
  %1238 = bitcast <8 x i32> %1198 to <16 x i16>
  %1239 = getelementptr bfloat, ptr %0, i20 464
  %1240 = load <16 x bfloat>, ptr %1239, align 32, !tbaa !2
  %1241 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %1195, i32 8)
  %1242 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1241, <16 x i32> %14, i32 2)
  %1243 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1242, i32 0)
  %1244 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %1238, i32 0, i32 0)
  %1245 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1244, i32 6, i32 1)
  %1246 = add <16 x i32> %1245, %31
  %1247 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1246, i32 0)
  %1248 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1247), !noalias !15
  %1249 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1248, i32 0)
  %1250 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1247), !noalias !15
  %1251 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1249, <8 x i32> %1250, i32 1)
  %1252 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1246, i32 1)
  %1253 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1252), !noalias !15
  %1254 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1253, i32 0)
  %1255 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1252), !noalias !15
  %1256 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1254, <8 x i32> %1255, i32 1)
  %1257 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1251, <16 x i32> %1256, i32 24)
  %1258 = bitcast <16 x i32> %1257 to <32 x bfloat>
  %1259 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1258, i32 0)
  %1260 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1244, i32 -2, i32 1)
  %1261 = and <16 x i32> %1260, %4
  %1262 = add <16 x i32> %1261, %52
  %1263 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1262, i32 0)
  %1264 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1263), !noalias !20
  %1265 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1264, i32 0)
  %1266 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1263), !noalias !20
  %1267 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1265, <8 x i32> %1266, i32 1)
  %1268 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1262, i32 1)
  %1269 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1268), !noalias !20
  %1270 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1269, i32 0)
  %1271 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1268), !noalias !20
  %1272 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1270, <8 x i32> %1271, i32 1)
  %1273 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1267, <16 x i32> %1272, i32 24)
  %1274 = bitcast <16 x i32> %1273 to <32 x bfloat>
  %1275 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1274, i32 0)
  %1276 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1214, i32 0)
  %1277 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1276, <16 x bfloat> %106, i32 1)
  %1278 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1230, i32 0)
  %1279 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1278, <16 x bfloat> %106, i32 1)
  %1280 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1277, <32 x bfloat> %1279, i32 60)
  %1281 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %1280)
  %1282 = getelementptr inbounds bfloat, ptr %1, i20 416
  store <16 x bfloat> %1281, ptr %1282, align 32, !tbaa !2
  %1283 = bitcast <8 x i32> %1243 to <16 x i16>
  %1284 = getelementptr bfloat, ptr %0, i20 480
  %1285 = load <16 x bfloat>, ptr %1284, align 32, !tbaa !2
  %1286 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %1240, i32 8)
  %1287 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1286, <16 x i32> %14, i32 2)
  %1288 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1287, i32 0)
  %1289 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %1283, i32 0, i32 0)
  %1290 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1289, i32 6, i32 1)
  %1291 = add <16 x i32> %1290, %31
  %1292 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1291, i32 0)
  %1293 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1292), !noalias !15
  %1294 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1293, i32 0)
  %1295 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1292), !noalias !15
  %1296 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1294, <8 x i32> %1295, i32 1)
  %1297 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1291, i32 1)
  %1298 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1297), !noalias !15
  %1299 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1298, i32 0)
  %1300 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1297), !noalias !15
  %1301 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1299, <8 x i32> %1300, i32 1)
  %1302 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1296, <16 x i32> %1301, i32 24)
  %1303 = bitcast <16 x i32> %1302 to <32 x bfloat>
  %1304 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1303, i32 0)
  %1305 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1289, i32 -2, i32 1)
  %1306 = and <16 x i32> %1305, %4
  %1307 = add <16 x i32> %1306, %52
  %1308 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1307, i32 0)
  %1309 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1308), !noalias !20
  %1310 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1309, i32 0)
  %1311 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1308), !noalias !20
  %1312 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1310, <8 x i32> %1311, i32 1)
  %1313 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1307, i32 1)
  %1314 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1313), !noalias !20
  %1315 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1314, i32 0)
  %1316 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1313), !noalias !20
  %1317 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1315, <8 x i32> %1316, i32 1)
  %1318 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1312, <16 x i32> %1317, i32 24)
  %1319 = bitcast <16 x i32> %1318 to <32 x bfloat>
  %1320 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1319, i32 0)
  %1321 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1259, i32 0)
  %1322 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1321, <16 x bfloat> %106, i32 1)
  %1323 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1275, i32 0)
  %1324 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1323, <16 x bfloat> %106, i32 1)
  %1325 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1322, <32 x bfloat> %1324, i32 60)
  %1326 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %1325)
  %1327 = getelementptr inbounds bfloat, ptr %1, i20 432
  store <16 x bfloat> %1326, ptr %1327, align 32, !tbaa !2
  %1328 = bitcast <8 x i32> %1288 to <16 x i16>
  %1329 = getelementptr bfloat, ptr %0, i20 496
  %1330 = load <16 x bfloat>, ptr %1329, align 32, !tbaa !2
  %1331 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %1285, i32 8)
  %1332 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1331, <16 x i32> %14, i32 2)
  %1333 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1332, i32 0)
  %1334 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %1328, i32 0, i32 0)
  %1335 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1334, i32 6, i32 1)
  %1336 = add <16 x i32> %1335, %31
  %1337 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1336, i32 0)
  %1338 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1337), !noalias !15
  %1339 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1338, i32 0)
  %1340 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1337), !noalias !15
  %1341 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1339, <8 x i32> %1340, i32 1)
  %1342 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1336, i32 1)
  %1343 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1342), !noalias !15
  %1344 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1343, i32 0)
  %1345 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1342), !noalias !15
  %1346 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1344, <8 x i32> %1345, i32 1)
  %1347 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1341, <16 x i32> %1346, i32 24)
  %1348 = bitcast <16 x i32> %1347 to <32 x bfloat>
  %1349 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1348, i32 0)
  %1350 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1334, i32 -2, i32 1)
  %1351 = and <16 x i32> %1350, %4
  %1352 = add <16 x i32> %1351, %52
  %1353 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1352, i32 0)
  %1354 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1353), !noalias !20
  %1355 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1354, i32 0)
  %1356 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1353), !noalias !20
  %1357 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1355, <8 x i32> %1356, i32 1)
  %1358 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1352, i32 1)
  %1359 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1358), !noalias !20
  %1360 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1359, i32 0)
  %1361 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1358), !noalias !20
  %1362 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1360, <8 x i32> %1361, i32 1)
  %1363 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1357, <16 x i32> %1362, i32 24)
  %1364 = bitcast <16 x i32> %1363 to <32 x bfloat>
  %1365 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1364, i32 0)
  %1366 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1304, i32 0)
  %1367 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1366, <16 x bfloat> %106, i32 1)
  %1368 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1320, i32 0)
  %1369 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1368, <16 x bfloat> %106, i32 1)
  %1370 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1367, <32 x bfloat> %1369, i32 60)
  %1371 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %1370)
  %1372 = getelementptr inbounds bfloat, ptr %1, i20 448
  store <16 x bfloat> %1371, ptr %1372, align 32, !tbaa !2
  %1373 = bitcast <8 x i32> %1333 to <16 x i16>
  %1374 = getelementptr bfloat, ptr %0, i20 512
  %1375 = load <16 x bfloat>, ptr %1374, align 32, !tbaa !2
  %1376 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %1330, i32 8)
  %1377 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1376, <16 x i32> %14, i32 2)
  %1378 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1377, i32 0)
  %1379 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %1373, i32 0, i32 0)
  %1380 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1379, i32 6, i32 1)
  %1381 = add <16 x i32> %1380, %31
  %1382 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1381, i32 0)
  %1383 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1382), !noalias !15
  %1384 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1383, i32 0)
  %1385 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1382), !noalias !15
  %1386 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1384, <8 x i32> %1385, i32 1)
  %1387 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1381, i32 1)
  %1388 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1387), !noalias !15
  %1389 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1388, i32 0)
  %1390 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1387), !noalias !15
  %1391 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1389, <8 x i32> %1390, i32 1)
  %1392 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1386, <16 x i32> %1391, i32 24)
  %1393 = bitcast <16 x i32> %1392 to <32 x bfloat>
  %1394 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1393, i32 0)
  %1395 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1379, i32 -2, i32 1)
  %1396 = and <16 x i32> %1395, %4
  %1397 = add <16 x i32> %1396, %52
  %1398 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1397, i32 0)
  %1399 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1398), !noalias !20
  %1400 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1399, i32 0)
  %1401 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1398), !noalias !20
  %1402 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1400, <8 x i32> %1401, i32 1)
  %1403 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1397, i32 1)
  %1404 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1403), !noalias !20
  %1405 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1404, i32 0)
  %1406 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1403), !noalias !20
  %1407 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1405, <8 x i32> %1406, i32 1)
  %1408 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1402, <16 x i32> %1407, i32 24)
  %1409 = bitcast <16 x i32> %1408 to <32 x bfloat>
  %1410 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1409, i32 0)
  %1411 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1349, i32 0)
  %1412 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1411, <16 x bfloat> %106, i32 1)
  %1413 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1365, i32 0)
  %1414 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1413, <16 x bfloat> %106, i32 1)
  %1415 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1412, <32 x bfloat> %1414, i32 60)
  %1416 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %1415)
  %1417 = getelementptr inbounds bfloat, ptr %1, i20 464
  store <16 x bfloat> %1416, ptr %1417, align 32, !tbaa !2
  %1418 = bitcast <8 x i32> %1378 to <16 x i16>
  %1419 = getelementptr bfloat, ptr %0, i20 528
  %1420 = load <16 x bfloat>, ptr %1419, align 32, !tbaa !2
  %1421 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %1375, i32 8)
  %1422 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1421, <16 x i32> %14, i32 2)
  %1423 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1422, i32 0)
  %1424 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %1418, i32 0, i32 0)
  %1425 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1424, i32 6, i32 1)
  %1426 = add <16 x i32> %1425, %31
  %1427 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1426, i32 0)
  %1428 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1427), !noalias !15
  %1429 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1428, i32 0)
  %1430 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1427), !noalias !15
  %1431 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1429, <8 x i32> %1430, i32 1)
  %1432 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1426, i32 1)
  %1433 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1432), !noalias !15
  %1434 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1433, i32 0)
  %1435 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1432), !noalias !15
  %1436 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1434, <8 x i32> %1435, i32 1)
  %1437 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1431, <16 x i32> %1436, i32 24)
  %1438 = bitcast <16 x i32> %1437 to <32 x bfloat>
  %1439 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1438, i32 0)
  %1440 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1424, i32 -2, i32 1)
  %1441 = and <16 x i32> %1440, %4
  %1442 = add <16 x i32> %1441, %52
  %1443 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1442, i32 0)
  %1444 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1443), !noalias !20
  %1445 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1444, i32 0)
  %1446 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1443), !noalias !20
  %1447 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1445, <8 x i32> %1446, i32 1)
  %1448 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1442, i32 1)
  %1449 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1448), !noalias !20
  %1450 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1449, i32 0)
  %1451 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1448), !noalias !20
  %1452 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1450, <8 x i32> %1451, i32 1)
  %1453 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1447, <16 x i32> %1452, i32 24)
  %1454 = bitcast <16 x i32> %1453 to <32 x bfloat>
  %1455 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1454, i32 0)
  %1456 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1394, i32 0)
  %1457 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1456, <16 x bfloat> %106, i32 1)
  %1458 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1410, i32 0)
  %1459 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1458, <16 x bfloat> %106, i32 1)
  %1460 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1457, <32 x bfloat> %1459, i32 60)
  %1461 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %1460)
  %1462 = getelementptr inbounds bfloat, ptr %1, i20 480
  store <16 x bfloat> %1461, ptr %1462, align 32, !tbaa !2
  %1463 = bitcast <8 x i32> %1423 to <16 x i16>
  %1464 = getelementptr bfloat, ptr %0, i20 544
  %1465 = load <16 x bfloat>, ptr %1464, align 32, !tbaa !2
  %1466 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %1420, i32 8)
  %1467 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1466, <16 x i32> %14, i32 2)
  %1468 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1467, i32 0)
  %1469 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %1463, i32 0, i32 0)
  %1470 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1469, i32 6, i32 1)
  %1471 = add <16 x i32> %1470, %31
  %1472 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1471, i32 0)
  %1473 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1472), !noalias !15
  %1474 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1473, i32 0)
  %1475 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1472), !noalias !15
  %1476 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1474, <8 x i32> %1475, i32 1)
  %1477 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1471, i32 1)
  %1478 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1477), !noalias !15
  %1479 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1478, i32 0)
  %1480 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1477), !noalias !15
  %1481 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1479, <8 x i32> %1480, i32 1)
  %1482 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1476, <16 x i32> %1481, i32 24)
  %1483 = bitcast <16 x i32> %1482 to <32 x bfloat>
  %1484 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1483, i32 0)
  %1485 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1469, i32 -2, i32 1)
  %1486 = and <16 x i32> %1485, %4
  %1487 = add <16 x i32> %1486, %52
  %1488 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1487, i32 0)
  %1489 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1488), !noalias !20
  %1490 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1489, i32 0)
  %1491 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1488), !noalias !20
  %1492 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1490, <8 x i32> %1491, i32 1)
  %1493 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1487, i32 1)
  %1494 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1493), !noalias !20
  %1495 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1494, i32 0)
  %1496 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1493), !noalias !20
  %1497 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1495, <8 x i32> %1496, i32 1)
  %1498 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1492, <16 x i32> %1497, i32 24)
  %1499 = bitcast <16 x i32> %1498 to <32 x bfloat>
  %1500 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1499, i32 0)
  %1501 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1439, i32 0)
  %1502 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1501, <16 x bfloat> %106, i32 1)
  %1503 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1455, i32 0)
  %1504 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1503, <16 x bfloat> %106, i32 1)
  %1505 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1502, <32 x bfloat> %1504, i32 60)
  %1506 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %1505)
  %1507 = getelementptr inbounds bfloat, ptr %1, i20 496
  store <16 x bfloat> %1506, ptr %1507, align 32, !tbaa !2
  %1508 = bitcast <8 x i32> %1468 to <16 x i16>
  %1509 = getelementptr bfloat, ptr %0, i20 560
  %1510 = load <16 x bfloat>, ptr %1509, align 32, !tbaa !2
  %1511 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %1465, i32 8)
  %1512 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1511, <16 x i32> %14, i32 2)
  %1513 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1512, i32 0)
  %1514 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %1508, i32 0, i32 0)
  %1515 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1514, i32 6, i32 1)
  %1516 = add <16 x i32> %1515, %31
  %1517 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1516, i32 0)
  %1518 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1517), !noalias !15
  %1519 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1518, i32 0)
  %1520 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1517), !noalias !15
  %1521 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1519, <8 x i32> %1520, i32 1)
  %1522 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1516, i32 1)
  %1523 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1522), !noalias !15
  %1524 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1523, i32 0)
  %1525 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1522), !noalias !15
  %1526 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1524, <8 x i32> %1525, i32 1)
  %1527 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1521, <16 x i32> %1526, i32 24)
  %1528 = bitcast <16 x i32> %1527 to <32 x bfloat>
  %1529 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1528, i32 0)
  %1530 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1514, i32 -2, i32 1)
  %1531 = and <16 x i32> %1530, %4
  %1532 = add <16 x i32> %1531, %52
  %1533 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1532, i32 0)
  %1534 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1533), !noalias !20
  %1535 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1534, i32 0)
  %1536 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1533), !noalias !20
  %1537 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1535, <8 x i32> %1536, i32 1)
  %1538 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1532, i32 1)
  %1539 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1538), !noalias !20
  %1540 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1539, i32 0)
  %1541 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1538), !noalias !20
  %1542 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1540, <8 x i32> %1541, i32 1)
  %1543 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1537, <16 x i32> %1542, i32 24)
  %1544 = bitcast <16 x i32> %1543 to <32 x bfloat>
  %1545 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1544, i32 0)
  %1546 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1484, i32 0)
  %1547 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1546, <16 x bfloat> %106, i32 1)
  %1548 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1500, i32 0)
  %1549 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1548, <16 x bfloat> %106, i32 1)
  %1550 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1547, <32 x bfloat> %1549, i32 60)
  %1551 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %1550)
  %1552 = getelementptr inbounds bfloat, ptr %1, i20 512
  store <16 x bfloat> %1551, ptr %1552, align 32, !tbaa !2
  %1553 = bitcast <8 x i32> %1513 to <16 x i16>
  %1554 = getelementptr bfloat, ptr %0, i20 576
  %1555 = load <16 x bfloat>, ptr %1554, align 32, !tbaa !2
  %1556 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %1510, i32 8)
  %1557 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1556, <16 x i32> %14, i32 2)
  %1558 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1557, i32 0)
  %1559 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %1553, i32 0, i32 0)
  %1560 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1559, i32 6, i32 1)
  %1561 = add <16 x i32> %1560, %31
  %1562 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1561, i32 0)
  %1563 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1562), !noalias !15
  %1564 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1563, i32 0)
  %1565 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1562), !noalias !15
  %1566 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1564, <8 x i32> %1565, i32 1)
  %1567 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1561, i32 1)
  %1568 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1567), !noalias !15
  %1569 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1568, i32 0)
  %1570 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1567), !noalias !15
  %1571 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1569, <8 x i32> %1570, i32 1)
  %1572 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1566, <16 x i32> %1571, i32 24)
  %1573 = bitcast <16 x i32> %1572 to <32 x bfloat>
  %1574 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1573, i32 0)
  %1575 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1559, i32 -2, i32 1)
  %1576 = and <16 x i32> %1575, %4
  %1577 = add <16 x i32> %1576, %52
  %1578 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1577, i32 0)
  %1579 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1578), !noalias !20
  %1580 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1579, i32 0)
  %1581 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1578), !noalias !20
  %1582 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1580, <8 x i32> %1581, i32 1)
  %1583 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1577, i32 1)
  %1584 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1583), !noalias !20
  %1585 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1584, i32 0)
  %1586 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1583), !noalias !20
  %1587 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1585, <8 x i32> %1586, i32 1)
  %1588 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1582, <16 x i32> %1587, i32 24)
  %1589 = bitcast <16 x i32> %1588 to <32 x bfloat>
  %1590 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1589, i32 0)
  %1591 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1529, i32 0)
  %1592 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1591, <16 x bfloat> %106, i32 1)
  %1593 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1545, i32 0)
  %1594 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1593, <16 x bfloat> %106, i32 1)
  %1595 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1592, <32 x bfloat> %1594, i32 60)
  %1596 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %1595)
  %1597 = getelementptr inbounds bfloat, ptr %1, i20 528
  store <16 x bfloat> %1596, ptr %1597, align 32, !tbaa !2
  %1598 = bitcast <8 x i32> %1558 to <16 x i16>
  %1599 = getelementptr bfloat, ptr %0, i20 592
  %1600 = load <16 x bfloat>, ptr %1599, align 32, !tbaa !2
  %1601 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %1555, i32 8)
  %1602 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1601, <16 x i32> %14, i32 2)
  %1603 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1602, i32 0)
  %1604 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %1598, i32 0, i32 0)
  %1605 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1604, i32 6, i32 1)
  %1606 = add <16 x i32> %1605, %31
  %1607 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1606, i32 0)
  %1608 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1607), !noalias !15
  %1609 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1608, i32 0)
  %1610 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1607), !noalias !15
  %1611 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1609, <8 x i32> %1610, i32 1)
  %1612 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1606, i32 1)
  %1613 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1612), !noalias !15
  %1614 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1613, i32 0)
  %1615 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1612), !noalias !15
  %1616 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1614, <8 x i32> %1615, i32 1)
  %1617 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1611, <16 x i32> %1616, i32 24)
  %1618 = bitcast <16 x i32> %1617 to <32 x bfloat>
  %1619 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1618, i32 0)
  %1620 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1604, i32 -2, i32 1)
  %1621 = and <16 x i32> %1620, %4
  %1622 = add <16 x i32> %1621, %52
  %1623 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1622, i32 0)
  %1624 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1623), !noalias !20
  %1625 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1624, i32 0)
  %1626 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1623), !noalias !20
  %1627 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1625, <8 x i32> %1626, i32 1)
  %1628 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1622, i32 1)
  %1629 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1628), !noalias !20
  %1630 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1629, i32 0)
  %1631 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1628), !noalias !20
  %1632 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1630, <8 x i32> %1631, i32 1)
  %1633 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1627, <16 x i32> %1632, i32 24)
  %1634 = bitcast <16 x i32> %1633 to <32 x bfloat>
  %1635 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1634, i32 0)
  %1636 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1574, i32 0)
  %1637 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1636, <16 x bfloat> %106, i32 1)
  %1638 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1590, i32 0)
  %1639 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1638, <16 x bfloat> %106, i32 1)
  %1640 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1637, <32 x bfloat> %1639, i32 60)
  %1641 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %1640)
  %1642 = getelementptr inbounds bfloat, ptr %1, i20 544
  store <16 x bfloat> %1641, ptr %1642, align 32, !tbaa !2
  %1643 = bitcast <8 x i32> %1603 to <16 x i16>
  %1644 = getelementptr bfloat, ptr %0, i20 608
  %1645 = load <16 x bfloat>, ptr %1644, align 32, !tbaa !2
  %1646 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %1600, i32 8)
  %1647 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1646, <16 x i32> %14, i32 2)
  %1648 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1647, i32 0)
  %1649 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %1643, i32 0, i32 0)
  %1650 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1649, i32 6, i32 1)
  %1651 = add <16 x i32> %1650, %31
  %1652 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1651, i32 0)
  %1653 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1652), !noalias !15
  %1654 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1653, i32 0)
  %1655 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1652), !noalias !15
  %1656 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1654, <8 x i32> %1655, i32 1)
  %1657 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1651, i32 1)
  %1658 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1657), !noalias !15
  %1659 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1658, i32 0)
  %1660 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1657), !noalias !15
  %1661 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1659, <8 x i32> %1660, i32 1)
  %1662 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1656, <16 x i32> %1661, i32 24)
  %1663 = bitcast <16 x i32> %1662 to <32 x bfloat>
  %1664 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1663, i32 0)
  %1665 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1649, i32 -2, i32 1)
  %1666 = and <16 x i32> %1665, %4
  %1667 = add <16 x i32> %1666, %52
  %1668 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1667, i32 0)
  %1669 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1668), !noalias !20
  %1670 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1669, i32 0)
  %1671 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1668), !noalias !20
  %1672 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1670, <8 x i32> %1671, i32 1)
  %1673 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1667, i32 1)
  %1674 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1673), !noalias !20
  %1675 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1674, i32 0)
  %1676 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1673), !noalias !20
  %1677 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1675, <8 x i32> %1676, i32 1)
  %1678 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1672, <16 x i32> %1677, i32 24)
  %1679 = bitcast <16 x i32> %1678 to <32 x bfloat>
  %1680 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1679, i32 0)
  %1681 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1619, i32 0)
  %1682 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1681, <16 x bfloat> %106, i32 1)
  %1683 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1635, i32 0)
  %1684 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1683, <16 x bfloat> %106, i32 1)
  %1685 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1682, <32 x bfloat> %1684, i32 60)
  %1686 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %1685)
  %1687 = getelementptr inbounds bfloat, ptr %1, i20 560
  store <16 x bfloat> %1686, ptr %1687, align 32, !tbaa !2
  %1688 = bitcast <8 x i32> %1648 to <16 x i16>
  %1689 = getelementptr bfloat, ptr %0, i20 624
  %1690 = load <16 x bfloat>, ptr %1689, align 32, !tbaa !2
  %1691 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %1645, i32 8)
  %1692 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1691, <16 x i32> %14, i32 2)
  %1693 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1692, i32 0)
  %1694 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %1688, i32 0, i32 0)
  %1695 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1694, i32 6, i32 1)
  %1696 = add <16 x i32> %1695, %31
  %1697 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1696, i32 0)
  %1698 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1697), !noalias !15
  %1699 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1698, i32 0)
  %1700 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1697), !noalias !15
  %1701 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1699, <8 x i32> %1700, i32 1)
  %1702 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1696, i32 1)
  %1703 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1702), !noalias !15
  %1704 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1703, i32 0)
  %1705 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1702), !noalias !15
  %1706 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1704, <8 x i32> %1705, i32 1)
  %1707 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1701, <16 x i32> %1706, i32 24)
  %1708 = bitcast <16 x i32> %1707 to <32 x bfloat>
  %1709 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1708, i32 0)
  %1710 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1694, i32 -2, i32 1)
  %1711 = and <16 x i32> %1710, %4
  %1712 = add <16 x i32> %1711, %52
  %1713 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1712, i32 0)
  %1714 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1713), !noalias !20
  %1715 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1714, i32 0)
  %1716 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1713), !noalias !20
  %1717 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1715, <8 x i32> %1716, i32 1)
  %1718 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1712, i32 1)
  %1719 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1718), !noalias !20
  %1720 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1719, i32 0)
  %1721 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1718), !noalias !20
  %1722 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1720, <8 x i32> %1721, i32 1)
  %1723 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1717, <16 x i32> %1722, i32 24)
  %1724 = bitcast <16 x i32> %1723 to <32 x bfloat>
  %1725 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1724, i32 0)
  %1726 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1664, i32 0)
  %1727 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1726, <16 x bfloat> %106, i32 1)
  %1728 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1680, i32 0)
  %1729 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1728, <16 x bfloat> %106, i32 1)
  %1730 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1727, <32 x bfloat> %1729, i32 60)
  %1731 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %1730)
  %1732 = getelementptr inbounds bfloat, ptr %1, i20 576
  store <16 x bfloat> %1731, ptr %1732, align 32, !tbaa !2
  %1733 = bitcast <8 x i32> %1693 to <16 x i16>
  %1734 = getelementptr bfloat, ptr %0, i20 640
  %1735 = load <16 x bfloat>, ptr %1734, align 32, !tbaa !2
  %1736 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %1690, i32 8)
  %1737 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1736, <16 x i32> %14, i32 2)
  %1738 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1737, i32 0)
  %1739 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %1733, i32 0, i32 0)
  %1740 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1739, i32 6, i32 1)
  %1741 = add <16 x i32> %1740, %31
  %1742 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1741, i32 0)
  %1743 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1742), !noalias !15
  %1744 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1743, i32 0)
  %1745 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1742), !noalias !15
  %1746 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1744, <8 x i32> %1745, i32 1)
  %1747 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1741, i32 1)
  %1748 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1747), !noalias !15
  %1749 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1748, i32 0)
  %1750 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1747), !noalias !15
  %1751 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1749, <8 x i32> %1750, i32 1)
  %1752 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1746, <16 x i32> %1751, i32 24)
  %1753 = bitcast <16 x i32> %1752 to <32 x bfloat>
  %1754 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1753, i32 0)
  %1755 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1739, i32 -2, i32 1)
  %1756 = and <16 x i32> %1755, %4
  %1757 = add <16 x i32> %1756, %52
  %1758 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1757, i32 0)
  %1759 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1758), !noalias !20
  %1760 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1759, i32 0)
  %1761 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1758), !noalias !20
  %1762 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1760, <8 x i32> %1761, i32 1)
  %1763 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1757, i32 1)
  %1764 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1763), !noalias !20
  %1765 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1764, i32 0)
  %1766 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1763), !noalias !20
  %1767 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1765, <8 x i32> %1766, i32 1)
  %1768 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1762, <16 x i32> %1767, i32 24)
  %1769 = bitcast <16 x i32> %1768 to <32 x bfloat>
  %1770 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1769, i32 0)
  %1771 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1709, i32 0)
  %1772 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1771, <16 x bfloat> %106, i32 1)
  %1773 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1725, i32 0)
  %1774 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1773, <16 x bfloat> %106, i32 1)
  %1775 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1772, <32 x bfloat> %1774, i32 60)
  %1776 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %1775)
  %1777 = getelementptr inbounds bfloat, ptr %1, i20 592
  store <16 x bfloat> %1776, ptr %1777, align 32, !tbaa !2
  %1778 = bitcast <8 x i32> %1738 to <16 x i16>
  %1779 = getelementptr bfloat, ptr %0, i20 656
  %1780 = load <16 x bfloat>, ptr %1779, align 32, !tbaa !2
  %1781 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %1735, i32 8)
  %1782 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1781, <16 x i32> %14, i32 2)
  %1783 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1782, i32 0)
  %1784 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %1778, i32 0, i32 0)
  %1785 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1784, i32 6, i32 1)
  %1786 = add <16 x i32> %1785, %31
  %1787 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1786, i32 0)
  %1788 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1787), !noalias !15
  %1789 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1788, i32 0)
  %1790 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1787), !noalias !15
  %1791 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1789, <8 x i32> %1790, i32 1)
  %1792 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1786, i32 1)
  %1793 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1792), !noalias !15
  %1794 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1793, i32 0)
  %1795 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1792), !noalias !15
  %1796 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1794, <8 x i32> %1795, i32 1)
  %1797 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1791, <16 x i32> %1796, i32 24)
  %1798 = bitcast <16 x i32> %1797 to <32 x bfloat>
  %1799 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1798, i32 0)
  %1800 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1784, i32 -2, i32 1)
  %1801 = and <16 x i32> %1800, %4
  %1802 = add <16 x i32> %1801, %52
  %1803 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1802, i32 0)
  %1804 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1803), !noalias !20
  %1805 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1804, i32 0)
  %1806 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1803), !noalias !20
  %1807 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1805, <8 x i32> %1806, i32 1)
  %1808 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1802, i32 1)
  %1809 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1808), !noalias !20
  %1810 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1809, i32 0)
  %1811 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1808), !noalias !20
  %1812 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1810, <8 x i32> %1811, i32 1)
  %1813 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1807, <16 x i32> %1812, i32 24)
  %1814 = bitcast <16 x i32> %1813 to <32 x bfloat>
  %1815 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1814, i32 0)
  %1816 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1754, i32 0)
  %1817 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1816, <16 x bfloat> %106, i32 1)
  %1818 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1770, i32 0)
  %1819 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1818, <16 x bfloat> %106, i32 1)
  %1820 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1817, <32 x bfloat> %1819, i32 60)
  %1821 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %1820)
  %1822 = getelementptr inbounds bfloat, ptr %1, i20 608
  store <16 x bfloat> %1821, ptr %1822, align 32, !tbaa !2
  %1823 = bitcast <8 x i32> %1783 to <16 x i16>
  %1824 = getelementptr bfloat, ptr %0, i20 672
  %1825 = load <16 x bfloat>, ptr %1824, align 32, !tbaa !2
  %1826 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %1780, i32 8)
  %1827 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1826, <16 x i32> %14, i32 2)
  %1828 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1827, i32 0)
  %1829 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %1823, i32 0, i32 0)
  %1830 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1829, i32 6, i32 1)
  %1831 = add <16 x i32> %1830, %31
  %1832 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1831, i32 0)
  %1833 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1832), !noalias !15
  %1834 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1833, i32 0)
  %1835 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1832), !noalias !15
  %1836 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1834, <8 x i32> %1835, i32 1)
  %1837 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1831, i32 1)
  %1838 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1837), !noalias !15
  %1839 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1838, i32 0)
  %1840 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1837), !noalias !15
  %1841 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1839, <8 x i32> %1840, i32 1)
  %1842 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1836, <16 x i32> %1841, i32 24)
  %1843 = bitcast <16 x i32> %1842 to <32 x bfloat>
  %1844 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1843, i32 0)
  %1845 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1829, i32 -2, i32 1)
  %1846 = and <16 x i32> %1845, %4
  %1847 = add <16 x i32> %1846, %52
  %1848 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1847, i32 0)
  %1849 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1848), !noalias !20
  %1850 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1849, i32 0)
  %1851 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1848), !noalias !20
  %1852 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1850, <8 x i32> %1851, i32 1)
  %1853 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1847, i32 1)
  %1854 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1853), !noalias !20
  %1855 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1854, i32 0)
  %1856 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1853), !noalias !20
  %1857 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1855, <8 x i32> %1856, i32 1)
  %1858 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1852, <16 x i32> %1857, i32 24)
  %1859 = bitcast <16 x i32> %1858 to <32 x bfloat>
  %1860 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1859, i32 0)
  %1861 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1799, i32 0)
  %1862 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1861, <16 x bfloat> %106, i32 1)
  %1863 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1815, i32 0)
  %1864 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1863, <16 x bfloat> %106, i32 1)
  %1865 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1862, <32 x bfloat> %1864, i32 60)
  %1866 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %1865)
  %1867 = getelementptr inbounds bfloat, ptr %1, i20 624
  store <16 x bfloat> %1866, ptr %1867, align 32, !tbaa !2
  %1868 = bitcast <8 x i32> %1828 to <16 x i16>
  %1869 = getelementptr bfloat, ptr %0, i20 688
  %1870 = load <16 x bfloat>, ptr %1869, align 32, !tbaa !2
  %1871 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %1825, i32 8)
  %1872 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1871, <16 x i32> %14, i32 2)
  %1873 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1872, i32 0)
  %1874 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %1868, i32 0, i32 0)
  %1875 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1874, i32 6, i32 1)
  %1876 = add <16 x i32> %1875, %31
  %1877 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1876, i32 0)
  %1878 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1877), !noalias !15
  %1879 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1878, i32 0)
  %1880 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1877), !noalias !15
  %1881 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1879, <8 x i32> %1880, i32 1)
  %1882 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1876, i32 1)
  %1883 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1882), !noalias !15
  %1884 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1883, i32 0)
  %1885 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1882), !noalias !15
  %1886 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1884, <8 x i32> %1885, i32 1)
  %1887 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1881, <16 x i32> %1886, i32 24)
  %1888 = bitcast <16 x i32> %1887 to <32 x bfloat>
  %1889 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1888, i32 0)
  %1890 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1874, i32 -2, i32 1)
  %1891 = and <16 x i32> %1890, %4
  %1892 = add <16 x i32> %1891, %52
  %1893 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1892, i32 0)
  %1894 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1893), !noalias !20
  %1895 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1894, i32 0)
  %1896 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1893), !noalias !20
  %1897 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1895, <8 x i32> %1896, i32 1)
  %1898 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1892, i32 1)
  %1899 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1898), !noalias !20
  %1900 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1899, i32 0)
  %1901 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1898), !noalias !20
  %1902 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1900, <8 x i32> %1901, i32 1)
  %1903 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1897, <16 x i32> %1902, i32 24)
  %1904 = bitcast <16 x i32> %1903 to <32 x bfloat>
  %1905 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1904, i32 0)
  %1906 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1844, i32 0)
  %1907 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1906, <16 x bfloat> %106, i32 1)
  %1908 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1860, i32 0)
  %1909 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1908, <16 x bfloat> %106, i32 1)
  %1910 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1907, <32 x bfloat> %1909, i32 60)
  %1911 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %1910)
  %1912 = getelementptr inbounds bfloat, ptr %1, i20 640
  store <16 x bfloat> %1911, ptr %1912, align 32, !tbaa !2
  %1913 = bitcast <8 x i32> %1873 to <16 x i16>
  %1914 = getelementptr bfloat, ptr %0, i20 704
  %1915 = load <16 x bfloat>, ptr %1914, align 32, !tbaa !2
  %1916 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %1870, i32 8)
  %1917 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1916, <16 x i32> %14, i32 2)
  %1918 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1917, i32 0)
  %1919 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %1913, i32 0, i32 0)
  %1920 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1919, i32 6, i32 1)
  %1921 = add <16 x i32> %1920, %31
  %1922 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1921, i32 0)
  %1923 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1922), !noalias !15
  %1924 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1923, i32 0)
  %1925 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1922), !noalias !15
  %1926 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1924, <8 x i32> %1925, i32 1)
  %1927 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1921, i32 1)
  %1928 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1927), !noalias !15
  %1929 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1928, i32 0)
  %1930 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1927), !noalias !15
  %1931 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1929, <8 x i32> %1930, i32 1)
  %1932 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1926, <16 x i32> %1931, i32 24)
  %1933 = bitcast <16 x i32> %1932 to <32 x bfloat>
  %1934 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1933, i32 0)
  %1935 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1919, i32 -2, i32 1)
  %1936 = and <16 x i32> %1935, %4
  %1937 = add <16 x i32> %1936, %52
  %1938 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1937, i32 0)
  %1939 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1938), !noalias !20
  %1940 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1939, i32 0)
  %1941 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1938), !noalias !20
  %1942 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1940, <8 x i32> %1941, i32 1)
  %1943 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1937, i32 1)
  %1944 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1943), !noalias !20
  %1945 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1944, i32 0)
  %1946 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1943), !noalias !20
  %1947 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1945, <8 x i32> %1946, i32 1)
  %1948 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1942, <16 x i32> %1947, i32 24)
  %1949 = bitcast <16 x i32> %1948 to <32 x bfloat>
  %1950 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1949, i32 0)
  %1951 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1889, i32 0)
  %1952 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1951, <16 x bfloat> %106, i32 1)
  %1953 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1905, i32 0)
  %1954 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1953, <16 x bfloat> %106, i32 1)
  %1955 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1952, <32 x bfloat> %1954, i32 60)
  %1956 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %1955)
  %1957 = getelementptr inbounds bfloat, ptr %1, i20 656
  store <16 x bfloat> %1956, ptr %1957, align 32, !tbaa !2
  %1958 = bitcast <8 x i32> %1918 to <16 x i16>
  %1959 = getelementptr bfloat, ptr %0, i20 720
  %1960 = load <16 x bfloat>, ptr %1959, align 32, !tbaa !2
  %1961 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %1915, i32 8)
  %1962 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1961, <16 x i32> %14, i32 2)
  %1963 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1962, i32 0)
  %1964 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %1958, i32 0, i32 0)
  %1965 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1964, i32 6, i32 1)
  %1966 = add <16 x i32> %1965, %31
  %1967 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1966, i32 0)
  %1968 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1967), !noalias !15
  %1969 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1968, i32 0)
  %1970 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1967), !noalias !15
  %1971 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1969, <8 x i32> %1970, i32 1)
  %1972 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1966, i32 1)
  %1973 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1972), !noalias !15
  %1974 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1973, i32 0)
  %1975 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1972), !noalias !15
  %1976 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1974, <8 x i32> %1975, i32 1)
  %1977 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1971, <16 x i32> %1976, i32 24)
  %1978 = bitcast <16 x i32> %1977 to <32 x bfloat>
  %1979 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1978, i32 0)
  %1980 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1964, i32 -2, i32 1)
  %1981 = and <16 x i32> %1980, %4
  %1982 = add <16 x i32> %1981, %52
  %1983 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1982, i32 0)
  %1984 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1983), !noalias !20
  %1985 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1984, i32 0)
  %1986 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1983), !noalias !20
  %1987 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1985, <8 x i32> %1986, i32 1)
  %1988 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1982, i32 1)
  %1989 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1988), !noalias !20
  %1990 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1989, i32 0)
  %1991 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1988), !noalias !20
  %1992 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1990, <8 x i32> %1991, i32 1)
  %1993 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1987, <16 x i32> %1992, i32 24)
  %1994 = bitcast <16 x i32> %1993 to <32 x bfloat>
  %1995 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1994, i32 0)
  %1996 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1934, i32 0)
  %1997 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1996, <16 x bfloat> %106, i32 1)
  %1998 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1950, i32 0)
  %1999 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1998, <16 x bfloat> %106, i32 1)
  %2000 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1997, <32 x bfloat> %1999, i32 60)
  %2001 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %2000)
  %2002 = getelementptr inbounds bfloat, ptr %1, i20 672
  store <16 x bfloat> %2001, ptr %2002, align 32, !tbaa !2
  %2003 = bitcast <8 x i32> %1963 to <16 x i16>
  %2004 = getelementptr bfloat, ptr %0, i20 736
  %2005 = load <16 x bfloat>, ptr %2004, align 32, !tbaa !2
  %2006 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %1960, i32 8)
  %2007 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2006, <16 x i32> %14, i32 2)
  %2008 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2007, i32 0)
  %2009 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %2003, i32 0, i32 0)
  %2010 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2009, i32 6, i32 1)
  %2011 = add <16 x i32> %2010, %31
  %2012 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2011, i32 0)
  %2013 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2012), !noalias !15
  %2014 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2013, i32 0)
  %2015 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2012), !noalias !15
  %2016 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2014, <8 x i32> %2015, i32 1)
  %2017 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2011, i32 1)
  %2018 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2017), !noalias !15
  %2019 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2018, i32 0)
  %2020 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2017), !noalias !15
  %2021 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2019, <8 x i32> %2020, i32 1)
  %2022 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2016, <16 x i32> %2021, i32 24)
  %2023 = bitcast <16 x i32> %2022 to <32 x bfloat>
  %2024 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2023, i32 0)
  %2025 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2009, i32 -2, i32 1)
  %2026 = and <16 x i32> %2025, %4
  %2027 = add <16 x i32> %2026, %52
  %2028 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2027, i32 0)
  %2029 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2028), !noalias !20
  %2030 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2029, i32 0)
  %2031 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2028), !noalias !20
  %2032 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2030, <8 x i32> %2031, i32 1)
  %2033 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2027, i32 1)
  %2034 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2033), !noalias !20
  %2035 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2034, i32 0)
  %2036 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2033), !noalias !20
  %2037 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2035, <8 x i32> %2036, i32 1)
  %2038 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2032, <16 x i32> %2037, i32 24)
  %2039 = bitcast <16 x i32> %2038 to <32 x bfloat>
  %2040 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2039, i32 0)
  %2041 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1979, i32 0)
  %2042 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2041, <16 x bfloat> %106, i32 1)
  %2043 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1995, i32 0)
  %2044 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2043, <16 x bfloat> %106, i32 1)
  %2045 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %2042, <32 x bfloat> %2044, i32 60)
  %2046 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %2045)
  %2047 = getelementptr inbounds bfloat, ptr %1, i20 688
  store <16 x bfloat> %2046, ptr %2047, align 32, !tbaa !2
  %2048 = bitcast <8 x i32> %2008 to <16 x i16>
  %2049 = getelementptr bfloat, ptr %0, i20 752
  %2050 = load <16 x bfloat>, ptr %2049, align 32, !tbaa !2
  %2051 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %2005, i32 8)
  %2052 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2051, <16 x i32> %14, i32 2)
  %2053 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2052, i32 0)
  %2054 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %2048, i32 0, i32 0)
  %2055 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2054, i32 6, i32 1)
  %2056 = add <16 x i32> %2055, %31
  %2057 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2056, i32 0)
  %2058 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2057), !noalias !15
  %2059 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2058, i32 0)
  %2060 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2057), !noalias !15
  %2061 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2059, <8 x i32> %2060, i32 1)
  %2062 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2056, i32 1)
  %2063 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2062), !noalias !15
  %2064 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2063, i32 0)
  %2065 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2062), !noalias !15
  %2066 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2064, <8 x i32> %2065, i32 1)
  %2067 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2061, <16 x i32> %2066, i32 24)
  %2068 = bitcast <16 x i32> %2067 to <32 x bfloat>
  %2069 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2068, i32 0)
  %2070 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2054, i32 -2, i32 1)
  %2071 = and <16 x i32> %2070, %4
  %2072 = add <16 x i32> %2071, %52
  %2073 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2072, i32 0)
  %2074 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2073), !noalias !20
  %2075 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2074, i32 0)
  %2076 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2073), !noalias !20
  %2077 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2075, <8 x i32> %2076, i32 1)
  %2078 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2072, i32 1)
  %2079 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2078), !noalias !20
  %2080 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2079, i32 0)
  %2081 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2078), !noalias !20
  %2082 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2080, <8 x i32> %2081, i32 1)
  %2083 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2077, <16 x i32> %2082, i32 24)
  %2084 = bitcast <16 x i32> %2083 to <32 x bfloat>
  %2085 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2084, i32 0)
  %2086 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2024, i32 0)
  %2087 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2086, <16 x bfloat> %106, i32 1)
  %2088 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2040, i32 0)
  %2089 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2088, <16 x bfloat> %106, i32 1)
  %2090 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %2087, <32 x bfloat> %2089, i32 60)
  %2091 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %2090)
  %2092 = getelementptr inbounds bfloat, ptr %1, i20 704
  store <16 x bfloat> %2091, ptr %2092, align 32, !tbaa !2
  %2093 = bitcast <8 x i32> %2053 to <16 x i16>
  %2094 = getelementptr bfloat, ptr %0, i20 768
  %2095 = load <16 x bfloat>, ptr %2094, align 32, !tbaa !2
  %2096 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %2050, i32 8)
  %2097 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2096, <16 x i32> %14, i32 2)
  %2098 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2097, i32 0)
  %2099 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %2093, i32 0, i32 0)
  %2100 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2099, i32 6, i32 1)
  %2101 = add <16 x i32> %2100, %31
  %2102 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2101, i32 0)
  %2103 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2102), !noalias !15
  %2104 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2103, i32 0)
  %2105 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2102), !noalias !15
  %2106 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2104, <8 x i32> %2105, i32 1)
  %2107 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2101, i32 1)
  %2108 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2107), !noalias !15
  %2109 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2108, i32 0)
  %2110 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2107), !noalias !15
  %2111 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2109, <8 x i32> %2110, i32 1)
  %2112 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2106, <16 x i32> %2111, i32 24)
  %2113 = bitcast <16 x i32> %2112 to <32 x bfloat>
  %2114 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2113, i32 0)
  %2115 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2099, i32 -2, i32 1)
  %2116 = and <16 x i32> %2115, %4
  %2117 = add <16 x i32> %2116, %52
  %2118 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2117, i32 0)
  %2119 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2118), !noalias !20
  %2120 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2119, i32 0)
  %2121 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2118), !noalias !20
  %2122 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2120, <8 x i32> %2121, i32 1)
  %2123 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2117, i32 1)
  %2124 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2123), !noalias !20
  %2125 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2124, i32 0)
  %2126 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2123), !noalias !20
  %2127 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2125, <8 x i32> %2126, i32 1)
  %2128 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2122, <16 x i32> %2127, i32 24)
  %2129 = bitcast <16 x i32> %2128 to <32 x bfloat>
  %2130 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2129, i32 0)
  %2131 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2069, i32 0)
  %2132 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2131, <16 x bfloat> %106, i32 1)
  %2133 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2085, i32 0)
  %2134 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2133, <16 x bfloat> %106, i32 1)
  %2135 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %2132, <32 x bfloat> %2134, i32 60)
  %2136 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %2135)
  %2137 = getelementptr inbounds bfloat, ptr %1, i20 720
  store <16 x bfloat> %2136, ptr %2137, align 32, !tbaa !2
  %2138 = bitcast <8 x i32> %2098 to <16 x i16>
  %2139 = getelementptr bfloat, ptr %0, i20 784
  %2140 = load <16 x bfloat>, ptr %2139, align 32, !tbaa !2
  %2141 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %2095, i32 8)
  %2142 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2141, <16 x i32> %14, i32 2)
  %2143 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2142, i32 0)
  %2144 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %2138, i32 0, i32 0)
  %2145 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2144, i32 6, i32 1)
  %2146 = add <16 x i32> %2145, %31
  %2147 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2146, i32 0)
  %2148 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2147), !noalias !15
  %2149 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2148, i32 0)
  %2150 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2147), !noalias !15
  %2151 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2149, <8 x i32> %2150, i32 1)
  %2152 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2146, i32 1)
  %2153 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2152), !noalias !15
  %2154 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2153, i32 0)
  %2155 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2152), !noalias !15
  %2156 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2154, <8 x i32> %2155, i32 1)
  %2157 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2151, <16 x i32> %2156, i32 24)
  %2158 = bitcast <16 x i32> %2157 to <32 x bfloat>
  %2159 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2158, i32 0)
  %2160 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2144, i32 -2, i32 1)
  %2161 = and <16 x i32> %2160, %4
  %2162 = add <16 x i32> %2161, %52
  %2163 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2162, i32 0)
  %2164 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2163), !noalias !20
  %2165 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2164, i32 0)
  %2166 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2163), !noalias !20
  %2167 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2165, <8 x i32> %2166, i32 1)
  %2168 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2162, i32 1)
  %2169 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2168), !noalias !20
  %2170 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2169, i32 0)
  %2171 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2168), !noalias !20
  %2172 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2170, <8 x i32> %2171, i32 1)
  %2173 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2167, <16 x i32> %2172, i32 24)
  %2174 = bitcast <16 x i32> %2173 to <32 x bfloat>
  %2175 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2174, i32 0)
  %2176 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2114, i32 0)
  %2177 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2176, <16 x bfloat> %106, i32 1)
  %2178 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2130, i32 0)
  %2179 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2178, <16 x bfloat> %106, i32 1)
  %2180 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %2177, <32 x bfloat> %2179, i32 60)
  %2181 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %2180)
  %2182 = getelementptr inbounds bfloat, ptr %1, i20 736
  store <16 x bfloat> %2181, ptr %2182, align 32, !tbaa !2
  %2183 = bitcast <8 x i32> %2143 to <16 x i16>
  %2184 = getelementptr bfloat, ptr %0, i20 800
  %2185 = load <16 x bfloat>, ptr %2184, align 32, !tbaa !2
  %2186 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %2140, i32 8)
  %2187 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2186, <16 x i32> %14, i32 2)
  %2188 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2187, i32 0)
  %2189 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %2183, i32 0, i32 0)
  %2190 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2189, i32 6, i32 1)
  %2191 = add <16 x i32> %2190, %31
  %2192 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2191, i32 0)
  %2193 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2192), !noalias !15
  %2194 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2193, i32 0)
  %2195 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2192), !noalias !15
  %2196 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2194, <8 x i32> %2195, i32 1)
  %2197 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2191, i32 1)
  %2198 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2197), !noalias !15
  %2199 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2198, i32 0)
  %2200 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2197), !noalias !15
  %2201 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2199, <8 x i32> %2200, i32 1)
  %2202 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2196, <16 x i32> %2201, i32 24)
  %2203 = bitcast <16 x i32> %2202 to <32 x bfloat>
  %2204 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2203, i32 0)
  %2205 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2189, i32 -2, i32 1)
  %2206 = and <16 x i32> %2205, %4
  %2207 = add <16 x i32> %2206, %52
  %2208 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2207, i32 0)
  %2209 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2208), !noalias !20
  %2210 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2209, i32 0)
  %2211 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2208), !noalias !20
  %2212 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2210, <8 x i32> %2211, i32 1)
  %2213 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2207, i32 1)
  %2214 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2213), !noalias !20
  %2215 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2214, i32 0)
  %2216 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2213), !noalias !20
  %2217 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2215, <8 x i32> %2216, i32 1)
  %2218 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2212, <16 x i32> %2217, i32 24)
  %2219 = bitcast <16 x i32> %2218 to <32 x bfloat>
  %2220 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2219, i32 0)
  %2221 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2159, i32 0)
  %2222 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2221, <16 x bfloat> %106, i32 1)
  %2223 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2175, i32 0)
  %2224 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2223, <16 x bfloat> %106, i32 1)
  %2225 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %2222, <32 x bfloat> %2224, i32 60)
  %2226 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %2225)
  %2227 = getelementptr inbounds bfloat, ptr %1, i20 752
  store <16 x bfloat> %2226, ptr %2227, align 32, !tbaa !2
  %2228 = bitcast <8 x i32> %2188 to <16 x i16>
  %2229 = getelementptr bfloat, ptr %0, i20 816
  %2230 = load <16 x bfloat>, ptr %2229, align 32, !tbaa !2
  %2231 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %2185, i32 8)
  %2232 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2231, <16 x i32> %14, i32 2)
  %2233 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2232, i32 0)
  %2234 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %2228, i32 0, i32 0)
  %2235 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2234, i32 6, i32 1)
  %2236 = add <16 x i32> %2235, %31
  %2237 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2236, i32 0)
  %2238 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2237), !noalias !15
  %2239 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2238, i32 0)
  %2240 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2237), !noalias !15
  %2241 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2239, <8 x i32> %2240, i32 1)
  %2242 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2236, i32 1)
  %2243 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2242), !noalias !15
  %2244 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2243, i32 0)
  %2245 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2242), !noalias !15
  %2246 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2244, <8 x i32> %2245, i32 1)
  %2247 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2241, <16 x i32> %2246, i32 24)
  %2248 = bitcast <16 x i32> %2247 to <32 x bfloat>
  %2249 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2248, i32 0)
  %2250 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2234, i32 -2, i32 1)
  %2251 = and <16 x i32> %2250, %4
  %2252 = add <16 x i32> %2251, %52
  %2253 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2252, i32 0)
  %2254 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2253), !noalias !20
  %2255 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2254, i32 0)
  %2256 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2253), !noalias !20
  %2257 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2255, <8 x i32> %2256, i32 1)
  %2258 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2252, i32 1)
  %2259 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2258), !noalias !20
  %2260 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2259, i32 0)
  %2261 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2258), !noalias !20
  %2262 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2260, <8 x i32> %2261, i32 1)
  %2263 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2257, <16 x i32> %2262, i32 24)
  %2264 = bitcast <16 x i32> %2263 to <32 x bfloat>
  %2265 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2264, i32 0)
  %2266 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2204, i32 0)
  %2267 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2266, <16 x bfloat> %106, i32 1)
  %2268 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2220, i32 0)
  %2269 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2268, <16 x bfloat> %106, i32 1)
  %2270 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %2267, <32 x bfloat> %2269, i32 60)
  %2271 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %2270)
  %2272 = getelementptr inbounds bfloat, ptr %1, i20 768
  store <16 x bfloat> %2271, ptr %2272, align 32, !tbaa !2
  %2273 = bitcast <8 x i32> %2233 to <16 x i16>
  %2274 = getelementptr bfloat, ptr %0, i20 832
  %2275 = load <16 x bfloat>, ptr %2274, align 32, !tbaa !2
  %2276 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %2230, i32 8)
  %2277 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2276, <16 x i32> %14, i32 2)
  %2278 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2277, i32 0)
  %2279 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %2273, i32 0, i32 0)
  %2280 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2279, i32 6, i32 1)
  %2281 = add <16 x i32> %2280, %31
  %2282 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2281, i32 0)
  %2283 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2282), !noalias !15
  %2284 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2283, i32 0)
  %2285 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2282), !noalias !15
  %2286 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2284, <8 x i32> %2285, i32 1)
  %2287 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2281, i32 1)
  %2288 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2287), !noalias !15
  %2289 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2288, i32 0)
  %2290 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2287), !noalias !15
  %2291 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2289, <8 x i32> %2290, i32 1)
  %2292 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2286, <16 x i32> %2291, i32 24)
  %2293 = bitcast <16 x i32> %2292 to <32 x bfloat>
  %2294 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2293, i32 0)
  %2295 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2279, i32 -2, i32 1)
  %2296 = and <16 x i32> %2295, %4
  %2297 = add <16 x i32> %2296, %52
  %2298 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2297, i32 0)
  %2299 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2298), !noalias !20
  %2300 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2299, i32 0)
  %2301 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2298), !noalias !20
  %2302 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2300, <8 x i32> %2301, i32 1)
  %2303 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2297, i32 1)
  %2304 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2303), !noalias !20
  %2305 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2304, i32 0)
  %2306 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2303), !noalias !20
  %2307 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2305, <8 x i32> %2306, i32 1)
  %2308 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2302, <16 x i32> %2307, i32 24)
  %2309 = bitcast <16 x i32> %2308 to <32 x bfloat>
  %2310 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2309, i32 0)
  %2311 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2249, i32 0)
  %2312 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2311, <16 x bfloat> %106, i32 1)
  %2313 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2265, i32 0)
  %2314 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2313, <16 x bfloat> %106, i32 1)
  %2315 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %2312, <32 x bfloat> %2314, i32 60)
  %2316 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %2315)
  %2317 = getelementptr inbounds bfloat, ptr %1, i20 784
  store <16 x bfloat> %2316, ptr %2317, align 32, !tbaa !2
  %2318 = bitcast <8 x i32> %2278 to <16 x i16>
  %2319 = getelementptr bfloat, ptr %0, i20 848
  %2320 = load <16 x bfloat>, ptr %2319, align 32, !tbaa !2
  %2321 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %2275, i32 8)
  %2322 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2321, <16 x i32> %14, i32 2)
  %2323 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2322, i32 0)
  %2324 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %2318, i32 0, i32 0)
  %2325 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2324, i32 6, i32 1)
  %2326 = add <16 x i32> %2325, %31
  %2327 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2326, i32 0)
  %2328 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2327), !noalias !15
  %2329 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2328, i32 0)
  %2330 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2327), !noalias !15
  %2331 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2329, <8 x i32> %2330, i32 1)
  %2332 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2326, i32 1)
  %2333 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2332), !noalias !15
  %2334 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2333, i32 0)
  %2335 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2332), !noalias !15
  %2336 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2334, <8 x i32> %2335, i32 1)
  %2337 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2331, <16 x i32> %2336, i32 24)
  %2338 = bitcast <16 x i32> %2337 to <32 x bfloat>
  %2339 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2338, i32 0)
  %2340 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2324, i32 -2, i32 1)
  %2341 = and <16 x i32> %2340, %4
  %2342 = add <16 x i32> %2341, %52
  %2343 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2342, i32 0)
  %2344 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2343), !noalias !20
  %2345 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2344, i32 0)
  %2346 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2343), !noalias !20
  %2347 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2345, <8 x i32> %2346, i32 1)
  %2348 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2342, i32 1)
  %2349 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2348), !noalias !20
  %2350 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2349, i32 0)
  %2351 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2348), !noalias !20
  %2352 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2350, <8 x i32> %2351, i32 1)
  %2353 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2347, <16 x i32> %2352, i32 24)
  %2354 = bitcast <16 x i32> %2353 to <32 x bfloat>
  %2355 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2354, i32 0)
  %2356 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2294, i32 0)
  %2357 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2356, <16 x bfloat> %106, i32 1)
  %2358 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2310, i32 0)
  %2359 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2358, <16 x bfloat> %106, i32 1)
  %2360 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %2357, <32 x bfloat> %2359, i32 60)
  %2361 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %2360)
  %2362 = getelementptr inbounds bfloat, ptr %1, i20 800
  store <16 x bfloat> %2361, ptr %2362, align 32, !tbaa !2
  %2363 = bitcast <8 x i32> %2323 to <16 x i16>
  %2364 = getelementptr bfloat, ptr %0, i20 864
  %2365 = load <16 x bfloat>, ptr %2364, align 32, !tbaa !2
  %2366 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %2320, i32 8)
  %2367 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2366, <16 x i32> %14, i32 2)
  %2368 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2367, i32 0)
  %2369 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %2363, i32 0, i32 0)
  %2370 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2369, i32 6, i32 1)
  %2371 = add <16 x i32> %2370, %31
  %2372 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2371, i32 0)
  %2373 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2372), !noalias !15
  %2374 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2373, i32 0)
  %2375 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2372), !noalias !15
  %2376 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2374, <8 x i32> %2375, i32 1)
  %2377 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2371, i32 1)
  %2378 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2377), !noalias !15
  %2379 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2378, i32 0)
  %2380 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2377), !noalias !15
  %2381 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2379, <8 x i32> %2380, i32 1)
  %2382 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2376, <16 x i32> %2381, i32 24)
  %2383 = bitcast <16 x i32> %2382 to <32 x bfloat>
  %2384 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2383, i32 0)
  %2385 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2369, i32 -2, i32 1)
  %2386 = and <16 x i32> %2385, %4
  %2387 = add <16 x i32> %2386, %52
  %2388 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2387, i32 0)
  %2389 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2388), !noalias !20
  %2390 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2389, i32 0)
  %2391 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2388), !noalias !20
  %2392 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2390, <8 x i32> %2391, i32 1)
  %2393 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2387, i32 1)
  %2394 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2393), !noalias !20
  %2395 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2394, i32 0)
  %2396 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2393), !noalias !20
  %2397 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2395, <8 x i32> %2396, i32 1)
  %2398 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2392, <16 x i32> %2397, i32 24)
  %2399 = bitcast <16 x i32> %2398 to <32 x bfloat>
  %2400 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2399, i32 0)
  %2401 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2339, i32 0)
  %2402 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2401, <16 x bfloat> %106, i32 1)
  %2403 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2355, i32 0)
  %2404 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2403, <16 x bfloat> %106, i32 1)
  %2405 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %2402, <32 x bfloat> %2404, i32 60)
  %2406 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %2405)
  %2407 = getelementptr inbounds bfloat, ptr %1, i20 816
  store <16 x bfloat> %2406, ptr %2407, align 32, !tbaa !2
  %2408 = bitcast <8 x i32> %2368 to <16 x i16>
  %2409 = getelementptr bfloat, ptr %0, i20 880
  %2410 = load <16 x bfloat>, ptr %2409, align 32, !tbaa !2
  %2411 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %2365, i32 8)
  %2412 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2411, <16 x i32> %14, i32 2)
  %2413 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2412, i32 0)
  %2414 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %2408, i32 0, i32 0)
  %2415 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2414, i32 6, i32 1)
  %2416 = add <16 x i32> %2415, %31
  %2417 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2416, i32 0)
  %2418 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2417), !noalias !15
  %2419 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2418, i32 0)
  %2420 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2417), !noalias !15
  %2421 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2419, <8 x i32> %2420, i32 1)
  %2422 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2416, i32 1)
  %2423 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2422), !noalias !15
  %2424 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2423, i32 0)
  %2425 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2422), !noalias !15
  %2426 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2424, <8 x i32> %2425, i32 1)
  %2427 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2421, <16 x i32> %2426, i32 24)
  %2428 = bitcast <16 x i32> %2427 to <32 x bfloat>
  %2429 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2428, i32 0)
  %2430 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2414, i32 -2, i32 1)
  %2431 = and <16 x i32> %2430, %4
  %2432 = add <16 x i32> %2431, %52
  %2433 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2432, i32 0)
  %2434 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2433), !noalias !20
  %2435 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2434, i32 0)
  %2436 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2433), !noalias !20
  %2437 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2435, <8 x i32> %2436, i32 1)
  %2438 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2432, i32 1)
  %2439 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2438), !noalias !20
  %2440 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2439, i32 0)
  %2441 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2438), !noalias !20
  %2442 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2440, <8 x i32> %2441, i32 1)
  %2443 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2437, <16 x i32> %2442, i32 24)
  %2444 = bitcast <16 x i32> %2443 to <32 x bfloat>
  %2445 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2444, i32 0)
  %2446 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2384, i32 0)
  %2447 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2446, <16 x bfloat> %106, i32 1)
  %2448 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2400, i32 0)
  %2449 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2448, <16 x bfloat> %106, i32 1)
  %2450 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %2447, <32 x bfloat> %2449, i32 60)
  %2451 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %2450)
  %2452 = getelementptr inbounds bfloat, ptr %1, i20 832
  store <16 x bfloat> %2451, ptr %2452, align 32, !tbaa !2
  %2453 = bitcast <8 x i32> %2413 to <16 x i16>
  %2454 = getelementptr bfloat, ptr %0, i20 896
  %2455 = load <16 x bfloat>, ptr %2454, align 32, !tbaa !2
  %2456 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %2410, i32 8)
  %2457 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2456, <16 x i32> %14, i32 2)
  %2458 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2457, i32 0)
  %2459 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %2453, i32 0, i32 0)
  %2460 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2459, i32 6, i32 1)
  %2461 = add <16 x i32> %2460, %31
  %2462 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2461, i32 0)
  %2463 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2462), !noalias !15
  %2464 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2463, i32 0)
  %2465 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2462), !noalias !15
  %2466 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2464, <8 x i32> %2465, i32 1)
  %2467 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2461, i32 1)
  %2468 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2467), !noalias !15
  %2469 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2468, i32 0)
  %2470 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2467), !noalias !15
  %2471 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2469, <8 x i32> %2470, i32 1)
  %2472 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2466, <16 x i32> %2471, i32 24)
  %2473 = bitcast <16 x i32> %2472 to <32 x bfloat>
  %2474 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2473, i32 0)
  %2475 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2459, i32 -2, i32 1)
  %2476 = and <16 x i32> %2475, %4
  %2477 = add <16 x i32> %2476, %52
  %2478 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2477, i32 0)
  %2479 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2478), !noalias !20
  %2480 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2479, i32 0)
  %2481 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2478), !noalias !20
  %2482 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2480, <8 x i32> %2481, i32 1)
  %2483 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2477, i32 1)
  %2484 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2483), !noalias !20
  %2485 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2484, i32 0)
  %2486 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2483), !noalias !20
  %2487 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2485, <8 x i32> %2486, i32 1)
  %2488 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2482, <16 x i32> %2487, i32 24)
  %2489 = bitcast <16 x i32> %2488 to <32 x bfloat>
  %2490 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2489, i32 0)
  %2491 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2429, i32 0)
  %2492 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2491, <16 x bfloat> %106, i32 1)
  %2493 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2445, i32 0)
  %2494 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2493, <16 x bfloat> %106, i32 1)
  %2495 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %2492, <32 x bfloat> %2494, i32 60)
  %2496 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %2495)
  %2497 = getelementptr inbounds bfloat, ptr %1, i20 848
  store <16 x bfloat> %2496, ptr %2497, align 32, !tbaa !2
  %2498 = bitcast <8 x i32> %2458 to <16 x i16>
  %2499 = getelementptr bfloat, ptr %0, i20 912
  %2500 = load <16 x bfloat>, ptr %2499, align 32, !tbaa !2
  %2501 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %2455, i32 8)
  %2502 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2501, <16 x i32> %14, i32 2)
  %2503 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2502, i32 0)
  %2504 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %2498, i32 0, i32 0)
  %2505 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2504, i32 6, i32 1)
  %2506 = add <16 x i32> %2505, %31
  %2507 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2506, i32 0)
  %2508 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2507), !noalias !15
  %2509 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2508, i32 0)
  %2510 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2507), !noalias !15
  %2511 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2509, <8 x i32> %2510, i32 1)
  %2512 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2506, i32 1)
  %2513 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2512), !noalias !15
  %2514 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2513, i32 0)
  %2515 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2512), !noalias !15
  %2516 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2514, <8 x i32> %2515, i32 1)
  %2517 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2511, <16 x i32> %2516, i32 24)
  %2518 = bitcast <16 x i32> %2517 to <32 x bfloat>
  %2519 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2518, i32 0)
  %2520 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2504, i32 -2, i32 1)
  %2521 = and <16 x i32> %2520, %4
  %2522 = add <16 x i32> %2521, %52
  %2523 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2522, i32 0)
  %2524 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2523), !noalias !20
  %2525 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2524, i32 0)
  %2526 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2523), !noalias !20
  %2527 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2525, <8 x i32> %2526, i32 1)
  %2528 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2522, i32 1)
  %2529 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2528), !noalias !20
  %2530 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2529, i32 0)
  %2531 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2528), !noalias !20
  %2532 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2530, <8 x i32> %2531, i32 1)
  %2533 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2527, <16 x i32> %2532, i32 24)
  %2534 = bitcast <16 x i32> %2533 to <32 x bfloat>
  %2535 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2534, i32 0)
  %2536 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2474, i32 0)
  %2537 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2536, <16 x bfloat> %106, i32 1)
  %2538 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2490, i32 0)
  %2539 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2538, <16 x bfloat> %106, i32 1)
  %2540 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %2537, <32 x bfloat> %2539, i32 60)
  %2541 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %2540)
  %2542 = getelementptr inbounds bfloat, ptr %1, i20 864
  store <16 x bfloat> %2541, ptr %2542, align 32, !tbaa !2
  %2543 = bitcast <8 x i32> %2503 to <16 x i16>
  %2544 = getelementptr bfloat, ptr %0, i20 928
  %2545 = load <16 x bfloat>, ptr %2544, align 32, !tbaa !2
  %2546 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %2500, i32 8)
  %2547 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2546, <16 x i32> %14, i32 2)
  %2548 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2547, i32 0)
  %2549 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %2543, i32 0, i32 0)
  %2550 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2549, i32 6, i32 1)
  %2551 = add <16 x i32> %2550, %31
  %2552 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2551, i32 0)
  %2553 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2552), !noalias !15
  %2554 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2553, i32 0)
  %2555 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2552), !noalias !15
  %2556 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2554, <8 x i32> %2555, i32 1)
  %2557 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2551, i32 1)
  %2558 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2557), !noalias !15
  %2559 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2558, i32 0)
  %2560 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2557), !noalias !15
  %2561 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2559, <8 x i32> %2560, i32 1)
  %2562 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2556, <16 x i32> %2561, i32 24)
  %2563 = bitcast <16 x i32> %2562 to <32 x bfloat>
  %2564 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2563, i32 0)
  %2565 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2549, i32 -2, i32 1)
  %2566 = and <16 x i32> %2565, %4
  %2567 = add <16 x i32> %2566, %52
  %2568 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2567, i32 0)
  %2569 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2568), !noalias !20
  %2570 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2569, i32 0)
  %2571 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2568), !noalias !20
  %2572 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2570, <8 x i32> %2571, i32 1)
  %2573 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2567, i32 1)
  %2574 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2573), !noalias !20
  %2575 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2574, i32 0)
  %2576 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2573), !noalias !20
  %2577 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2575, <8 x i32> %2576, i32 1)
  %2578 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2572, <16 x i32> %2577, i32 24)
  %2579 = bitcast <16 x i32> %2578 to <32 x bfloat>
  %2580 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2579, i32 0)
  %2581 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2519, i32 0)
  %2582 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2581, <16 x bfloat> %106, i32 1)
  %2583 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2535, i32 0)
  %2584 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2583, <16 x bfloat> %106, i32 1)
  %2585 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %2582, <32 x bfloat> %2584, i32 60)
  %2586 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %2585)
  %2587 = getelementptr inbounds bfloat, ptr %1, i20 880
  store <16 x bfloat> %2586, ptr %2587, align 32, !tbaa !2
  %2588 = bitcast <8 x i32> %2548 to <16 x i16>
  %2589 = getelementptr bfloat, ptr %0, i20 944
  %2590 = load <16 x bfloat>, ptr %2589, align 32, !tbaa !2
  %2591 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %2545, i32 8)
  %2592 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2591, <16 x i32> %14, i32 2)
  %2593 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2592, i32 0)
  %2594 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %2588, i32 0, i32 0)
  %2595 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2594, i32 6, i32 1)
  %2596 = add <16 x i32> %2595, %31
  %2597 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2596, i32 0)
  %2598 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2597), !noalias !15
  %2599 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2598, i32 0)
  %2600 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2597), !noalias !15
  %2601 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2599, <8 x i32> %2600, i32 1)
  %2602 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2596, i32 1)
  %2603 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2602), !noalias !15
  %2604 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2603, i32 0)
  %2605 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2602), !noalias !15
  %2606 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2604, <8 x i32> %2605, i32 1)
  %2607 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2601, <16 x i32> %2606, i32 24)
  %2608 = bitcast <16 x i32> %2607 to <32 x bfloat>
  %2609 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2608, i32 0)
  %2610 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2594, i32 -2, i32 1)
  %2611 = and <16 x i32> %2610, %4
  %2612 = add <16 x i32> %2611, %52
  %2613 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2612, i32 0)
  %2614 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2613), !noalias !20
  %2615 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2614, i32 0)
  %2616 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2613), !noalias !20
  %2617 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2615, <8 x i32> %2616, i32 1)
  %2618 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2612, i32 1)
  %2619 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2618), !noalias !20
  %2620 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2619, i32 0)
  %2621 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2618), !noalias !20
  %2622 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2620, <8 x i32> %2621, i32 1)
  %2623 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2617, <16 x i32> %2622, i32 24)
  %2624 = bitcast <16 x i32> %2623 to <32 x bfloat>
  %2625 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2624, i32 0)
  %2626 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2564, i32 0)
  %2627 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2626, <16 x bfloat> %106, i32 1)
  %2628 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2580, i32 0)
  %2629 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2628, <16 x bfloat> %106, i32 1)
  %2630 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %2627, <32 x bfloat> %2629, i32 60)
  %2631 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %2630)
  %2632 = getelementptr inbounds bfloat, ptr %1, i20 896
  store <16 x bfloat> %2631, ptr %2632, align 32, !tbaa !2
  %2633 = bitcast <8 x i32> %2593 to <16 x i16>
  %2634 = getelementptr bfloat, ptr %0, i20 960
  %2635 = load <16 x bfloat>, ptr %2634, align 32, !tbaa !2
  %2636 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %2590, i32 8)
  %2637 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2636, <16 x i32> %14, i32 2)
  %2638 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2637, i32 0)
  %2639 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %2633, i32 0, i32 0)
  %2640 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2639, i32 6, i32 1)
  %2641 = add <16 x i32> %2640, %31
  %2642 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2641, i32 0)
  %2643 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2642), !noalias !15
  %2644 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2643, i32 0)
  %2645 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2642), !noalias !15
  %2646 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2644, <8 x i32> %2645, i32 1)
  %2647 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2641, i32 1)
  %2648 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2647), !noalias !15
  %2649 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2648, i32 0)
  %2650 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2647), !noalias !15
  %2651 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2649, <8 x i32> %2650, i32 1)
  %2652 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2646, <16 x i32> %2651, i32 24)
  %2653 = bitcast <16 x i32> %2652 to <32 x bfloat>
  %2654 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2653, i32 0)
  %2655 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2639, i32 -2, i32 1)
  %2656 = and <16 x i32> %2655, %4
  %2657 = add <16 x i32> %2656, %52
  %2658 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2657, i32 0)
  %2659 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2658), !noalias !20
  %2660 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2659, i32 0)
  %2661 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2658), !noalias !20
  %2662 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2660, <8 x i32> %2661, i32 1)
  %2663 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2657, i32 1)
  %2664 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2663), !noalias !20
  %2665 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2664, i32 0)
  %2666 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2663), !noalias !20
  %2667 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2665, <8 x i32> %2666, i32 1)
  %2668 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2662, <16 x i32> %2667, i32 24)
  %2669 = bitcast <16 x i32> %2668 to <32 x bfloat>
  %2670 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2669, i32 0)
  %2671 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2609, i32 0)
  %2672 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2671, <16 x bfloat> %106, i32 1)
  %2673 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2625, i32 0)
  %2674 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2673, <16 x bfloat> %106, i32 1)
  %2675 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %2672, <32 x bfloat> %2674, i32 60)
  %2676 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %2675)
  %2677 = getelementptr inbounds bfloat, ptr %1, i20 912
  store <16 x bfloat> %2676, ptr %2677, align 32, !tbaa !2
  %2678 = bitcast <8 x i32> %2638 to <16 x i16>
  %2679 = getelementptr bfloat, ptr %0, i20 976
  %2680 = load <16 x bfloat>, ptr %2679, align 32, !tbaa !2
  %2681 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %2635, i32 8)
  %2682 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2681, <16 x i32> %14, i32 2)
  %2683 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2682, i32 0)
  %2684 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %2678, i32 0, i32 0)
  %2685 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2684, i32 6, i32 1)
  %2686 = add <16 x i32> %2685, %31
  %2687 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2686, i32 0)
  %2688 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2687), !noalias !15
  %2689 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2688, i32 0)
  %2690 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2687), !noalias !15
  %2691 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2689, <8 x i32> %2690, i32 1)
  %2692 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2686, i32 1)
  %2693 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2692), !noalias !15
  %2694 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2693, i32 0)
  %2695 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2692), !noalias !15
  %2696 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2694, <8 x i32> %2695, i32 1)
  %2697 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2691, <16 x i32> %2696, i32 24)
  %2698 = bitcast <16 x i32> %2697 to <32 x bfloat>
  %2699 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2698, i32 0)
  %2700 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2684, i32 -2, i32 1)
  %2701 = and <16 x i32> %2700, %4
  %2702 = add <16 x i32> %2701, %52
  %2703 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2702, i32 0)
  %2704 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2703), !noalias !20
  %2705 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2704, i32 0)
  %2706 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2703), !noalias !20
  %2707 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2705, <8 x i32> %2706, i32 1)
  %2708 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2702, i32 1)
  %2709 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2708), !noalias !20
  %2710 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2709, i32 0)
  %2711 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2708), !noalias !20
  %2712 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2710, <8 x i32> %2711, i32 1)
  %2713 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2707, <16 x i32> %2712, i32 24)
  %2714 = bitcast <16 x i32> %2713 to <32 x bfloat>
  %2715 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2714, i32 0)
  %2716 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2654, i32 0)
  %2717 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2716, <16 x bfloat> %106, i32 1)
  %2718 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2670, i32 0)
  %2719 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2718, <16 x bfloat> %106, i32 1)
  %2720 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %2717, <32 x bfloat> %2719, i32 60)
  %2721 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %2720)
  %2722 = getelementptr inbounds bfloat, ptr %1, i20 928
  store <16 x bfloat> %2721, ptr %2722, align 32, !tbaa !2
  %2723 = bitcast <8 x i32> %2683 to <16 x i16>
  %2724 = getelementptr bfloat, ptr %0, i20 992
  %2725 = load <16 x bfloat>, ptr %2724, align 32, !tbaa !2
  %2726 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %2680, i32 8)
  %2727 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2726, <16 x i32> %14, i32 2)
  %2728 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2727, i32 0)
  %2729 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %2723, i32 0, i32 0)
  %2730 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2729, i32 6, i32 1)
  %2731 = add <16 x i32> %2730, %31
  %2732 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2731, i32 0)
  %2733 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2732), !noalias !15
  %2734 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2733, i32 0)
  %2735 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2732), !noalias !15
  %2736 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2734, <8 x i32> %2735, i32 1)
  %2737 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2731, i32 1)
  %2738 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2737), !noalias !15
  %2739 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2738, i32 0)
  %2740 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2737), !noalias !15
  %2741 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2739, <8 x i32> %2740, i32 1)
  %2742 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2736, <16 x i32> %2741, i32 24)
  %2743 = bitcast <16 x i32> %2742 to <32 x bfloat>
  %2744 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2743, i32 0)
  %2745 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2729, i32 -2, i32 1)
  %2746 = and <16 x i32> %2745, %4
  %2747 = add <16 x i32> %2746, %52
  %2748 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2747, i32 0)
  %2749 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2748), !noalias !20
  %2750 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2749, i32 0)
  %2751 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2748), !noalias !20
  %2752 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2750, <8 x i32> %2751, i32 1)
  %2753 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2747, i32 1)
  %2754 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2753), !noalias !20
  %2755 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2754, i32 0)
  %2756 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2753), !noalias !20
  %2757 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2755, <8 x i32> %2756, i32 1)
  %2758 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2752, <16 x i32> %2757, i32 24)
  %2759 = bitcast <16 x i32> %2758 to <32 x bfloat>
  %2760 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2759, i32 0)
  %2761 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2699, i32 0)
  %2762 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2761, <16 x bfloat> %106, i32 1)
  %2763 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2715, i32 0)
  %2764 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2763, <16 x bfloat> %106, i32 1)
  %2765 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %2762, <32 x bfloat> %2764, i32 60)
  %2766 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %2765)
  %2767 = getelementptr inbounds bfloat, ptr %1, i20 944
  store <16 x bfloat> %2766, ptr %2767, align 32, !tbaa !2
  %2768 = bitcast <8 x i32> %2728 to <16 x i16>
  %2769 = getelementptr bfloat, ptr %0, i20 1008
  %2770 = load <16 x bfloat>, ptr %2769, align 32, !tbaa !2
  %2771 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %2725, i32 8)
  %2772 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2771, <16 x i32> %14, i32 2)
  %2773 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2772, i32 0)
  %2774 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %2768, i32 0, i32 0)
  %2775 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2774, i32 6, i32 1)
  %2776 = add <16 x i32> %2775, %31
  %2777 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2776, i32 0)
  %2778 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2777), !noalias !15
  %2779 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2778, i32 0)
  %2780 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2777), !noalias !15
  %2781 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2779, <8 x i32> %2780, i32 1)
  %2782 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2776, i32 1)
  %2783 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2782), !noalias !15
  %2784 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2783, i32 0)
  %2785 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2782), !noalias !15
  %2786 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2784, <8 x i32> %2785, i32 1)
  %2787 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2781, <16 x i32> %2786, i32 24)
  %2788 = bitcast <16 x i32> %2787 to <32 x bfloat>
  %2789 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2788, i32 0)
  %2790 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2774, i32 -2, i32 1)
  %2791 = and <16 x i32> %2790, %4
  %2792 = add <16 x i32> %2791, %52
  %2793 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2792, i32 0)
  %2794 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2793), !noalias !20
  %2795 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2794, i32 0)
  %2796 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2793), !noalias !20
  %2797 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2795, <8 x i32> %2796, i32 1)
  %2798 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2792, i32 1)
  %2799 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2798), !noalias !20
  %2800 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2799, i32 0)
  %2801 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2798), !noalias !20
  %2802 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2800, <8 x i32> %2801, i32 1)
  %2803 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2797, <16 x i32> %2802, i32 24)
  %2804 = bitcast <16 x i32> %2803 to <32 x bfloat>
  %2805 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2804, i32 0)
  %2806 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2744, i32 0)
  %2807 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2806, <16 x bfloat> %106, i32 1)
  %2808 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2760, i32 0)
  %2809 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2808, <16 x bfloat> %106, i32 1)
  %2810 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %2807, <32 x bfloat> %2809, i32 60)
  %2811 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %2810)
  %2812 = getelementptr inbounds bfloat, ptr %1, i20 960
  store <16 x bfloat> %2811, ptr %2812, align 32, !tbaa !2
  %2813 = bitcast <8 x i32> %2773 to <16 x i16>
  %2814 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %2770, i32 8)
  %2815 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2814, <16 x i32> %14, i32 2)
  %2816 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2815, i32 0)
  %2817 = bitcast <8 x i32> %2816 to <16 x i16>
  %2818 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %2813, i32 0, i32 0)
  %2819 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2818, i32 6, i32 1)
  %2820 = add <16 x i32> %2819, %31
  %2821 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2820, i32 0)
  %2822 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2821), !noalias !25
  %2823 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2822, i32 0)
  %2824 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2821), !noalias !25
  %2825 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2823, <8 x i32> %2824, i32 1)
  %2826 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2820, i32 1)
  %2827 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2826), !noalias !25
  %2828 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2827, i32 0)
  %2829 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2826), !noalias !25
  %2830 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2828, <8 x i32> %2829, i32 1)
  %2831 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2825, <16 x i32> %2830, i32 24)
  %2832 = bitcast <16 x i32> %2831 to <32 x bfloat>
  %2833 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2832, i32 0)
  %2834 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2818, i32 -2, i32 1)
  %2835 = and <16 x i32> %2834, %4
  %2836 = add <16 x i32> %2835, %52
  %2837 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2836, i32 0)
  %2838 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2837), !noalias !30
  %2839 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2838, i32 0)
  %2840 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2837), !noalias !30
  %2841 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2839, <8 x i32> %2840, i32 1)
  %2842 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2836, i32 1)
  %2843 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2842), !noalias !30
  %2844 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2843, i32 0)
  %2845 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2842), !noalias !30
  %2846 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2844, <8 x i32> %2845, i32 1)
  %2847 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2841, <16 x i32> %2846, i32 24)
  %2848 = bitcast <16 x i32> %2847 to <32 x bfloat>
  %2849 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2848, i32 0)
  %2850 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2789, i32 0)
  %2851 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2850, <16 x bfloat> %106, i32 1)
  %2852 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2805, i32 0)
  %2853 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2852, <16 x bfloat> %106, i32 1)
  %2854 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %2851, <32 x bfloat> %2853, i32 60)
  %2855 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %2854)
  %2856 = getelementptr inbounds bfloat, ptr %1, i20 976
  store <16 x bfloat> %2855, ptr %2856, align 32, !tbaa !2
  %2857 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %2817, i32 0, i32 0)
  %2858 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2857, i32 6, i32 1)
  %2859 = add <16 x i32> %2858, %31
  %2860 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2859, i32 0)
  %2861 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2860), !noalias !35
  %2862 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2861, i32 0)
  %2863 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2860), !noalias !35
  %2864 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2862, <8 x i32> %2863, i32 1)
  %2865 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2859, i32 1)
  %2866 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2865), !noalias !35
  %2867 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2866, i32 0)
  %2868 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2865), !noalias !35
  %2869 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2867, <8 x i32> %2868, i32 1)
  %2870 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2864, <16 x i32> %2869, i32 24)
  %2871 = bitcast <16 x i32> %2870 to <32 x bfloat>
  %2872 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2871, i32 0)
  %2873 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2857, i32 -2, i32 1)
  %2874 = and <16 x i32> %2873, %4
  %2875 = add <16 x i32> %2874, %52
  %2876 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2875, i32 0)
  %2877 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2876), !noalias !40
  %2878 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2877, i32 0)
  %2879 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2876), !noalias !40
  %2880 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2878, <8 x i32> %2879, i32 1)
  %2881 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2875, i32 1)
  %2882 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2881), !noalias !40
  %2883 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2882, i32 0)
  %2884 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2881), !noalias !40
  %2885 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2883, <8 x i32> %2884, i32 1)
  %2886 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2880, <16 x i32> %2885, i32 24)
  %2887 = bitcast <16 x i32> %2886 to <32 x bfloat>
  %2888 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2887, i32 0)
  %2889 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2833, i32 0)
  %2890 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2889, <16 x bfloat> %106, i32 1)
  %2891 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2849, i32 0)
  %2892 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2891, <16 x bfloat> %106, i32 1)
  %2893 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %2890, <32 x bfloat> %2892, i32 60)
  %2894 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %2893)
  %2895 = getelementptr inbounds bfloat, ptr %1, i20 992
  store <16 x bfloat> %2894, ptr %2895, align 32, !tbaa !2
  %2896 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2872, i32 0)
  %2897 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2896, <16 x bfloat> %106, i32 1)
  %2898 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2888, i32 0)
  %2899 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2898, <16 x bfloat> %106, i32 1)
  %2900 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %2897, <32 x bfloat> %2899, i32 60)
  %2901 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %2900)
  %2902 = getelementptr inbounds bfloat, ptr %1, i20 1008
  store <16 x bfloat> %2901, ptr %2902, align 32, !tbaa !2
  ret void
}

; Function Attrs: nofree nosync nounwind memory(none)
declare <8 x i64> @llvm.aie2.v16accfloat() #1

; Function Attrs: nofree nounwind memory(inaccessiblemem: read)
declare <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat>, i32) #2

; Function Attrs: nofree nosync nounwind memory(none)
declare <32 x bfloat> @llvm.aie2.v32bfloat16() #1

; Function Attrs: nofree nosync nounwind memory(none)
declare <32 x bfloat> @llvm.aie2.vbroadcast16.bf512(bfloat) #1

; Function Attrs: nofree nosync nounwind memory(none)
declare <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat>, i32) #1

; Function Attrs: nofree nosync nounwind memory(none)
declare <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat>, i32) #1

; Function Attrs: nofree nosync nounwind memory(none)
declare <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat>, <16 x bfloat>, i32) #1

; Function Attrs: nofree nounwind memory(inaccessiblemem: read)
declare <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat>, <32 x bfloat>, i32) #2

; Function Attrs: nofree nounwind memory(inaccessiblemem: read)
declare <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64>) #2

; Function Attrs: nofree nosync nounwind memory(none)
declare <16 x i32> @llvm.aie2.v16int32() #1

; Function Attrs: nofree nosync nounwind memory(none)
declare <16 x i32> @llvm.aie2.vbroadcast32.I512(i32) #1

; Function Attrs: nofree nosync nounwind memory(none)
declare <16 x bfloat> @llvm.aie2.v16bfloat16() #1

; Function Attrs: nofree nosync nounwind memory(none)
declare <16 x i16> @llvm.aie2.v16int16() #1

; Function Attrs: nofree nosync nounwind memory(none)
declare <16 x i32> @llvm.aie2.vshuffle(<16 x i32>, <16 x i32>, i32) #1

; Function Attrs: nofree nosync nounwind memory(none)
declare <32 x i16> @llvm.aie2.v32int16() #1

; Function Attrs: nofree nosync nounwind memory(none)
declare <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32>, i32) #1

; Function Attrs: nofree nosync nounwind memory(none)
declare <16 x i64> @llvm.aie2.v16acc64() #1

; Function Attrs: nofree nounwind memory(inaccessiblemem: read)
declare <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16>, i32, i32) #2

; Function Attrs: nofree nounwind memory(inaccessiblemem: read)
declare <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64>, i32, i32) #2

; Function Attrs: nofree nosync nounwind memory(none)
declare <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32>, <8 x i32>, i32) #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare <16 x i32> @llvm.aie2.vsel32(<16 x i32>, <16 x i32>, i32) #3

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(read)
declare <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32>) #4

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(read)
declare <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32>) #4

attributes #0 = { mustprogress nofree nounwind memory(read, argmem: readwrite) "no-trapping-math"="true" "stack-protector-buffer-size"="8" }
attributes #1 = { nofree nosync nounwind memory(none) }
attributes #2 = { nofree nounwind memory(inaccessiblemem: read) }
attributes #3 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #4 = { mustprogress nocallback nofree nosync nounwind willreturn memory(read) }

!llvm.linker.options = !{}
!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 18.0.0git"}
!2 = !{!3, !3, i64 0}
!3 = !{!"omnipotent char", !4, i64 0}
!4 = !{!"Simple C++ TBAA"}
!5 = !{!6, !8}
!6 = distinct !{!6, !7, !"_ZN3aie6detail15parallel_lookupItNS0_3lutILj4Eu6__bf16u6__bf16EELNS0_14lut_oor_policyE1EE5fetchINS_6vectorItLj16EEELj16EQaaaaleclsrTL0__4sizeELi32EleTL0_0_clsrS9_4sizeEleTL0_0_sr20native_vector_lengthIT0_EE5valueEENS7_Iu6__bf16XT0_EEERKT_: argument 0"}
!7 = distinct !{!7, !"_ZN3aie6detail15parallel_lookupItNS0_3lutILj4Eu6__bf16u6__bf16EELNS0_14lut_oor_policyE1EE5fetchINS_6vectorItLj16EEELj16EQaaaaleclsrTL0__4sizeELi32EleTL0_0_clsrS9_4sizeEleTL0_0_sr20native_vector_lengthIT0_EE5valueEENS7_Iu6__bf16XT0_EEERKT_"}
!8 = distinct !{!8, !9, !"_ZN3aie15parallel_lookupItNS_3lutILj4Eu6__bf16u6__bf16EELNS_6detail14lut_oor_policyE1EE5fetchITkNS_6VectorENS_6vectorItLj16EEELj16EEENS7_Iu6__bf16XT0_EEERKT_: argument 0"}
!9 = distinct !{!9, !"_ZN3aie15parallel_lookupItNS_3lutILj4Eu6__bf16u6__bf16EELNS_6detail14lut_oor_policyE1EE5fetchITkNS_6VectorENS_6vectorItLj16EEELj16EEENS7_Iu6__bf16XT0_EEERKT_"}
!10 = !{!11, !13}
!11 = distinct !{!11, !12, !"_ZN3aie6detail15parallel_lookupItNS0_3lutILj4Eu6__bf16u6__bf16EELNS0_14lut_oor_policyE1EE5fetchINS_6vectorItLj16EEELj16EQaaaaleclsrTL0__4sizeELi32EleTL0_0_clsrS9_4sizeEleTL0_0_sr20native_vector_lengthIT0_EE5valueEENS7_Iu6__bf16XT0_EEERKT_: argument 0"}
!12 = distinct !{!12, !"_ZN3aie6detail15parallel_lookupItNS0_3lutILj4Eu6__bf16u6__bf16EELNS0_14lut_oor_policyE1EE5fetchINS_6vectorItLj16EEELj16EQaaaaleclsrTL0__4sizeELi32EleTL0_0_clsrS9_4sizeEleTL0_0_sr20native_vector_lengthIT0_EE5valueEENS7_Iu6__bf16XT0_EEERKT_"}
!13 = distinct !{!13, !14, !"_ZN3aie15parallel_lookupItNS_3lutILj4Eu6__bf16u6__bf16EELNS_6detail14lut_oor_policyE1EE5fetchITkNS_6VectorENS_6vectorItLj16EEELj16EEENS7_Iu6__bf16XT0_EEERKT_: argument 0"}
!14 = distinct !{!14, !"_ZN3aie15parallel_lookupItNS_3lutILj4Eu6__bf16u6__bf16EELNS_6detail14lut_oor_policyE1EE5fetchITkNS_6VectorENS_6vectorItLj16EEELj16EEENS7_Iu6__bf16XT0_EEERKT_"}
!15 = !{!16, !18}
!16 = distinct !{!16, !17, !"_ZN3aie6detail15parallel_lookupItNS0_3lutILj4Eu6__bf16u6__bf16EELNS0_14lut_oor_policyE1EE5fetchINS_6vectorItLj16EEELj16EQaaaaleclsrTL0__4sizeELi32EleTL0_0_clsrS9_4sizeEleTL0_0_sr20native_vector_lengthIT0_EE5valueEENS7_Iu6__bf16XT0_EEERKT_: argument 0"}
!17 = distinct !{!17, !"_ZN3aie6detail15parallel_lookupItNS0_3lutILj4Eu6__bf16u6__bf16EELNS0_14lut_oor_policyE1EE5fetchINS_6vectorItLj16EEELj16EQaaaaleclsrTL0__4sizeELi32EleTL0_0_clsrS9_4sizeEleTL0_0_sr20native_vector_lengthIT0_EE5valueEENS7_Iu6__bf16XT0_EEERKT_"}
!18 = distinct !{!18, !19, !"_ZN3aie15parallel_lookupItNS_3lutILj4Eu6__bf16u6__bf16EELNS_6detail14lut_oor_policyE1EE5fetchITkNS_6VectorENS_6vectorItLj16EEELj16EEENS7_Iu6__bf16XT0_EEERKT_: argument 0"}
!19 = distinct !{!19, !"_ZN3aie15parallel_lookupItNS_3lutILj4Eu6__bf16u6__bf16EELNS_6detail14lut_oor_policyE1EE5fetchITkNS_6VectorENS_6vectorItLj16EEELj16EEENS7_Iu6__bf16XT0_EEERKT_"}
!20 = !{!21, !23}
!21 = distinct !{!21, !22, !"_ZN3aie6detail15parallel_lookupItNS0_3lutILj4Eu6__bf16u6__bf16EELNS0_14lut_oor_policyE1EE5fetchINS_6vectorItLj16EEELj16EQaaaaleclsrTL0__4sizeELi32EleTL0_0_clsrS9_4sizeEleTL0_0_sr20native_vector_lengthIT0_EE5valueEENS7_Iu6__bf16XT0_EEERKT_: argument 0"}
!22 = distinct !{!22, !"_ZN3aie6detail15parallel_lookupItNS0_3lutILj4Eu6__bf16u6__bf16EELNS0_14lut_oor_policyE1EE5fetchINS_6vectorItLj16EEELj16EQaaaaleclsrTL0__4sizeELi32EleTL0_0_clsrS9_4sizeEleTL0_0_sr20native_vector_lengthIT0_EE5valueEENS7_Iu6__bf16XT0_EEERKT_"}
!23 = distinct !{!23, !24, !"_ZN3aie15parallel_lookupItNS_3lutILj4Eu6__bf16u6__bf16EELNS_6detail14lut_oor_policyE1EE5fetchITkNS_6VectorENS_6vectorItLj16EEELj16EEENS7_Iu6__bf16XT0_EEERKT_: argument 0"}
!24 = distinct !{!24, !"_ZN3aie15parallel_lookupItNS_3lutILj4Eu6__bf16u6__bf16EELNS_6detail14lut_oor_policyE1EE5fetchITkNS_6VectorENS_6vectorItLj16EEELj16EEENS7_Iu6__bf16XT0_EEERKT_"}
!25 = !{!26, !28}
!26 = distinct !{!26, !27, !"_ZN3aie6detail15parallel_lookupItNS0_3lutILj4Eu6__bf16u6__bf16EELNS0_14lut_oor_policyE1EE5fetchINS_6vectorItLj16EEELj16EQaaaaleclsrTL0__4sizeELi32EleTL0_0_clsrS9_4sizeEleTL0_0_sr20native_vector_lengthIT0_EE5valueEENS7_Iu6__bf16XT0_EEERKT_: argument 0"}
!27 = distinct !{!27, !"_ZN3aie6detail15parallel_lookupItNS0_3lutILj4Eu6__bf16u6__bf16EELNS0_14lut_oor_policyE1EE5fetchINS_6vectorItLj16EEELj16EQaaaaleclsrTL0__4sizeELi32EleTL0_0_clsrS9_4sizeEleTL0_0_sr20native_vector_lengthIT0_EE5valueEENS7_Iu6__bf16XT0_EEERKT_"}
!28 = distinct !{!28, !29, !"_ZN3aie15parallel_lookupItNS_3lutILj4Eu6__bf16u6__bf16EELNS_6detail14lut_oor_policyE1EE5fetchITkNS_6VectorENS_6vectorItLj16EEELj16EEENS7_Iu6__bf16XT0_EEERKT_: argument 0"}
!29 = distinct !{!29, !"_ZN3aie15parallel_lookupItNS_3lutILj4Eu6__bf16u6__bf16EELNS_6detail14lut_oor_policyE1EE5fetchITkNS_6VectorENS_6vectorItLj16EEELj16EEENS7_Iu6__bf16XT0_EEERKT_"}
!30 = !{!31, !33}
!31 = distinct !{!31, !32, !"_ZN3aie6detail15parallel_lookupItNS0_3lutILj4Eu6__bf16u6__bf16EELNS0_14lut_oor_policyE1EE5fetchINS_6vectorItLj16EEELj16EQaaaaleclsrTL0__4sizeELi32EleTL0_0_clsrS9_4sizeEleTL0_0_sr20native_vector_lengthIT0_EE5valueEENS7_Iu6__bf16XT0_EEERKT_: argument 0"}
!32 = distinct !{!32, !"_ZN3aie6detail15parallel_lookupItNS0_3lutILj4Eu6__bf16u6__bf16EELNS0_14lut_oor_policyE1EE5fetchINS_6vectorItLj16EEELj16EQaaaaleclsrTL0__4sizeELi32EleTL0_0_clsrS9_4sizeEleTL0_0_sr20native_vector_lengthIT0_EE5valueEENS7_Iu6__bf16XT0_EEERKT_"}
!33 = distinct !{!33, !34, !"_ZN3aie15parallel_lookupItNS_3lutILj4Eu6__bf16u6__bf16EELNS_6detail14lut_oor_policyE1EE5fetchITkNS_6VectorENS_6vectorItLj16EEELj16EEENS7_Iu6__bf16XT0_EEERKT_: argument 0"}
!34 = distinct !{!34, !"_ZN3aie15parallel_lookupItNS_3lutILj4Eu6__bf16u6__bf16EELNS_6detail14lut_oor_policyE1EE5fetchITkNS_6VectorENS_6vectorItLj16EEELj16EEENS7_Iu6__bf16XT0_EEERKT_"}
!35 = !{!36, !38}
!36 = distinct !{!36, !37, !"_ZN3aie6detail15parallel_lookupItNS0_3lutILj4Eu6__bf16u6__bf16EELNS0_14lut_oor_policyE1EE5fetchINS_6vectorItLj16EEELj16EQaaaaleclsrTL0__4sizeELi32EleTL0_0_clsrS9_4sizeEleTL0_0_sr20native_vector_lengthIT0_EE5valueEENS7_Iu6__bf16XT0_EEERKT_: argument 0"}
!37 = distinct !{!37, !"_ZN3aie6detail15parallel_lookupItNS0_3lutILj4Eu6__bf16u6__bf16EELNS0_14lut_oor_policyE1EE5fetchINS_6vectorItLj16EEELj16EQaaaaleclsrTL0__4sizeELi32EleTL0_0_clsrS9_4sizeEleTL0_0_sr20native_vector_lengthIT0_EE5valueEENS7_Iu6__bf16XT0_EEERKT_"}
!38 = distinct !{!38, !39, !"_ZN3aie15parallel_lookupItNS_3lutILj4Eu6__bf16u6__bf16EELNS_6detail14lut_oor_policyE1EE5fetchITkNS_6VectorENS_6vectorItLj16EEELj16EEENS7_Iu6__bf16XT0_EEERKT_: argument 0"}
!39 = distinct !{!39, !"_ZN3aie15parallel_lookupItNS_3lutILj4Eu6__bf16u6__bf16EELNS_6detail14lut_oor_policyE1EE5fetchITkNS_6VectorENS_6vectorItLj16EEELj16EEENS7_Iu6__bf16XT0_EEERKT_"}
!40 = !{!41, !43}
!41 = distinct !{!41, !42, !"_ZN3aie6detail15parallel_lookupItNS0_3lutILj4Eu6__bf16u6__bf16EELNS0_14lut_oor_policyE1EE5fetchINS_6vectorItLj16EEELj16EQaaaaleclsrTL0__4sizeELi32EleTL0_0_clsrS9_4sizeEleTL0_0_sr20native_vector_lengthIT0_EE5valueEENS7_Iu6__bf16XT0_EEERKT_: argument 0"}
!42 = distinct !{!42, !"_ZN3aie6detail15parallel_lookupItNS0_3lutILj4Eu6__bf16u6__bf16EELNS0_14lut_oor_policyE1EE5fetchINS_6vectorItLj16EEELj16EQaaaaleclsrTL0__4sizeELi32EleTL0_0_clsrS9_4sizeEleTL0_0_sr20native_vector_lengthIT0_EE5valueEENS7_Iu6__bf16XT0_EEERKT_"}
!43 = distinct !{!43, !44, !"_ZN3aie15parallel_lookupItNS_3lutILj4Eu6__bf16u6__bf16EELNS_6detail14lut_oor_policyE1EE5fetchITkNS_6VectorENS_6vectorItLj16EEELj16EEENS7_Iu6__bf16XT0_EEERKT_: argument 0"}
!44 = distinct !{!44, !"_ZN3aie15parallel_lookupItNS_3lutILj4Eu6__bf16u6__bf16EELNS_6detail14lut_oor_policyE1EE5fetchITkNS_6VectorENS_6vectorItLj16EEELj16EEENS7_Iu6__bf16XT0_EEERKT_"}
