; ModuleID = 'dut_inlined.cc'
source_filename = "dut_inlined.cc"
target datalayout = "e-m:e-p:20:32-i1:8:32-i8:8:32-i16:16:32-i32:32:32-f32:32:32-i64:32-f64:32-a:0:32-n32"
target triple = "aie2"

@exp_ilut_ab = external dso_local global [512 x i16], align 32
@exp_ilut_cd = external dso_local global [512 x i16], align 32
@exp_flut_ab = external dso_local global [512 x i16], align 32
@exp_flut_cd = external dso_local global [512 x i16], align 32

; Function Attrs: mustprogress nofree nounwind memory(read, argmem: readwrite)
define dso_local void @dut(ptr noalias nocapture readonly %0, ptr noalias nocapture writeonly %1) local_unnamed_addr #0 {
  %3 = tail call noundef <16 x i32> @llvm.aie2.v16int32()
  %4 = tail call noundef <16 x i32> @llvm.aie2.vbroadcast32.I512(i32 1023)
  %5 = tail call noundef <16 x i32> @llvm.aie2.vbroadcast32.I512(i32 0)
  %6 = tail call noundef <16 x bfloat> @llvm.aie2.v16bfloat16()
  %7 = tail call noundef <8 x i64> @llvm.aie2.v16accfloat()
  %8 = tail call noundef <8 x i64> @llvm.aie2.clr16f.conf()
  %9 = tail call noundef <16 x i16> @llvm.aie2.v16int16()
  %10 = load <16 x bfloat>, ptr %0, align 32, !tbaa !2
  %11 = getelementptr inbounds bfloat, ptr %0, i20 16
  %12 = load <16 x bfloat>, ptr %11, align 32, !tbaa !2
  %13 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %10, i32 8)
  %14 = tail call noundef <32 x i16> @llvm.aie2.v32int16()
  %15 = bitcast <32 x i16> %14 to <16 x i32>
  %16 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %13, <16 x i32> %15, i32 2)
  %17 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %16, i32 0)
  %18 = getelementptr inbounds bfloat, ptr %0, i20 32
  %19 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %12, i32 8)
  %20 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %19, <16 x i32> %15, i32 2)
  %21 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %20, i32 0)
  %22 = bitcast <8 x i32> %17 to <16 x i16>
  %23 = tail call noundef <32 x bfloat> @llvm.aie2.v32bfloat16()
  %24 = tail call noundef <16 x i64> @llvm.aie2.v16acc64()
  %25 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %22, i32 0, i32 0)
  %26 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %25, i32 6, i32 1)
  %27 = zext i20 ptrtoint (ptr @exp_ilut_ab to i20) to i32
  %28 = tail call noundef <16 x i32> @llvm.aie2.vbroadcast32.I512(i32 %27)
  %29 = zext i20 ptrtoint (ptr @exp_ilut_cd to i20) to i32
  %30 = tail call noundef <16 x i32> @llvm.aie2.vbroadcast32.I512(i32 %29)
  %31 = tail call noundef <16 x i32> @llvm.aie2.vsel32(<16 x i32> %28, <16 x i32> %30, i32 52428)
  %32 = add <16 x i32> %31, %26
  %33 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %32, i32 0)
  %34 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %33), !noalias !5
  %35 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %34, i32 0)
  %36 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %33), !noalias !5
  %37 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %35, <8 x i32> %36, i32 1)
  %38 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %32, i32 1)
  %39 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %38), !noalias !5
  %40 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %39, i32 0)
  %41 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %38), !noalias !5
  %42 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %40, <8 x i32> %41, i32 1)
  %43 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %37, <16 x i32> %42, i32 24)
  %44 = bitcast <16 x i32> %43 to <32 x bfloat>
  %45 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %44, i32 0)
  %46 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %25, i32 -2, i32 1)
  %47 = and <16 x i32> %46, %4
  %48 = zext i20 ptrtoint (ptr @exp_flut_ab to i20) to i32
  %49 = tail call noundef <16 x i32> @llvm.aie2.vbroadcast32.I512(i32 %48)
  %50 = zext i20 ptrtoint (ptr @exp_flut_cd to i20) to i32
  %51 = tail call noundef <16 x i32> @llvm.aie2.vbroadcast32.I512(i32 %50)
  %52 = tail call noundef <16 x i32> @llvm.aie2.vsel32(<16 x i32> %49, <16 x i32> %51, i32 52428)
  %53 = add <16 x i32> %52, %47
  %54 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %53, i32 0)
  %55 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %54), !noalias !10
  %56 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %55, i32 0)
  %57 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %54), !noalias !10
  %58 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %56, <8 x i32> %57, i32 1)
  %59 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %53, i32 1)
  %60 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %59), !noalias !10
  %61 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %60, i32 0)
  %62 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %59), !noalias !10
  %63 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %61, <8 x i32> %62, i32 1)
  %64 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %58, <16 x i32> %63, i32 24)
  %65 = bitcast <16 x i32> %64 to <32 x bfloat>
  %66 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %65, i32 0)
  %67 = getelementptr bfloat, ptr %0, i20 48
  %68 = load <16 x bfloat>, ptr %18, align 32, !tbaa !2
  %69 = bitcast <8 x i32> %21 to <16 x i16>
  %70 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %68, i32 8)
  %71 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %70, <16 x i32> %15, i32 2)
  %72 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %71, i32 0)
  %73 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %69, i32 0, i32 0)
  %74 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %73, i32 6, i32 1)
  %75 = add <16 x i32> %74, %31
  %76 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %75, i32 0)
  %77 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %76), !noalias !15
  %78 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %77, i32 0)
  %79 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %76), !noalias !15
  %80 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %78, <8 x i32> %79, i32 1)
  %81 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %75, i32 1)
  %82 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %81), !noalias !15
  %83 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %82, i32 0)
  %84 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %81), !noalias !15
  %85 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %83, <8 x i32> %84, i32 1)
  %86 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %80, <16 x i32> %85, i32 24)
  %87 = bitcast <16 x i32> %86 to <32 x bfloat>
  %88 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %87, i32 0)
  %89 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %73, i32 -2, i32 1)
  %90 = and <16 x i32> %89, %4
  %91 = add <16 x i32> %90, %52
  %92 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %91, i32 0)
  %93 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %92), !noalias !20
  %94 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %93, i32 0)
  %95 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %92), !noalias !20
  %96 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %94, <8 x i32> %95, i32 1)
  %97 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %91, i32 1)
  %98 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %97), !noalias !20
  %99 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %98, i32 0)
  %100 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %97), !noalias !20
  %101 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %99, <8 x i32> %100, i32 1)
  %102 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %96, <16 x i32> %101, i32 24)
  %103 = bitcast <16 x i32> %102 to <32 x bfloat>
  %104 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %103, i32 0)
  %105 = tail call noundef <32 x bfloat> @llvm.aie2.vbroadcast16.bf512(bfloat 0xR0000)
  %106 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %105, i32 0)
  %107 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %45, i32 0)
  %108 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %107, <16 x bfloat> %106, i32 1)
  %109 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %66, i32 0)
  %110 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %109, <16 x bfloat> %106, i32 1)
  %111 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %108, <32 x bfloat> %110, i32 60)
  %112 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %111)
  %113 = tail call noundef <8 x i64> @llvm.aie2.add.accfloat(<8 x i64> %8, <8 x i64> %111, i32 28)
  %114 = load <16 x bfloat>, ptr %67, align 32, !tbaa !2
  %115 = bitcast <8 x i32> %72 to <16 x i16>
  %116 = getelementptr bfloat, ptr %0, i20 64
  %117 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %114, i32 8)
  %118 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %117, <16 x i32> %15, i32 2)
  %119 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %118, i32 0)
  %120 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %115, i32 0, i32 0)
  %121 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %120, i32 6, i32 1)
  %122 = add <16 x i32> %121, %31
  %123 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %122, i32 0)
  %124 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %123), !noalias !15
  %125 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %124, i32 0)
  %126 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %123), !noalias !15
  %127 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %125, <8 x i32> %126, i32 1)
  %128 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %122, i32 1)
  %129 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %128), !noalias !15
  %130 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %129, i32 0)
  %131 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %128), !noalias !15
  %132 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %130, <8 x i32> %131, i32 1)
  %133 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %127, <16 x i32> %132, i32 24)
  %134 = bitcast <16 x i32> %133 to <32 x bfloat>
  %135 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %134, i32 0)
  %136 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %120, i32 -2, i32 1)
  %137 = and <16 x i32> %136, %4
  %138 = add <16 x i32> %137, %52
  %139 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %138, i32 0)
  %140 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %139), !noalias !20
  %141 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %140, i32 0)
  %142 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %139), !noalias !20
  %143 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %141, <8 x i32> %142, i32 1)
  %144 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %138, i32 1)
  %145 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %144), !noalias !20
  %146 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %145, i32 0)
  %147 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %144), !noalias !20
  %148 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %146, <8 x i32> %147, i32 1)
  %149 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %143, <16 x i32> %148, i32 24)
  %150 = bitcast <16 x i32> %149 to <32 x bfloat>
  %151 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %150, i32 0)
  %152 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %88, i32 0)
  %153 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %152, <16 x bfloat> %106, i32 1)
  %154 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %104, i32 0)
  %155 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %154, <16 x bfloat> %106, i32 1)
  %156 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %153, <32 x bfloat> %155, i32 60)
  %157 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %156)
  %158 = tail call noundef <8 x i64> @llvm.aie2.add.accfloat(<8 x i64> %113, <8 x i64> %156, i32 28)
  %159 = load <16 x bfloat>, ptr %116, align 32, !tbaa !2
  %160 = bitcast <8 x i32> %119 to <16 x i16>
  %161 = getelementptr bfloat, ptr %0, i20 80
  %162 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %159, i32 8)
  %163 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %162, <16 x i32> %15, i32 2)
  %164 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %163, i32 0)
  %165 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %160, i32 0, i32 0)
  %166 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %165, i32 6, i32 1)
  %167 = add <16 x i32> %166, %31
  %168 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %167, i32 0)
  %169 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %168), !noalias !15
  %170 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %169, i32 0)
  %171 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %168), !noalias !15
  %172 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %170, <8 x i32> %171, i32 1)
  %173 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %167, i32 1)
  %174 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %173), !noalias !15
  %175 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %174, i32 0)
  %176 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %173), !noalias !15
  %177 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %175, <8 x i32> %176, i32 1)
  %178 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %172, <16 x i32> %177, i32 24)
  %179 = bitcast <16 x i32> %178 to <32 x bfloat>
  %180 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %179, i32 0)
  %181 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %165, i32 -2, i32 1)
  %182 = and <16 x i32> %181, %4
  %183 = add <16 x i32> %182, %52
  %184 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %183, i32 0)
  %185 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %184), !noalias !20
  %186 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %185, i32 0)
  %187 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %184), !noalias !20
  %188 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %186, <8 x i32> %187, i32 1)
  %189 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %183, i32 1)
  %190 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %189), !noalias !20
  %191 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %190, i32 0)
  %192 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %189), !noalias !20
  %193 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %191, <8 x i32> %192, i32 1)
  %194 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %188, <16 x i32> %193, i32 24)
  %195 = bitcast <16 x i32> %194 to <32 x bfloat>
  %196 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %195, i32 0)
  %197 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %135, i32 0)
  %198 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %197, <16 x bfloat> %106, i32 1)
  %199 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %151, i32 0)
  %200 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %199, <16 x bfloat> %106, i32 1)
  %201 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %198, <32 x bfloat> %200, i32 60)
  %202 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %201)
  %203 = tail call noundef <8 x i64> @llvm.aie2.add.accfloat(<8 x i64> %158, <8 x i64> %201, i32 28)
  %204 = load <16 x bfloat>, ptr %161, align 32, !tbaa !2
  %205 = bitcast <8 x i32> %164 to <16 x i16>
  %206 = getelementptr bfloat, ptr %0, i20 96
  %207 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %204, i32 8)
  %208 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %207, <16 x i32> %15, i32 2)
  %209 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %208, i32 0)
  %210 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %205, i32 0, i32 0)
  %211 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %210, i32 6, i32 1)
  %212 = add <16 x i32> %211, %31
  %213 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %212, i32 0)
  %214 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %213), !noalias !15
  %215 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %214, i32 0)
  %216 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %213), !noalias !15
  %217 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %215, <8 x i32> %216, i32 1)
  %218 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %212, i32 1)
  %219 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %218), !noalias !15
  %220 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %219, i32 0)
  %221 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %218), !noalias !15
  %222 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %220, <8 x i32> %221, i32 1)
  %223 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %217, <16 x i32> %222, i32 24)
  %224 = bitcast <16 x i32> %223 to <32 x bfloat>
  %225 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %224, i32 0)
  %226 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %210, i32 -2, i32 1)
  %227 = and <16 x i32> %226, %4
  %228 = add <16 x i32> %227, %52
  %229 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %228, i32 0)
  %230 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %229), !noalias !20
  %231 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %230, i32 0)
  %232 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %229), !noalias !20
  %233 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %231, <8 x i32> %232, i32 1)
  %234 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %228, i32 1)
  %235 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %234), !noalias !20
  %236 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %235, i32 0)
  %237 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %234), !noalias !20
  %238 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %236, <8 x i32> %237, i32 1)
  %239 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %233, <16 x i32> %238, i32 24)
  %240 = bitcast <16 x i32> %239 to <32 x bfloat>
  %241 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %240, i32 0)
  %242 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %180, i32 0)
  %243 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %242, <16 x bfloat> %106, i32 1)
  %244 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %196, i32 0)
  %245 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %244, <16 x bfloat> %106, i32 1)
  %246 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %243, <32 x bfloat> %245, i32 60)
  %247 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %246)
  %248 = tail call noundef <8 x i64> @llvm.aie2.add.accfloat(<8 x i64> %203, <8 x i64> %246, i32 28)
  %249 = load <16 x bfloat>, ptr %206, align 32, !tbaa !2
  %250 = bitcast <8 x i32> %209 to <16 x i16>
  %251 = getelementptr bfloat, ptr %0, i20 112
  %252 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %249, i32 8)
  %253 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %252, <16 x i32> %15, i32 2)
  %254 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %253, i32 0)
  %255 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %250, i32 0, i32 0)
  %256 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %255, i32 6, i32 1)
  %257 = add <16 x i32> %256, %31
  %258 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %257, i32 0)
  %259 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %258), !noalias !15
  %260 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %259, i32 0)
  %261 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %258), !noalias !15
  %262 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %260, <8 x i32> %261, i32 1)
  %263 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %257, i32 1)
  %264 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %263), !noalias !15
  %265 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %264, i32 0)
  %266 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %263), !noalias !15
  %267 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %265, <8 x i32> %266, i32 1)
  %268 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %262, <16 x i32> %267, i32 24)
  %269 = bitcast <16 x i32> %268 to <32 x bfloat>
  %270 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %269, i32 0)
  %271 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %255, i32 -2, i32 1)
  %272 = and <16 x i32> %271, %4
  %273 = add <16 x i32> %272, %52
  %274 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %273, i32 0)
  %275 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %274), !noalias !20
  %276 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %275, i32 0)
  %277 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %274), !noalias !20
  %278 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %276, <8 x i32> %277, i32 1)
  %279 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %273, i32 1)
  %280 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %279), !noalias !20
  %281 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %280, i32 0)
  %282 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %279), !noalias !20
  %283 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %281, <8 x i32> %282, i32 1)
  %284 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %278, <16 x i32> %283, i32 24)
  %285 = bitcast <16 x i32> %284 to <32 x bfloat>
  %286 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %285, i32 0)
  %287 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %225, i32 0)
  %288 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %287, <16 x bfloat> %106, i32 1)
  %289 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %241, i32 0)
  %290 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %289, <16 x bfloat> %106, i32 1)
  %291 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %288, <32 x bfloat> %290, i32 60)
  %292 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %291)
  %293 = tail call noundef <8 x i64> @llvm.aie2.add.accfloat(<8 x i64> %248, <8 x i64> %291, i32 28)
  %294 = load <16 x bfloat>, ptr %251, align 32, !tbaa !2
  %295 = bitcast <8 x i32> %254 to <16 x i16>
  %296 = getelementptr bfloat, ptr %0, i20 128
  %297 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %294, i32 8)
  %298 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %297, <16 x i32> %15, i32 2)
  %299 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %298, i32 0)
  %300 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %295, i32 0, i32 0)
  %301 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %300, i32 6, i32 1)
  %302 = add <16 x i32> %301, %31
  %303 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %302, i32 0)
  %304 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %303), !noalias !15
  %305 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %304, i32 0)
  %306 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %303), !noalias !15
  %307 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %305, <8 x i32> %306, i32 1)
  %308 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %302, i32 1)
  %309 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %308), !noalias !15
  %310 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %309, i32 0)
  %311 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %308), !noalias !15
  %312 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %310, <8 x i32> %311, i32 1)
  %313 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %307, <16 x i32> %312, i32 24)
  %314 = bitcast <16 x i32> %313 to <32 x bfloat>
  %315 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %314, i32 0)
  %316 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %300, i32 -2, i32 1)
  %317 = and <16 x i32> %316, %4
  %318 = add <16 x i32> %317, %52
  %319 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %318, i32 0)
  %320 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %319), !noalias !20
  %321 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %320, i32 0)
  %322 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %319), !noalias !20
  %323 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %321, <8 x i32> %322, i32 1)
  %324 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %318, i32 1)
  %325 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %324), !noalias !20
  %326 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %325, i32 0)
  %327 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %324), !noalias !20
  %328 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %326, <8 x i32> %327, i32 1)
  %329 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %323, <16 x i32> %328, i32 24)
  %330 = bitcast <16 x i32> %329 to <32 x bfloat>
  %331 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %330, i32 0)
  %332 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %270, i32 0)
  %333 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %332, <16 x bfloat> %106, i32 1)
  %334 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %286, i32 0)
  %335 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %334, <16 x bfloat> %106, i32 1)
  %336 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %333, <32 x bfloat> %335, i32 60)
  %337 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %336)
  %338 = tail call noundef <8 x i64> @llvm.aie2.add.accfloat(<8 x i64> %293, <8 x i64> %336, i32 28)
  %339 = load <16 x bfloat>, ptr %296, align 32, !tbaa !2
  %340 = bitcast <8 x i32> %299 to <16 x i16>
  %341 = getelementptr bfloat, ptr %0, i20 144
  %342 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %339, i32 8)
  %343 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %342, <16 x i32> %15, i32 2)
  %344 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %343, i32 0)
  %345 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %340, i32 0, i32 0)
  %346 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %345, i32 6, i32 1)
  %347 = add <16 x i32> %346, %31
  %348 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %347, i32 0)
  %349 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %348), !noalias !15
  %350 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %349, i32 0)
  %351 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %348), !noalias !15
  %352 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %350, <8 x i32> %351, i32 1)
  %353 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %347, i32 1)
  %354 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %353), !noalias !15
  %355 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %354, i32 0)
  %356 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %353), !noalias !15
  %357 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %355, <8 x i32> %356, i32 1)
  %358 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %352, <16 x i32> %357, i32 24)
  %359 = bitcast <16 x i32> %358 to <32 x bfloat>
  %360 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %359, i32 0)
  %361 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %345, i32 -2, i32 1)
  %362 = and <16 x i32> %361, %4
  %363 = add <16 x i32> %362, %52
  %364 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %363, i32 0)
  %365 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %364), !noalias !20
  %366 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %365, i32 0)
  %367 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %364), !noalias !20
  %368 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %366, <8 x i32> %367, i32 1)
  %369 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %363, i32 1)
  %370 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %369), !noalias !20
  %371 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %370, i32 0)
  %372 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %369), !noalias !20
  %373 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %371, <8 x i32> %372, i32 1)
  %374 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %368, <16 x i32> %373, i32 24)
  %375 = bitcast <16 x i32> %374 to <32 x bfloat>
  %376 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %375, i32 0)
  %377 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %315, i32 0)
  %378 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %377, <16 x bfloat> %106, i32 1)
  %379 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %331, i32 0)
  %380 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %379, <16 x bfloat> %106, i32 1)
  %381 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %378, <32 x bfloat> %380, i32 60)
  %382 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %381)
  %383 = tail call noundef <8 x i64> @llvm.aie2.add.accfloat(<8 x i64> %338, <8 x i64> %381, i32 28)
  %384 = load <16 x bfloat>, ptr %341, align 32, !tbaa !2
  %385 = bitcast <8 x i32> %344 to <16 x i16>
  %386 = getelementptr bfloat, ptr %0, i20 160
  %387 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %384, i32 8)
  %388 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %387, <16 x i32> %15, i32 2)
  %389 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %388, i32 0)
  %390 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %385, i32 0, i32 0)
  %391 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %390, i32 6, i32 1)
  %392 = add <16 x i32> %391, %31
  %393 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %392, i32 0)
  %394 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %393), !noalias !15
  %395 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %394, i32 0)
  %396 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %393), !noalias !15
  %397 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %395, <8 x i32> %396, i32 1)
  %398 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %392, i32 1)
  %399 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %398), !noalias !15
  %400 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %399, i32 0)
  %401 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %398), !noalias !15
  %402 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %400, <8 x i32> %401, i32 1)
  %403 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %397, <16 x i32> %402, i32 24)
  %404 = bitcast <16 x i32> %403 to <32 x bfloat>
  %405 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %404, i32 0)
  %406 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %390, i32 -2, i32 1)
  %407 = and <16 x i32> %406, %4
  %408 = add <16 x i32> %407, %52
  %409 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %408, i32 0)
  %410 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %409), !noalias !20
  %411 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %410, i32 0)
  %412 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %409), !noalias !20
  %413 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %411, <8 x i32> %412, i32 1)
  %414 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %408, i32 1)
  %415 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %414), !noalias !20
  %416 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %415, i32 0)
  %417 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %414), !noalias !20
  %418 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %416, <8 x i32> %417, i32 1)
  %419 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %413, <16 x i32> %418, i32 24)
  %420 = bitcast <16 x i32> %419 to <32 x bfloat>
  %421 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %420, i32 0)
  %422 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %360, i32 0)
  %423 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %422, <16 x bfloat> %106, i32 1)
  %424 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %376, i32 0)
  %425 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %424, <16 x bfloat> %106, i32 1)
  %426 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %423, <32 x bfloat> %425, i32 60)
  %427 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %426)
  %428 = tail call noundef <8 x i64> @llvm.aie2.add.accfloat(<8 x i64> %383, <8 x i64> %426, i32 28)
  %429 = load <16 x bfloat>, ptr %386, align 32, !tbaa !2
  %430 = bitcast <8 x i32> %389 to <16 x i16>
  %431 = getelementptr bfloat, ptr %0, i20 176
  %432 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %429, i32 8)
  %433 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %432, <16 x i32> %15, i32 2)
  %434 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %433, i32 0)
  %435 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %430, i32 0, i32 0)
  %436 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %435, i32 6, i32 1)
  %437 = add <16 x i32> %436, %31
  %438 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %437, i32 0)
  %439 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %438), !noalias !15
  %440 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %439, i32 0)
  %441 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %438), !noalias !15
  %442 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %440, <8 x i32> %441, i32 1)
  %443 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %437, i32 1)
  %444 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %443), !noalias !15
  %445 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %444, i32 0)
  %446 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %443), !noalias !15
  %447 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %445, <8 x i32> %446, i32 1)
  %448 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %442, <16 x i32> %447, i32 24)
  %449 = bitcast <16 x i32> %448 to <32 x bfloat>
  %450 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %449, i32 0)
  %451 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %435, i32 -2, i32 1)
  %452 = and <16 x i32> %451, %4
  %453 = add <16 x i32> %452, %52
  %454 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %453, i32 0)
  %455 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %454), !noalias !20
  %456 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %455, i32 0)
  %457 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %454), !noalias !20
  %458 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %456, <8 x i32> %457, i32 1)
  %459 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %453, i32 1)
  %460 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %459), !noalias !20
  %461 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %460, i32 0)
  %462 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %459), !noalias !20
  %463 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %461, <8 x i32> %462, i32 1)
  %464 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %458, <16 x i32> %463, i32 24)
  %465 = bitcast <16 x i32> %464 to <32 x bfloat>
  %466 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %465, i32 0)
  %467 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %405, i32 0)
  %468 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %467, <16 x bfloat> %106, i32 1)
  %469 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %421, i32 0)
  %470 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %469, <16 x bfloat> %106, i32 1)
  %471 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %468, <32 x bfloat> %470, i32 60)
  %472 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %471)
  %473 = tail call noundef <8 x i64> @llvm.aie2.add.accfloat(<8 x i64> %428, <8 x i64> %471, i32 28)
  %474 = load <16 x bfloat>, ptr %431, align 32, !tbaa !2
  %475 = bitcast <8 x i32> %434 to <16 x i16>
  %476 = getelementptr bfloat, ptr %0, i20 192
  %477 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %474, i32 8)
  %478 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %477, <16 x i32> %15, i32 2)
  %479 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %478, i32 0)
  %480 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %475, i32 0, i32 0)
  %481 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %480, i32 6, i32 1)
  %482 = add <16 x i32> %481, %31
  %483 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %482, i32 0)
  %484 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %483), !noalias !15
  %485 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %484, i32 0)
  %486 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %483), !noalias !15
  %487 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %485, <8 x i32> %486, i32 1)
  %488 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %482, i32 1)
  %489 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %488), !noalias !15
  %490 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %489, i32 0)
  %491 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %488), !noalias !15
  %492 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %490, <8 x i32> %491, i32 1)
  %493 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %487, <16 x i32> %492, i32 24)
  %494 = bitcast <16 x i32> %493 to <32 x bfloat>
  %495 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %494, i32 0)
  %496 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %480, i32 -2, i32 1)
  %497 = and <16 x i32> %496, %4
  %498 = add <16 x i32> %497, %52
  %499 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %498, i32 0)
  %500 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %499), !noalias !20
  %501 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %500, i32 0)
  %502 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %499), !noalias !20
  %503 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %501, <8 x i32> %502, i32 1)
  %504 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %498, i32 1)
  %505 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %504), !noalias !20
  %506 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %505, i32 0)
  %507 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %504), !noalias !20
  %508 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %506, <8 x i32> %507, i32 1)
  %509 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %503, <16 x i32> %508, i32 24)
  %510 = bitcast <16 x i32> %509 to <32 x bfloat>
  %511 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %510, i32 0)
  %512 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %450, i32 0)
  %513 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %512, <16 x bfloat> %106, i32 1)
  %514 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %466, i32 0)
  %515 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %514, <16 x bfloat> %106, i32 1)
  %516 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %513, <32 x bfloat> %515, i32 60)
  %517 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %516)
  %518 = tail call noundef <8 x i64> @llvm.aie2.add.accfloat(<8 x i64> %473, <8 x i64> %516, i32 28)
  %519 = load <16 x bfloat>, ptr %476, align 32, !tbaa !2
  %520 = bitcast <8 x i32> %479 to <16 x i16>
  %521 = getelementptr bfloat, ptr %0, i20 208
  %522 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %519, i32 8)
  %523 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %522, <16 x i32> %15, i32 2)
  %524 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %523, i32 0)
  %525 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %520, i32 0, i32 0)
  %526 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %525, i32 6, i32 1)
  %527 = add <16 x i32> %526, %31
  %528 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %527, i32 0)
  %529 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %528), !noalias !15
  %530 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %529, i32 0)
  %531 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %528), !noalias !15
  %532 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %530, <8 x i32> %531, i32 1)
  %533 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %527, i32 1)
  %534 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %533), !noalias !15
  %535 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %534, i32 0)
  %536 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %533), !noalias !15
  %537 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %535, <8 x i32> %536, i32 1)
  %538 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %532, <16 x i32> %537, i32 24)
  %539 = bitcast <16 x i32> %538 to <32 x bfloat>
  %540 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %539, i32 0)
  %541 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %525, i32 -2, i32 1)
  %542 = and <16 x i32> %541, %4
  %543 = add <16 x i32> %542, %52
  %544 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %543, i32 0)
  %545 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %544), !noalias !20
  %546 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %545, i32 0)
  %547 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %544), !noalias !20
  %548 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %546, <8 x i32> %547, i32 1)
  %549 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %543, i32 1)
  %550 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %549), !noalias !20
  %551 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %550, i32 0)
  %552 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %549), !noalias !20
  %553 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %551, <8 x i32> %552, i32 1)
  %554 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %548, <16 x i32> %553, i32 24)
  %555 = bitcast <16 x i32> %554 to <32 x bfloat>
  %556 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %555, i32 0)
  %557 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %495, i32 0)
  %558 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %557, <16 x bfloat> %106, i32 1)
  %559 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %511, i32 0)
  %560 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %559, <16 x bfloat> %106, i32 1)
  %561 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %558, <32 x bfloat> %560, i32 60)
  %562 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %561)
  %563 = tail call noundef <8 x i64> @llvm.aie2.add.accfloat(<8 x i64> %518, <8 x i64> %561, i32 28)
  %564 = load <16 x bfloat>, ptr %521, align 32, !tbaa !2
  %565 = bitcast <8 x i32> %524 to <16 x i16>
  %566 = getelementptr bfloat, ptr %0, i20 224
  %567 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %564, i32 8)
  %568 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %567, <16 x i32> %15, i32 2)
  %569 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %568, i32 0)
  %570 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %565, i32 0, i32 0)
  %571 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %570, i32 6, i32 1)
  %572 = add <16 x i32> %571, %31
  %573 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %572, i32 0)
  %574 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %573), !noalias !15
  %575 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %574, i32 0)
  %576 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %573), !noalias !15
  %577 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %575, <8 x i32> %576, i32 1)
  %578 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %572, i32 1)
  %579 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %578), !noalias !15
  %580 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %579, i32 0)
  %581 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %578), !noalias !15
  %582 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %580, <8 x i32> %581, i32 1)
  %583 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %577, <16 x i32> %582, i32 24)
  %584 = bitcast <16 x i32> %583 to <32 x bfloat>
  %585 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %584, i32 0)
  %586 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %570, i32 -2, i32 1)
  %587 = and <16 x i32> %586, %4
  %588 = add <16 x i32> %587, %52
  %589 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %588, i32 0)
  %590 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %589), !noalias !20
  %591 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %590, i32 0)
  %592 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %589), !noalias !20
  %593 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %591, <8 x i32> %592, i32 1)
  %594 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %588, i32 1)
  %595 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %594), !noalias !20
  %596 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %595, i32 0)
  %597 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %594), !noalias !20
  %598 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %596, <8 x i32> %597, i32 1)
  %599 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %593, <16 x i32> %598, i32 24)
  %600 = bitcast <16 x i32> %599 to <32 x bfloat>
  %601 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %600, i32 0)
  %602 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %540, i32 0)
  %603 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %602, <16 x bfloat> %106, i32 1)
  %604 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %556, i32 0)
  %605 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %604, <16 x bfloat> %106, i32 1)
  %606 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %603, <32 x bfloat> %605, i32 60)
  %607 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %606)
  %608 = tail call noundef <8 x i64> @llvm.aie2.add.accfloat(<8 x i64> %563, <8 x i64> %606, i32 28)
  %609 = load <16 x bfloat>, ptr %566, align 32, !tbaa !2
  %610 = bitcast <8 x i32> %569 to <16 x i16>
  %611 = getelementptr bfloat, ptr %0, i20 240
  %612 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %609, i32 8)
  %613 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %612, <16 x i32> %15, i32 2)
  %614 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %613, i32 0)
  %615 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %610, i32 0, i32 0)
  %616 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %615, i32 6, i32 1)
  %617 = add <16 x i32> %616, %31
  %618 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %617, i32 0)
  %619 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %618), !noalias !15
  %620 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %619, i32 0)
  %621 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %618), !noalias !15
  %622 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %620, <8 x i32> %621, i32 1)
  %623 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %617, i32 1)
  %624 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %623), !noalias !15
  %625 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %624, i32 0)
  %626 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %623), !noalias !15
  %627 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %625, <8 x i32> %626, i32 1)
  %628 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %622, <16 x i32> %627, i32 24)
  %629 = bitcast <16 x i32> %628 to <32 x bfloat>
  %630 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %629, i32 0)
  %631 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %615, i32 -2, i32 1)
  %632 = and <16 x i32> %631, %4
  %633 = add <16 x i32> %632, %52
  %634 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %633, i32 0)
  %635 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %634), !noalias !20
  %636 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %635, i32 0)
  %637 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %634), !noalias !20
  %638 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %636, <8 x i32> %637, i32 1)
  %639 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %633, i32 1)
  %640 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %639), !noalias !20
  %641 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %640, i32 0)
  %642 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %639), !noalias !20
  %643 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %641, <8 x i32> %642, i32 1)
  %644 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %638, <16 x i32> %643, i32 24)
  %645 = bitcast <16 x i32> %644 to <32 x bfloat>
  %646 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %645, i32 0)
  %647 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %585, i32 0)
  %648 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %647, <16 x bfloat> %106, i32 1)
  %649 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %601, i32 0)
  %650 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %649, <16 x bfloat> %106, i32 1)
  %651 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %648, <32 x bfloat> %650, i32 60)
  %652 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %651)
  %653 = tail call noundef <8 x i64> @llvm.aie2.add.accfloat(<8 x i64> %608, <8 x i64> %651, i32 28)
  %654 = load <16 x bfloat>, ptr %611, align 32, !tbaa !2
  %655 = bitcast <8 x i32> %614 to <16 x i16>
  %656 = getelementptr bfloat, ptr %0, i20 256
  %657 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %654, i32 8)
  %658 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %657, <16 x i32> %15, i32 2)
  %659 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %658, i32 0)
  %660 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %655, i32 0, i32 0)
  %661 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %660, i32 6, i32 1)
  %662 = add <16 x i32> %661, %31
  %663 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %662, i32 0)
  %664 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %663), !noalias !15
  %665 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %664, i32 0)
  %666 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %663), !noalias !15
  %667 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %665, <8 x i32> %666, i32 1)
  %668 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %662, i32 1)
  %669 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %668), !noalias !15
  %670 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %669, i32 0)
  %671 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %668), !noalias !15
  %672 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %670, <8 x i32> %671, i32 1)
  %673 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %667, <16 x i32> %672, i32 24)
  %674 = bitcast <16 x i32> %673 to <32 x bfloat>
  %675 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %674, i32 0)
  %676 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %660, i32 -2, i32 1)
  %677 = and <16 x i32> %676, %4
  %678 = add <16 x i32> %677, %52
  %679 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %678, i32 0)
  %680 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %679), !noalias !20
  %681 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %680, i32 0)
  %682 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %679), !noalias !20
  %683 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %681, <8 x i32> %682, i32 1)
  %684 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %678, i32 1)
  %685 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %684), !noalias !20
  %686 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %685, i32 0)
  %687 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %684), !noalias !20
  %688 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %686, <8 x i32> %687, i32 1)
  %689 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %683, <16 x i32> %688, i32 24)
  %690 = bitcast <16 x i32> %689 to <32 x bfloat>
  %691 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %690, i32 0)
  %692 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %630, i32 0)
  %693 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %692, <16 x bfloat> %106, i32 1)
  %694 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %646, i32 0)
  %695 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %694, <16 x bfloat> %106, i32 1)
  %696 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %693, <32 x bfloat> %695, i32 60)
  %697 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %696)
  %698 = tail call noundef <8 x i64> @llvm.aie2.add.accfloat(<8 x i64> %653, <8 x i64> %696, i32 28)
  %699 = load <16 x bfloat>, ptr %656, align 32, !tbaa !2
  %700 = bitcast <8 x i32> %659 to <16 x i16>
  %701 = getelementptr bfloat, ptr %0, i20 272
  %702 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %699, i32 8)
  %703 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %702, <16 x i32> %15, i32 2)
  %704 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %703, i32 0)
  %705 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %700, i32 0, i32 0)
  %706 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %705, i32 6, i32 1)
  %707 = add <16 x i32> %706, %31
  %708 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %707, i32 0)
  %709 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %708), !noalias !15
  %710 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %709, i32 0)
  %711 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %708), !noalias !15
  %712 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %710, <8 x i32> %711, i32 1)
  %713 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %707, i32 1)
  %714 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %713), !noalias !15
  %715 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %714, i32 0)
  %716 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %713), !noalias !15
  %717 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %715, <8 x i32> %716, i32 1)
  %718 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %712, <16 x i32> %717, i32 24)
  %719 = bitcast <16 x i32> %718 to <32 x bfloat>
  %720 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %719, i32 0)
  %721 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %705, i32 -2, i32 1)
  %722 = and <16 x i32> %721, %4
  %723 = add <16 x i32> %722, %52
  %724 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %723, i32 0)
  %725 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %724), !noalias !20
  %726 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %725, i32 0)
  %727 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %724), !noalias !20
  %728 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %726, <8 x i32> %727, i32 1)
  %729 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %723, i32 1)
  %730 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %729), !noalias !20
  %731 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %730, i32 0)
  %732 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %729), !noalias !20
  %733 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %731, <8 x i32> %732, i32 1)
  %734 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %728, <16 x i32> %733, i32 24)
  %735 = bitcast <16 x i32> %734 to <32 x bfloat>
  %736 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %735, i32 0)
  %737 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %675, i32 0)
  %738 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %737, <16 x bfloat> %106, i32 1)
  %739 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %691, i32 0)
  %740 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %739, <16 x bfloat> %106, i32 1)
  %741 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %738, <32 x bfloat> %740, i32 60)
  %742 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %741)
  %743 = tail call noundef <8 x i64> @llvm.aie2.add.accfloat(<8 x i64> %698, <8 x i64> %741, i32 28)
  %744 = load <16 x bfloat>, ptr %701, align 32, !tbaa !2
  %745 = bitcast <8 x i32> %704 to <16 x i16>
  %746 = getelementptr bfloat, ptr %0, i20 288
  %747 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %744, i32 8)
  %748 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %747, <16 x i32> %15, i32 2)
  %749 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %748, i32 0)
  %750 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %745, i32 0, i32 0)
  %751 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %750, i32 6, i32 1)
  %752 = add <16 x i32> %751, %31
  %753 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %752, i32 0)
  %754 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %753), !noalias !15
  %755 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %754, i32 0)
  %756 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %753), !noalias !15
  %757 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %755, <8 x i32> %756, i32 1)
  %758 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %752, i32 1)
  %759 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %758), !noalias !15
  %760 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %759, i32 0)
  %761 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %758), !noalias !15
  %762 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %760, <8 x i32> %761, i32 1)
  %763 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %757, <16 x i32> %762, i32 24)
  %764 = bitcast <16 x i32> %763 to <32 x bfloat>
  %765 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %764, i32 0)
  %766 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %750, i32 -2, i32 1)
  %767 = and <16 x i32> %766, %4
  %768 = add <16 x i32> %767, %52
  %769 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %768, i32 0)
  %770 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %769), !noalias !20
  %771 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %770, i32 0)
  %772 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %769), !noalias !20
  %773 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %771, <8 x i32> %772, i32 1)
  %774 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %768, i32 1)
  %775 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %774), !noalias !20
  %776 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %775, i32 0)
  %777 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %774), !noalias !20
  %778 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %776, <8 x i32> %777, i32 1)
  %779 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %773, <16 x i32> %778, i32 24)
  %780 = bitcast <16 x i32> %779 to <32 x bfloat>
  %781 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %780, i32 0)
  %782 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %720, i32 0)
  %783 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %782, <16 x bfloat> %106, i32 1)
  %784 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %736, i32 0)
  %785 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %784, <16 x bfloat> %106, i32 1)
  %786 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %783, <32 x bfloat> %785, i32 60)
  %787 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %786)
  %788 = tail call noundef <8 x i64> @llvm.aie2.add.accfloat(<8 x i64> %743, <8 x i64> %786, i32 28)
  %789 = load <16 x bfloat>, ptr %746, align 32, !tbaa !2
  %790 = bitcast <8 x i32> %749 to <16 x i16>
  %791 = getelementptr bfloat, ptr %0, i20 304
  %792 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %789, i32 8)
  %793 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %792, <16 x i32> %15, i32 2)
  %794 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %793, i32 0)
  %795 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %790, i32 0, i32 0)
  %796 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %795, i32 6, i32 1)
  %797 = add <16 x i32> %796, %31
  %798 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %797, i32 0)
  %799 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %798), !noalias !15
  %800 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %799, i32 0)
  %801 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %798), !noalias !15
  %802 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %800, <8 x i32> %801, i32 1)
  %803 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %797, i32 1)
  %804 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %803), !noalias !15
  %805 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %804, i32 0)
  %806 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %803), !noalias !15
  %807 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %805, <8 x i32> %806, i32 1)
  %808 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %802, <16 x i32> %807, i32 24)
  %809 = bitcast <16 x i32> %808 to <32 x bfloat>
  %810 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %809, i32 0)
  %811 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %795, i32 -2, i32 1)
  %812 = and <16 x i32> %811, %4
  %813 = add <16 x i32> %812, %52
  %814 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %813, i32 0)
  %815 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %814), !noalias !20
  %816 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %815, i32 0)
  %817 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %814), !noalias !20
  %818 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %816, <8 x i32> %817, i32 1)
  %819 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %813, i32 1)
  %820 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %819), !noalias !20
  %821 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %820, i32 0)
  %822 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %819), !noalias !20
  %823 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %821, <8 x i32> %822, i32 1)
  %824 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %818, <16 x i32> %823, i32 24)
  %825 = bitcast <16 x i32> %824 to <32 x bfloat>
  %826 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %825, i32 0)
  %827 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %765, i32 0)
  %828 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %827, <16 x bfloat> %106, i32 1)
  %829 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %781, i32 0)
  %830 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %829, <16 x bfloat> %106, i32 1)
  %831 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %828, <32 x bfloat> %830, i32 60)
  %832 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %831)
  %833 = tail call noundef <8 x i64> @llvm.aie2.add.accfloat(<8 x i64> %788, <8 x i64> %831, i32 28)
  %834 = load <16 x bfloat>, ptr %791, align 32, !tbaa !2
  %835 = bitcast <8 x i32> %794 to <16 x i16>
  %836 = getelementptr bfloat, ptr %0, i20 320
  %837 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %834, i32 8)
  %838 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %837, <16 x i32> %15, i32 2)
  %839 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %838, i32 0)
  %840 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %835, i32 0, i32 0)
  %841 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %840, i32 6, i32 1)
  %842 = add <16 x i32> %841, %31
  %843 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %842, i32 0)
  %844 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %843), !noalias !15
  %845 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %844, i32 0)
  %846 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %843), !noalias !15
  %847 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %845, <8 x i32> %846, i32 1)
  %848 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %842, i32 1)
  %849 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %848), !noalias !15
  %850 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %849, i32 0)
  %851 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %848), !noalias !15
  %852 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %850, <8 x i32> %851, i32 1)
  %853 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %847, <16 x i32> %852, i32 24)
  %854 = bitcast <16 x i32> %853 to <32 x bfloat>
  %855 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %854, i32 0)
  %856 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %840, i32 -2, i32 1)
  %857 = and <16 x i32> %856, %4
  %858 = add <16 x i32> %857, %52
  %859 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %858, i32 0)
  %860 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %859), !noalias !20
  %861 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %860, i32 0)
  %862 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %859), !noalias !20
  %863 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %861, <8 x i32> %862, i32 1)
  %864 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %858, i32 1)
  %865 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %864), !noalias !20
  %866 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %865, i32 0)
  %867 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %864), !noalias !20
  %868 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %866, <8 x i32> %867, i32 1)
  %869 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %863, <16 x i32> %868, i32 24)
  %870 = bitcast <16 x i32> %869 to <32 x bfloat>
  %871 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %870, i32 0)
  %872 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %810, i32 0)
  %873 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %872, <16 x bfloat> %106, i32 1)
  %874 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %826, i32 0)
  %875 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %874, <16 x bfloat> %106, i32 1)
  %876 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %873, <32 x bfloat> %875, i32 60)
  %877 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %876)
  %878 = tail call noundef <8 x i64> @llvm.aie2.add.accfloat(<8 x i64> %833, <8 x i64> %876, i32 28)
  %879 = load <16 x bfloat>, ptr %836, align 32, !tbaa !2
  %880 = bitcast <8 x i32> %839 to <16 x i16>
  %881 = getelementptr bfloat, ptr %0, i20 336
  %882 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %879, i32 8)
  %883 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %882, <16 x i32> %15, i32 2)
  %884 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %883, i32 0)
  %885 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %880, i32 0, i32 0)
  %886 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %885, i32 6, i32 1)
  %887 = add <16 x i32> %886, %31
  %888 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %887, i32 0)
  %889 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %888), !noalias !15
  %890 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %889, i32 0)
  %891 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %888), !noalias !15
  %892 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %890, <8 x i32> %891, i32 1)
  %893 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %887, i32 1)
  %894 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %893), !noalias !15
  %895 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %894, i32 0)
  %896 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %893), !noalias !15
  %897 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %895, <8 x i32> %896, i32 1)
  %898 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %892, <16 x i32> %897, i32 24)
  %899 = bitcast <16 x i32> %898 to <32 x bfloat>
  %900 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %899, i32 0)
  %901 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %885, i32 -2, i32 1)
  %902 = and <16 x i32> %901, %4
  %903 = add <16 x i32> %902, %52
  %904 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %903, i32 0)
  %905 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %904), !noalias !20
  %906 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %905, i32 0)
  %907 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %904), !noalias !20
  %908 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %906, <8 x i32> %907, i32 1)
  %909 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %903, i32 1)
  %910 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %909), !noalias !20
  %911 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %910, i32 0)
  %912 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %909), !noalias !20
  %913 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %911, <8 x i32> %912, i32 1)
  %914 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %908, <16 x i32> %913, i32 24)
  %915 = bitcast <16 x i32> %914 to <32 x bfloat>
  %916 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %915, i32 0)
  %917 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %855, i32 0)
  %918 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %917, <16 x bfloat> %106, i32 1)
  %919 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %871, i32 0)
  %920 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %919, <16 x bfloat> %106, i32 1)
  %921 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %918, <32 x bfloat> %920, i32 60)
  %922 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %921)
  %923 = tail call noundef <8 x i64> @llvm.aie2.add.accfloat(<8 x i64> %878, <8 x i64> %921, i32 28)
  %924 = load <16 x bfloat>, ptr %881, align 32, !tbaa !2
  %925 = bitcast <8 x i32> %884 to <16 x i16>
  %926 = getelementptr bfloat, ptr %0, i20 352
  %927 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %924, i32 8)
  %928 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %927, <16 x i32> %15, i32 2)
  %929 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %928, i32 0)
  %930 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %925, i32 0, i32 0)
  %931 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %930, i32 6, i32 1)
  %932 = add <16 x i32> %931, %31
  %933 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %932, i32 0)
  %934 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %933), !noalias !15
  %935 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %934, i32 0)
  %936 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %933), !noalias !15
  %937 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %935, <8 x i32> %936, i32 1)
  %938 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %932, i32 1)
  %939 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %938), !noalias !15
  %940 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %939, i32 0)
  %941 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %938), !noalias !15
  %942 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %940, <8 x i32> %941, i32 1)
  %943 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %937, <16 x i32> %942, i32 24)
  %944 = bitcast <16 x i32> %943 to <32 x bfloat>
  %945 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %944, i32 0)
  %946 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %930, i32 -2, i32 1)
  %947 = and <16 x i32> %946, %4
  %948 = add <16 x i32> %947, %52
  %949 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %948, i32 0)
  %950 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %949), !noalias !20
  %951 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %950, i32 0)
  %952 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %949), !noalias !20
  %953 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %951, <8 x i32> %952, i32 1)
  %954 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %948, i32 1)
  %955 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %954), !noalias !20
  %956 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %955, i32 0)
  %957 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %954), !noalias !20
  %958 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %956, <8 x i32> %957, i32 1)
  %959 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %953, <16 x i32> %958, i32 24)
  %960 = bitcast <16 x i32> %959 to <32 x bfloat>
  %961 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %960, i32 0)
  %962 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %900, i32 0)
  %963 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %962, <16 x bfloat> %106, i32 1)
  %964 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %916, i32 0)
  %965 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %964, <16 x bfloat> %106, i32 1)
  %966 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %963, <32 x bfloat> %965, i32 60)
  %967 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %966)
  %968 = tail call noundef <8 x i64> @llvm.aie2.add.accfloat(<8 x i64> %923, <8 x i64> %966, i32 28)
  %969 = load <16 x bfloat>, ptr %926, align 32, !tbaa !2
  %970 = bitcast <8 x i32> %929 to <16 x i16>
  %971 = getelementptr bfloat, ptr %0, i20 368
  %972 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %969, i32 8)
  %973 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %972, <16 x i32> %15, i32 2)
  %974 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %973, i32 0)
  %975 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %970, i32 0, i32 0)
  %976 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %975, i32 6, i32 1)
  %977 = add <16 x i32> %976, %31
  %978 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %977, i32 0)
  %979 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %978), !noalias !15
  %980 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %979, i32 0)
  %981 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %978), !noalias !15
  %982 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %980, <8 x i32> %981, i32 1)
  %983 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %977, i32 1)
  %984 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %983), !noalias !15
  %985 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %984, i32 0)
  %986 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %983), !noalias !15
  %987 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %985, <8 x i32> %986, i32 1)
  %988 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %982, <16 x i32> %987, i32 24)
  %989 = bitcast <16 x i32> %988 to <32 x bfloat>
  %990 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %989, i32 0)
  %991 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %975, i32 -2, i32 1)
  %992 = and <16 x i32> %991, %4
  %993 = add <16 x i32> %992, %52
  %994 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %993, i32 0)
  %995 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %994), !noalias !20
  %996 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %995, i32 0)
  %997 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %994), !noalias !20
  %998 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %996, <8 x i32> %997, i32 1)
  %999 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %993, i32 1)
  %1000 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %999), !noalias !20
  %1001 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1000, i32 0)
  %1002 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %999), !noalias !20
  %1003 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1001, <8 x i32> %1002, i32 1)
  %1004 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %998, <16 x i32> %1003, i32 24)
  %1005 = bitcast <16 x i32> %1004 to <32 x bfloat>
  %1006 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1005, i32 0)
  %1007 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %945, i32 0)
  %1008 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1007, <16 x bfloat> %106, i32 1)
  %1009 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %961, i32 0)
  %1010 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1009, <16 x bfloat> %106, i32 1)
  %1011 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1008, <32 x bfloat> %1010, i32 60)
  %1012 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %1011)
  %1013 = tail call noundef <8 x i64> @llvm.aie2.add.accfloat(<8 x i64> %968, <8 x i64> %1011, i32 28)
  %1014 = load <16 x bfloat>, ptr %971, align 32, !tbaa !2
  %1015 = bitcast <8 x i32> %974 to <16 x i16>
  %1016 = getelementptr bfloat, ptr %0, i20 384
  %1017 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %1014, i32 8)
  %1018 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1017, <16 x i32> %15, i32 2)
  %1019 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1018, i32 0)
  %1020 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %1015, i32 0, i32 0)
  %1021 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1020, i32 6, i32 1)
  %1022 = add <16 x i32> %1021, %31
  %1023 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1022, i32 0)
  %1024 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1023), !noalias !15
  %1025 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1024, i32 0)
  %1026 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1023), !noalias !15
  %1027 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1025, <8 x i32> %1026, i32 1)
  %1028 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1022, i32 1)
  %1029 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1028), !noalias !15
  %1030 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1029, i32 0)
  %1031 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1028), !noalias !15
  %1032 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1030, <8 x i32> %1031, i32 1)
  %1033 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1027, <16 x i32> %1032, i32 24)
  %1034 = bitcast <16 x i32> %1033 to <32 x bfloat>
  %1035 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1034, i32 0)
  %1036 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1020, i32 -2, i32 1)
  %1037 = and <16 x i32> %1036, %4
  %1038 = add <16 x i32> %1037, %52
  %1039 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1038, i32 0)
  %1040 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1039), !noalias !20
  %1041 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1040, i32 0)
  %1042 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1039), !noalias !20
  %1043 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1041, <8 x i32> %1042, i32 1)
  %1044 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1038, i32 1)
  %1045 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1044), !noalias !20
  %1046 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1045, i32 0)
  %1047 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1044), !noalias !20
  %1048 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1046, <8 x i32> %1047, i32 1)
  %1049 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1043, <16 x i32> %1048, i32 24)
  %1050 = bitcast <16 x i32> %1049 to <32 x bfloat>
  %1051 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1050, i32 0)
  %1052 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %990, i32 0)
  %1053 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1052, <16 x bfloat> %106, i32 1)
  %1054 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1006, i32 0)
  %1055 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1054, <16 x bfloat> %106, i32 1)
  %1056 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1053, <32 x bfloat> %1055, i32 60)
  %1057 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %1056)
  %1058 = tail call noundef <8 x i64> @llvm.aie2.add.accfloat(<8 x i64> %1013, <8 x i64> %1056, i32 28)
  %1059 = load <16 x bfloat>, ptr %1016, align 32, !tbaa !2
  %1060 = bitcast <8 x i32> %1019 to <16 x i16>
  %1061 = getelementptr bfloat, ptr %0, i20 400
  %1062 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %1059, i32 8)
  %1063 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1062, <16 x i32> %15, i32 2)
  %1064 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1063, i32 0)
  %1065 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %1060, i32 0, i32 0)
  %1066 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1065, i32 6, i32 1)
  %1067 = add <16 x i32> %1066, %31
  %1068 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1067, i32 0)
  %1069 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1068), !noalias !15
  %1070 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1069, i32 0)
  %1071 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1068), !noalias !15
  %1072 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1070, <8 x i32> %1071, i32 1)
  %1073 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1067, i32 1)
  %1074 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1073), !noalias !15
  %1075 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1074, i32 0)
  %1076 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1073), !noalias !15
  %1077 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1075, <8 x i32> %1076, i32 1)
  %1078 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1072, <16 x i32> %1077, i32 24)
  %1079 = bitcast <16 x i32> %1078 to <32 x bfloat>
  %1080 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1079, i32 0)
  %1081 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1065, i32 -2, i32 1)
  %1082 = and <16 x i32> %1081, %4
  %1083 = add <16 x i32> %1082, %52
  %1084 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1083, i32 0)
  %1085 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1084), !noalias !20
  %1086 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1085, i32 0)
  %1087 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1084), !noalias !20
  %1088 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1086, <8 x i32> %1087, i32 1)
  %1089 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1083, i32 1)
  %1090 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1089), !noalias !20
  %1091 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1090, i32 0)
  %1092 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1089), !noalias !20
  %1093 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1091, <8 x i32> %1092, i32 1)
  %1094 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1088, <16 x i32> %1093, i32 24)
  %1095 = bitcast <16 x i32> %1094 to <32 x bfloat>
  %1096 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1095, i32 0)
  %1097 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1035, i32 0)
  %1098 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1097, <16 x bfloat> %106, i32 1)
  %1099 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1051, i32 0)
  %1100 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1099, <16 x bfloat> %106, i32 1)
  %1101 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1098, <32 x bfloat> %1100, i32 60)
  %1102 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %1101)
  %1103 = tail call noundef <8 x i64> @llvm.aie2.add.accfloat(<8 x i64> %1058, <8 x i64> %1101, i32 28)
  %1104 = load <16 x bfloat>, ptr %1061, align 32, !tbaa !2
  %1105 = bitcast <8 x i32> %1064 to <16 x i16>
  %1106 = getelementptr bfloat, ptr %0, i20 416
  %1107 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %1104, i32 8)
  %1108 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1107, <16 x i32> %15, i32 2)
  %1109 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1108, i32 0)
  %1110 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %1105, i32 0, i32 0)
  %1111 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1110, i32 6, i32 1)
  %1112 = add <16 x i32> %1111, %31
  %1113 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1112, i32 0)
  %1114 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1113), !noalias !15
  %1115 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1114, i32 0)
  %1116 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1113), !noalias !15
  %1117 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1115, <8 x i32> %1116, i32 1)
  %1118 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1112, i32 1)
  %1119 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1118), !noalias !15
  %1120 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1119, i32 0)
  %1121 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1118), !noalias !15
  %1122 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1120, <8 x i32> %1121, i32 1)
  %1123 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1117, <16 x i32> %1122, i32 24)
  %1124 = bitcast <16 x i32> %1123 to <32 x bfloat>
  %1125 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1124, i32 0)
  %1126 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1110, i32 -2, i32 1)
  %1127 = and <16 x i32> %1126, %4
  %1128 = add <16 x i32> %1127, %52
  %1129 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1128, i32 0)
  %1130 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1129), !noalias !20
  %1131 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1130, i32 0)
  %1132 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1129), !noalias !20
  %1133 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1131, <8 x i32> %1132, i32 1)
  %1134 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1128, i32 1)
  %1135 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1134), !noalias !20
  %1136 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1135, i32 0)
  %1137 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1134), !noalias !20
  %1138 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1136, <8 x i32> %1137, i32 1)
  %1139 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1133, <16 x i32> %1138, i32 24)
  %1140 = bitcast <16 x i32> %1139 to <32 x bfloat>
  %1141 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1140, i32 0)
  %1142 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1080, i32 0)
  %1143 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1142, <16 x bfloat> %106, i32 1)
  %1144 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1096, i32 0)
  %1145 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1144, <16 x bfloat> %106, i32 1)
  %1146 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1143, <32 x bfloat> %1145, i32 60)
  %1147 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %1146)
  %1148 = tail call noundef <8 x i64> @llvm.aie2.add.accfloat(<8 x i64> %1103, <8 x i64> %1146, i32 28)
  %1149 = load <16 x bfloat>, ptr %1106, align 32, !tbaa !2
  %1150 = bitcast <8 x i32> %1109 to <16 x i16>
  %1151 = getelementptr bfloat, ptr %0, i20 432
  %1152 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %1149, i32 8)
  %1153 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1152, <16 x i32> %15, i32 2)
  %1154 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1153, i32 0)
  %1155 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %1150, i32 0, i32 0)
  %1156 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1155, i32 6, i32 1)
  %1157 = add <16 x i32> %1156, %31
  %1158 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1157, i32 0)
  %1159 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1158), !noalias !15
  %1160 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1159, i32 0)
  %1161 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1158), !noalias !15
  %1162 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1160, <8 x i32> %1161, i32 1)
  %1163 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1157, i32 1)
  %1164 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1163), !noalias !15
  %1165 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1164, i32 0)
  %1166 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1163), !noalias !15
  %1167 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1165, <8 x i32> %1166, i32 1)
  %1168 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1162, <16 x i32> %1167, i32 24)
  %1169 = bitcast <16 x i32> %1168 to <32 x bfloat>
  %1170 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1169, i32 0)
  %1171 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1155, i32 -2, i32 1)
  %1172 = and <16 x i32> %1171, %4
  %1173 = add <16 x i32> %1172, %52
  %1174 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1173, i32 0)
  %1175 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1174), !noalias !20
  %1176 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1175, i32 0)
  %1177 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1174), !noalias !20
  %1178 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1176, <8 x i32> %1177, i32 1)
  %1179 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1173, i32 1)
  %1180 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1179), !noalias !20
  %1181 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1180, i32 0)
  %1182 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1179), !noalias !20
  %1183 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1181, <8 x i32> %1182, i32 1)
  %1184 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1178, <16 x i32> %1183, i32 24)
  %1185 = bitcast <16 x i32> %1184 to <32 x bfloat>
  %1186 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1185, i32 0)
  %1187 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1125, i32 0)
  %1188 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1187, <16 x bfloat> %106, i32 1)
  %1189 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1141, i32 0)
  %1190 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1189, <16 x bfloat> %106, i32 1)
  %1191 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1188, <32 x bfloat> %1190, i32 60)
  %1192 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %1191)
  %1193 = tail call noundef <8 x i64> @llvm.aie2.add.accfloat(<8 x i64> %1148, <8 x i64> %1191, i32 28)
  %1194 = load <16 x bfloat>, ptr %1151, align 32, !tbaa !2
  %1195 = bitcast <8 x i32> %1154 to <16 x i16>
  %1196 = getelementptr bfloat, ptr %0, i20 448
  %1197 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %1194, i32 8)
  %1198 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1197, <16 x i32> %15, i32 2)
  %1199 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1198, i32 0)
  %1200 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %1195, i32 0, i32 0)
  %1201 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1200, i32 6, i32 1)
  %1202 = add <16 x i32> %1201, %31
  %1203 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1202, i32 0)
  %1204 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1203), !noalias !15
  %1205 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1204, i32 0)
  %1206 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1203), !noalias !15
  %1207 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1205, <8 x i32> %1206, i32 1)
  %1208 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1202, i32 1)
  %1209 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1208), !noalias !15
  %1210 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1209, i32 0)
  %1211 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1208), !noalias !15
  %1212 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1210, <8 x i32> %1211, i32 1)
  %1213 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1207, <16 x i32> %1212, i32 24)
  %1214 = bitcast <16 x i32> %1213 to <32 x bfloat>
  %1215 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1214, i32 0)
  %1216 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1200, i32 -2, i32 1)
  %1217 = and <16 x i32> %1216, %4
  %1218 = add <16 x i32> %1217, %52
  %1219 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1218, i32 0)
  %1220 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1219), !noalias !20
  %1221 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1220, i32 0)
  %1222 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1219), !noalias !20
  %1223 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1221, <8 x i32> %1222, i32 1)
  %1224 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1218, i32 1)
  %1225 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1224), !noalias !20
  %1226 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1225, i32 0)
  %1227 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1224), !noalias !20
  %1228 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1226, <8 x i32> %1227, i32 1)
  %1229 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1223, <16 x i32> %1228, i32 24)
  %1230 = bitcast <16 x i32> %1229 to <32 x bfloat>
  %1231 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1230, i32 0)
  %1232 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1170, i32 0)
  %1233 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1232, <16 x bfloat> %106, i32 1)
  %1234 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1186, i32 0)
  %1235 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1234, <16 x bfloat> %106, i32 1)
  %1236 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1233, <32 x bfloat> %1235, i32 60)
  %1237 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %1236)
  %1238 = tail call noundef <8 x i64> @llvm.aie2.add.accfloat(<8 x i64> %1193, <8 x i64> %1236, i32 28)
  %1239 = load <16 x bfloat>, ptr %1196, align 32, !tbaa !2
  %1240 = bitcast <8 x i32> %1199 to <16 x i16>
  %1241 = getelementptr bfloat, ptr %0, i20 464
  %1242 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %1239, i32 8)
  %1243 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1242, <16 x i32> %15, i32 2)
  %1244 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1243, i32 0)
  %1245 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %1240, i32 0, i32 0)
  %1246 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1245, i32 6, i32 1)
  %1247 = add <16 x i32> %1246, %31
  %1248 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1247, i32 0)
  %1249 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1248), !noalias !15
  %1250 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1249, i32 0)
  %1251 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1248), !noalias !15
  %1252 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1250, <8 x i32> %1251, i32 1)
  %1253 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1247, i32 1)
  %1254 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1253), !noalias !15
  %1255 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1254, i32 0)
  %1256 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1253), !noalias !15
  %1257 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1255, <8 x i32> %1256, i32 1)
  %1258 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1252, <16 x i32> %1257, i32 24)
  %1259 = bitcast <16 x i32> %1258 to <32 x bfloat>
  %1260 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1259, i32 0)
  %1261 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1245, i32 -2, i32 1)
  %1262 = and <16 x i32> %1261, %4
  %1263 = add <16 x i32> %1262, %52
  %1264 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1263, i32 0)
  %1265 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1264), !noalias !20
  %1266 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1265, i32 0)
  %1267 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1264), !noalias !20
  %1268 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1266, <8 x i32> %1267, i32 1)
  %1269 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1263, i32 1)
  %1270 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1269), !noalias !20
  %1271 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1270, i32 0)
  %1272 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1269), !noalias !20
  %1273 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1271, <8 x i32> %1272, i32 1)
  %1274 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1268, <16 x i32> %1273, i32 24)
  %1275 = bitcast <16 x i32> %1274 to <32 x bfloat>
  %1276 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1275, i32 0)
  %1277 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1215, i32 0)
  %1278 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1277, <16 x bfloat> %106, i32 1)
  %1279 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1231, i32 0)
  %1280 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1279, <16 x bfloat> %106, i32 1)
  %1281 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1278, <32 x bfloat> %1280, i32 60)
  %1282 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %1281)
  %1283 = tail call noundef <8 x i64> @llvm.aie2.add.accfloat(<8 x i64> %1238, <8 x i64> %1281, i32 28)
  %1284 = load <16 x bfloat>, ptr %1241, align 32, !tbaa !2
  %1285 = bitcast <8 x i32> %1244 to <16 x i16>
  %1286 = getelementptr bfloat, ptr %0, i20 480
  %1287 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %1284, i32 8)
  %1288 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1287, <16 x i32> %15, i32 2)
  %1289 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1288, i32 0)
  %1290 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %1285, i32 0, i32 0)
  %1291 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1290, i32 6, i32 1)
  %1292 = add <16 x i32> %1291, %31
  %1293 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1292, i32 0)
  %1294 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1293), !noalias !15
  %1295 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1294, i32 0)
  %1296 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1293), !noalias !15
  %1297 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1295, <8 x i32> %1296, i32 1)
  %1298 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1292, i32 1)
  %1299 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1298), !noalias !15
  %1300 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1299, i32 0)
  %1301 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1298), !noalias !15
  %1302 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1300, <8 x i32> %1301, i32 1)
  %1303 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1297, <16 x i32> %1302, i32 24)
  %1304 = bitcast <16 x i32> %1303 to <32 x bfloat>
  %1305 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1304, i32 0)
  %1306 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1290, i32 -2, i32 1)
  %1307 = and <16 x i32> %1306, %4
  %1308 = add <16 x i32> %1307, %52
  %1309 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1308, i32 0)
  %1310 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1309), !noalias !20
  %1311 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1310, i32 0)
  %1312 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1309), !noalias !20
  %1313 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1311, <8 x i32> %1312, i32 1)
  %1314 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1308, i32 1)
  %1315 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1314), !noalias !20
  %1316 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1315, i32 0)
  %1317 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1314), !noalias !20
  %1318 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1316, <8 x i32> %1317, i32 1)
  %1319 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1313, <16 x i32> %1318, i32 24)
  %1320 = bitcast <16 x i32> %1319 to <32 x bfloat>
  %1321 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1320, i32 0)
  %1322 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1260, i32 0)
  %1323 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1322, <16 x bfloat> %106, i32 1)
  %1324 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1276, i32 0)
  %1325 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1324, <16 x bfloat> %106, i32 1)
  %1326 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1323, <32 x bfloat> %1325, i32 60)
  %1327 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %1326)
  %1328 = tail call noundef <8 x i64> @llvm.aie2.add.accfloat(<8 x i64> %1283, <8 x i64> %1326, i32 28)
  %1329 = load <16 x bfloat>, ptr %1286, align 32, !tbaa !2
  %1330 = bitcast <8 x i32> %1289 to <16 x i16>
  %1331 = getelementptr bfloat, ptr %0, i20 496
  %1332 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %1329, i32 8)
  %1333 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1332, <16 x i32> %15, i32 2)
  %1334 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1333, i32 0)
  %1335 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %1330, i32 0, i32 0)
  %1336 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1335, i32 6, i32 1)
  %1337 = add <16 x i32> %1336, %31
  %1338 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1337, i32 0)
  %1339 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1338), !noalias !15
  %1340 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1339, i32 0)
  %1341 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1338), !noalias !15
  %1342 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1340, <8 x i32> %1341, i32 1)
  %1343 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1337, i32 1)
  %1344 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1343), !noalias !15
  %1345 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1344, i32 0)
  %1346 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1343), !noalias !15
  %1347 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1345, <8 x i32> %1346, i32 1)
  %1348 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1342, <16 x i32> %1347, i32 24)
  %1349 = bitcast <16 x i32> %1348 to <32 x bfloat>
  %1350 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1349, i32 0)
  %1351 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1335, i32 -2, i32 1)
  %1352 = and <16 x i32> %1351, %4
  %1353 = add <16 x i32> %1352, %52
  %1354 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1353, i32 0)
  %1355 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1354), !noalias !20
  %1356 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1355, i32 0)
  %1357 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1354), !noalias !20
  %1358 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1356, <8 x i32> %1357, i32 1)
  %1359 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1353, i32 1)
  %1360 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1359), !noalias !20
  %1361 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1360, i32 0)
  %1362 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1359), !noalias !20
  %1363 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1361, <8 x i32> %1362, i32 1)
  %1364 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1358, <16 x i32> %1363, i32 24)
  %1365 = bitcast <16 x i32> %1364 to <32 x bfloat>
  %1366 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1365, i32 0)
  %1367 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1305, i32 0)
  %1368 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1367, <16 x bfloat> %106, i32 1)
  %1369 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1321, i32 0)
  %1370 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1369, <16 x bfloat> %106, i32 1)
  %1371 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1368, <32 x bfloat> %1370, i32 60)
  %1372 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %1371)
  %1373 = tail call noundef <8 x i64> @llvm.aie2.add.accfloat(<8 x i64> %1328, <8 x i64> %1371, i32 28)
  %1374 = load <16 x bfloat>, ptr %1331, align 32, !tbaa !2
  %1375 = bitcast <8 x i32> %1334 to <16 x i16>
  %1376 = getelementptr bfloat, ptr %0, i20 512
  %1377 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %1374, i32 8)
  %1378 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1377, <16 x i32> %15, i32 2)
  %1379 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1378, i32 0)
  %1380 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %1375, i32 0, i32 0)
  %1381 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1380, i32 6, i32 1)
  %1382 = add <16 x i32> %1381, %31
  %1383 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1382, i32 0)
  %1384 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1383), !noalias !15
  %1385 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1384, i32 0)
  %1386 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1383), !noalias !15
  %1387 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1385, <8 x i32> %1386, i32 1)
  %1388 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1382, i32 1)
  %1389 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1388), !noalias !15
  %1390 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1389, i32 0)
  %1391 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1388), !noalias !15
  %1392 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1390, <8 x i32> %1391, i32 1)
  %1393 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1387, <16 x i32> %1392, i32 24)
  %1394 = bitcast <16 x i32> %1393 to <32 x bfloat>
  %1395 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1394, i32 0)
  %1396 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1380, i32 -2, i32 1)
  %1397 = and <16 x i32> %1396, %4
  %1398 = add <16 x i32> %1397, %52
  %1399 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1398, i32 0)
  %1400 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1399), !noalias !20
  %1401 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1400, i32 0)
  %1402 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1399), !noalias !20
  %1403 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1401, <8 x i32> %1402, i32 1)
  %1404 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1398, i32 1)
  %1405 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1404), !noalias !20
  %1406 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1405, i32 0)
  %1407 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1404), !noalias !20
  %1408 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1406, <8 x i32> %1407, i32 1)
  %1409 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1403, <16 x i32> %1408, i32 24)
  %1410 = bitcast <16 x i32> %1409 to <32 x bfloat>
  %1411 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1410, i32 0)
  %1412 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1350, i32 0)
  %1413 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1412, <16 x bfloat> %106, i32 1)
  %1414 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1366, i32 0)
  %1415 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1414, <16 x bfloat> %106, i32 1)
  %1416 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1413, <32 x bfloat> %1415, i32 60)
  %1417 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %1416)
  %1418 = tail call noundef <8 x i64> @llvm.aie2.add.accfloat(<8 x i64> %1373, <8 x i64> %1416, i32 28)
  %1419 = load <16 x bfloat>, ptr %1376, align 32, !tbaa !2
  %1420 = bitcast <8 x i32> %1379 to <16 x i16>
  %1421 = getelementptr bfloat, ptr %0, i20 528
  %1422 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %1419, i32 8)
  %1423 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1422, <16 x i32> %15, i32 2)
  %1424 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1423, i32 0)
  %1425 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %1420, i32 0, i32 0)
  %1426 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1425, i32 6, i32 1)
  %1427 = add <16 x i32> %1426, %31
  %1428 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1427, i32 0)
  %1429 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1428), !noalias !15
  %1430 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1429, i32 0)
  %1431 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1428), !noalias !15
  %1432 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1430, <8 x i32> %1431, i32 1)
  %1433 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1427, i32 1)
  %1434 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1433), !noalias !15
  %1435 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1434, i32 0)
  %1436 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1433), !noalias !15
  %1437 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1435, <8 x i32> %1436, i32 1)
  %1438 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1432, <16 x i32> %1437, i32 24)
  %1439 = bitcast <16 x i32> %1438 to <32 x bfloat>
  %1440 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1439, i32 0)
  %1441 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1425, i32 -2, i32 1)
  %1442 = and <16 x i32> %1441, %4
  %1443 = add <16 x i32> %1442, %52
  %1444 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1443, i32 0)
  %1445 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1444), !noalias !20
  %1446 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1445, i32 0)
  %1447 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1444), !noalias !20
  %1448 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1446, <8 x i32> %1447, i32 1)
  %1449 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1443, i32 1)
  %1450 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1449), !noalias !20
  %1451 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1450, i32 0)
  %1452 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1449), !noalias !20
  %1453 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1451, <8 x i32> %1452, i32 1)
  %1454 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1448, <16 x i32> %1453, i32 24)
  %1455 = bitcast <16 x i32> %1454 to <32 x bfloat>
  %1456 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1455, i32 0)
  %1457 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1395, i32 0)
  %1458 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1457, <16 x bfloat> %106, i32 1)
  %1459 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1411, i32 0)
  %1460 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1459, <16 x bfloat> %106, i32 1)
  %1461 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1458, <32 x bfloat> %1460, i32 60)
  %1462 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %1461)
  %1463 = tail call noundef <8 x i64> @llvm.aie2.add.accfloat(<8 x i64> %1418, <8 x i64> %1461, i32 28)
  %1464 = load <16 x bfloat>, ptr %1421, align 32, !tbaa !2
  %1465 = bitcast <8 x i32> %1424 to <16 x i16>
  %1466 = getelementptr bfloat, ptr %0, i20 544
  %1467 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %1464, i32 8)
  %1468 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1467, <16 x i32> %15, i32 2)
  %1469 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1468, i32 0)
  %1470 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %1465, i32 0, i32 0)
  %1471 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1470, i32 6, i32 1)
  %1472 = add <16 x i32> %1471, %31
  %1473 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1472, i32 0)
  %1474 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1473), !noalias !15
  %1475 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1474, i32 0)
  %1476 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1473), !noalias !15
  %1477 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1475, <8 x i32> %1476, i32 1)
  %1478 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1472, i32 1)
  %1479 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1478), !noalias !15
  %1480 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1479, i32 0)
  %1481 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1478), !noalias !15
  %1482 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1480, <8 x i32> %1481, i32 1)
  %1483 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1477, <16 x i32> %1482, i32 24)
  %1484 = bitcast <16 x i32> %1483 to <32 x bfloat>
  %1485 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1484, i32 0)
  %1486 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1470, i32 -2, i32 1)
  %1487 = and <16 x i32> %1486, %4
  %1488 = add <16 x i32> %1487, %52
  %1489 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1488, i32 0)
  %1490 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1489), !noalias !20
  %1491 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1490, i32 0)
  %1492 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1489), !noalias !20
  %1493 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1491, <8 x i32> %1492, i32 1)
  %1494 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1488, i32 1)
  %1495 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1494), !noalias !20
  %1496 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1495, i32 0)
  %1497 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1494), !noalias !20
  %1498 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1496, <8 x i32> %1497, i32 1)
  %1499 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1493, <16 x i32> %1498, i32 24)
  %1500 = bitcast <16 x i32> %1499 to <32 x bfloat>
  %1501 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1500, i32 0)
  %1502 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1440, i32 0)
  %1503 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1502, <16 x bfloat> %106, i32 1)
  %1504 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1456, i32 0)
  %1505 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1504, <16 x bfloat> %106, i32 1)
  %1506 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1503, <32 x bfloat> %1505, i32 60)
  %1507 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %1506)
  %1508 = tail call noundef <8 x i64> @llvm.aie2.add.accfloat(<8 x i64> %1463, <8 x i64> %1506, i32 28)
  %1509 = load <16 x bfloat>, ptr %1466, align 32, !tbaa !2
  %1510 = bitcast <8 x i32> %1469 to <16 x i16>
  %1511 = getelementptr bfloat, ptr %0, i20 560
  %1512 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %1509, i32 8)
  %1513 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1512, <16 x i32> %15, i32 2)
  %1514 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1513, i32 0)
  %1515 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %1510, i32 0, i32 0)
  %1516 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1515, i32 6, i32 1)
  %1517 = add <16 x i32> %1516, %31
  %1518 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1517, i32 0)
  %1519 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1518), !noalias !15
  %1520 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1519, i32 0)
  %1521 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1518), !noalias !15
  %1522 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1520, <8 x i32> %1521, i32 1)
  %1523 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1517, i32 1)
  %1524 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1523), !noalias !15
  %1525 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1524, i32 0)
  %1526 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1523), !noalias !15
  %1527 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1525, <8 x i32> %1526, i32 1)
  %1528 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1522, <16 x i32> %1527, i32 24)
  %1529 = bitcast <16 x i32> %1528 to <32 x bfloat>
  %1530 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1529, i32 0)
  %1531 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1515, i32 -2, i32 1)
  %1532 = and <16 x i32> %1531, %4
  %1533 = add <16 x i32> %1532, %52
  %1534 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1533, i32 0)
  %1535 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1534), !noalias !20
  %1536 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1535, i32 0)
  %1537 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1534), !noalias !20
  %1538 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1536, <8 x i32> %1537, i32 1)
  %1539 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1533, i32 1)
  %1540 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1539), !noalias !20
  %1541 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1540, i32 0)
  %1542 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1539), !noalias !20
  %1543 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1541, <8 x i32> %1542, i32 1)
  %1544 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1538, <16 x i32> %1543, i32 24)
  %1545 = bitcast <16 x i32> %1544 to <32 x bfloat>
  %1546 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1545, i32 0)
  %1547 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1485, i32 0)
  %1548 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1547, <16 x bfloat> %106, i32 1)
  %1549 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1501, i32 0)
  %1550 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1549, <16 x bfloat> %106, i32 1)
  %1551 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1548, <32 x bfloat> %1550, i32 60)
  %1552 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %1551)
  %1553 = tail call noundef <8 x i64> @llvm.aie2.add.accfloat(<8 x i64> %1508, <8 x i64> %1551, i32 28)
  %1554 = load <16 x bfloat>, ptr %1511, align 32, !tbaa !2
  %1555 = bitcast <8 x i32> %1514 to <16 x i16>
  %1556 = getelementptr bfloat, ptr %0, i20 576
  %1557 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %1554, i32 8)
  %1558 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1557, <16 x i32> %15, i32 2)
  %1559 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1558, i32 0)
  %1560 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %1555, i32 0, i32 0)
  %1561 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1560, i32 6, i32 1)
  %1562 = add <16 x i32> %1561, %31
  %1563 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1562, i32 0)
  %1564 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1563), !noalias !15
  %1565 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1564, i32 0)
  %1566 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1563), !noalias !15
  %1567 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1565, <8 x i32> %1566, i32 1)
  %1568 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1562, i32 1)
  %1569 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1568), !noalias !15
  %1570 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1569, i32 0)
  %1571 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1568), !noalias !15
  %1572 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1570, <8 x i32> %1571, i32 1)
  %1573 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1567, <16 x i32> %1572, i32 24)
  %1574 = bitcast <16 x i32> %1573 to <32 x bfloat>
  %1575 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1574, i32 0)
  %1576 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1560, i32 -2, i32 1)
  %1577 = and <16 x i32> %1576, %4
  %1578 = add <16 x i32> %1577, %52
  %1579 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1578, i32 0)
  %1580 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1579), !noalias !20
  %1581 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1580, i32 0)
  %1582 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1579), !noalias !20
  %1583 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1581, <8 x i32> %1582, i32 1)
  %1584 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1578, i32 1)
  %1585 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1584), !noalias !20
  %1586 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1585, i32 0)
  %1587 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1584), !noalias !20
  %1588 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1586, <8 x i32> %1587, i32 1)
  %1589 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1583, <16 x i32> %1588, i32 24)
  %1590 = bitcast <16 x i32> %1589 to <32 x bfloat>
  %1591 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1590, i32 0)
  %1592 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1530, i32 0)
  %1593 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1592, <16 x bfloat> %106, i32 1)
  %1594 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1546, i32 0)
  %1595 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1594, <16 x bfloat> %106, i32 1)
  %1596 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1593, <32 x bfloat> %1595, i32 60)
  %1597 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %1596)
  %1598 = tail call noundef <8 x i64> @llvm.aie2.add.accfloat(<8 x i64> %1553, <8 x i64> %1596, i32 28)
  %1599 = load <16 x bfloat>, ptr %1556, align 32, !tbaa !2
  %1600 = bitcast <8 x i32> %1559 to <16 x i16>
  %1601 = getelementptr bfloat, ptr %0, i20 592
  %1602 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %1599, i32 8)
  %1603 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1602, <16 x i32> %15, i32 2)
  %1604 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1603, i32 0)
  %1605 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %1600, i32 0, i32 0)
  %1606 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1605, i32 6, i32 1)
  %1607 = add <16 x i32> %1606, %31
  %1608 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1607, i32 0)
  %1609 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1608), !noalias !15
  %1610 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1609, i32 0)
  %1611 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1608), !noalias !15
  %1612 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1610, <8 x i32> %1611, i32 1)
  %1613 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1607, i32 1)
  %1614 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1613), !noalias !15
  %1615 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1614, i32 0)
  %1616 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1613), !noalias !15
  %1617 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1615, <8 x i32> %1616, i32 1)
  %1618 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1612, <16 x i32> %1617, i32 24)
  %1619 = bitcast <16 x i32> %1618 to <32 x bfloat>
  %1620 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1619, i32 0)
  %1621 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1605, i32 -2, i32 1)
  %1622 = and <16 x i32> %1621, %4
  %1623 = add <16 x i32> %1622, %52
  %1624 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1623, i32 0)
  %1625 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1624), !noalias !20
  %1626 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1625, i32 0)
  %1627 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1624), !noalias !20
  %1628 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1626, <8 x i32> %1627, i32 1)
  %1629 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1623, i32 1)
  %1630 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1629), !noalias !20
  %1631 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1630, i32 0)
  %1632 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1629), !noalias !20
  %1633 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1631, <8 x i32> %1632, i32 1)
  %1634 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1628, <16 x i32> %1633, i32 24)
  %1635 = bitcast <16 x i32> %1634 to <32 x bfloat>
  %1636 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1635, i32 0)
  %1637 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1575, i32 0)
  %1638 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1637, <16 x bfloat> %106, i32 1)
  %1639 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1591, i32 0)
  %1640 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1639, <16 x bfloat> %106, i32 1)
  %1641 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1638, <32 x bfloat> %1640, i32 60)
  %1642 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %1641)
  %1643 = tail call noundef <8 x i64> @llvm.aie2.add.accfloat(<8 x i64> %1598, <8 x i64> %1641, i32 28)
  %1644 = load <16 x bfloat>, ptr %1601, align 32, !tbaa !2
  %1645 = bitcast <8 x i32> %1604 to <16 x i16>
  %1646 = getelementptr bfloat, ptr %0, i20 608
  %1647 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %1644, i32 8)
  %1648 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1647, <16 x i32> %15, i32 2)
  %1649 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1648, i32 0)
  %1650 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %1645, i32 0, i32 0)
  %1651 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1650, i32 6, i32 1)
  %1652 = add <16 x i32> %1651, %31
  %1653 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1652, i32 0)
  %1654 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1653), !noalias !15
  %1655 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1654, i32 0)
  %1656 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1653), !noalias !15
  %1657 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1655, <8 x i32> %1656, i32 1)
  %1658 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1652, i32 1)
  %1659 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1658), !noalias !15
  %1660 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1659, i32 0)
  %1661 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1658), !noalias !15
  %1662 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1660, <8 x i32> %1661, i32 1)
  %1663 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1657, <16 x i32> %1662, i32 24)
  %1664 = bitcast <16 x i32> %1663 to <32 x bfloat>
  %1665 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1664, i32 0)
  %1666 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1650, i32 -2, i32 1)
  %1667 = and <16 x i32> %1666, %4
  %1668 = add <16 x i32> %1667, %52
  %1669 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1668, i32 0)
  %1670 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1669), !noalias !20
  %1671 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1670, i32 0)
  %1672 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1669), !noalias !20
  %1673 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1671, <8 x i32> %1672, i32 1)
  %1674 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1668, i32 1)
  %1675 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1674), !noalias !20
  %1676 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1675, i32 0)
  %1677 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1674), !noalias !20
  %1678 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1676, <8 x i32> %1677, i32 1)
  %1679 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1673, <16 x i32> %1678, i32 24)
  %1680 = bitcast <16 x i32> %1679 to <32 x bfloat>
  %1681 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1680, i32 0)
  %1682 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1620, i32 0)
  %1683 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1682, <16 x bfloat> %106, i32 1)
  %1684 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1636, i32 0)
  %1685 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1684, <16 x bfloat> %106, i32 1)
  %1686 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1683, <32 x bfloat> %1685, i32 60)
  %1687 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %1686)
  %1688 = tail call noundef <8 x i64> @llvm.aie2.add.accfloat(<8 x i64> %1643, <8 x i64> %1686, i32 28)
  %1689 = load <16 x bfloat>, ptr %1646, align 32, !tbaa !2
  %1690 = bitcast <8 x i32> %1649 to <16 x i16>
  %1691 = getelementptr bfloat, ptr %0, i20 624
  %1692 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %1689, i32 8)
  %1693 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1692, <16 x i32> %15, i32 2)
  %1694 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1693, i32 0)
  %1695 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %1690, i32 0, i32 0)
  %1696 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1695, i32 6, i32 1)
  %1697 = add <16 x i32> %1696, %31
  %1698 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1697, i32 0)
  %1699 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1698), !noalias !15
  %1700 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1699, i32 0)
  %1701 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1698), !noalias !15
  %1702 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1700, <8 x i32> %1701, i32 1)
  %1703 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1697, i32 1)
  %1704 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1703), !noalias !15
  %1705 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1704, i32 0)
  %1706 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1703), !noalias !15
  %1707 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1705, <8 x i32> %1706, i32 1)
  %1708 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1702, <16 x i32> %1707, i32 24)
  %1709 = bitcast <16 x i32> %1708 to <32 x bfloat>
  %1710 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1709, i32 0)
  %1711 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1695, i32 -2, i32 1)
  %1712 = and <16 x i32> %1711, %4
  %1713 = add <16 x i32> %1712, %52
  %1714 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1713, i32 0)
  %1715 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1714), !noalias !20
  %1716 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1715, i32 0)
  %1717 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1714), !noalias !20
  %1718 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1716, <8 x i32> %1717, i32 1)
  %1719 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1713, i32 1)
  %1720 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1719), !noalias !20
  %1721 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1720, i32 0)
  %1722 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1719), !noalias !20
  %1723 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1721, <8 x i32> %1722, i32 1)
  %1724 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1718, <16 x i32> %1723, i32 24)
  %1725 = bitcast <16 x i32> %1724 to <32 x bfloat>
  %1726 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1725, i32 0)
  %1727 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1665, i32 0)
  %1728 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1727, <16 x bfloat> %106, i32 1)
  %1729 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1681, i32 0)
  %1730 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1729, <16 x bfloat> %106, i32 1)
  %1731 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1728, <32 x bfloat> %1730, i32 60)
  %1732 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %1731)
  %1733 = tail call noundef <8 x i64> @llvm.aie2.add.accfloat(<8 x i64> %1688, <8 x i64> %1731, i32 28)
  %1734 = load <16 x bfloat>, ptr %1691, align 32, !tbaa !2
  %1735 = bitcast <8 x i32> %1694 to <16 x i16>
  %1736 = getelementptr bfloat, ptr %0, i20 640
  %1737 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %1734, i32 8)
  %1738 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1737, <16 x i32> %15, i32 2)
  %1739 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1738, i32 0)
  %1740 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %1735, i32 0, i32 0)
  %1741 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1740, i32 6, i32 1)
  %1742 = add <16 x i32> %1741, %31
  %1743 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1742, i32 0)
  %1744 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1743), !noalias !15
  %1745 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1744, i32 0)
  %1746 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1743), !noalias !15
  %1747 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1745, <8 x i32> %1746, i32 1)
  %1748 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1742, i32 1)
  %1749 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1748), !noalias !15
  %1750 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1749, i32 0)
  %1751 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1748), !noalias !15
  %1752 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1750, <8 x i32> %1751, i32 1)
  %1753 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1747, <16 x i32> %1752, i32 24)
  %1754 = bitcast <16 x i32> %1753 to <32 x bfloat>
  %1755 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1754, i32 0)
  %1756 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1740, i32 -2, i32 1)
  %1757 = and <16 x i32> %1756, %4
  %1758 = add <16 x i32> %1757, %52
  %1759 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1758, i32 0)
  %1760 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1759), !noalias !20
  %1761 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1760, i32 0)
  %1762 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1759), !noalias !20
  %1763 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1761, <8 x i32> %1762, i32 1)
  %1764 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1758, i32 1)
  %1765 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1764), !noalias !20
  %1766 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1765, i32 0)
  %1767 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1764), !noalias !20
  %1768 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1766, <8 x i32> %1767, i32 1)
  %1769 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1763, <16 x i32> %1768, i32 24)
  %1770 = bitcast <16 x i32> %1769 to <32 x bfloat>
  %1771 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1770, i32 0)
  %1772 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1710, i32 0)
  %1773 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1772, <16 x bfloat> %106, i32 1)
  %1774 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1726, i32 0)
  %1775 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1774, <16 x bfloat> %106, i32 1)
  %1776 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1773, <32 x bfloat> %1775, i32 60)
  %1777 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %1776)
  %1778 = tail call noundef <8 x i64> @llvm.aie2.add.accfloat(<8 x i64> %1733, <8 x i64> %1776, i32 28)
  %1779 = load <16 x bfloat>, ptr %1736, align 32, !tbaa !2
  %1780 = bitcast <8 x i32> %1739 to <16 x i16>
  %1781 = getelementptr bfloat, ptr %0, i20 656
  %1782 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %1779, i32 8)
  %1783 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1782, <16 x i32> %15, i32 2)
  %1784 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1783, i32 0)
  %1785 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %1780, i32 0, i32 0)
  %1786 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1785, i32 6, i32 1)
  %1787 = add <16 x i32> %1786, %31
  %1788 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1787, i32 0)
  %1789 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1788), !noalias !15
  %1790 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1789, i32 0)
  %1791 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1788), !noalias !15
  %1792 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1790, <8 x i32> %1791, i32 1)
  %1793 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1787, i32 1)
  %1794 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1793), !noalias !15
  %1795 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1794, i32 0)
  %1796 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1793), !noalias !15
  %1797 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1795, <8 x i32> %1796, i32 1)
  %1798 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1792, <16 x i32> %1797, i32 24)
  %1799 = bitcast <16 x i32> %1798 to <32 x bfloat>
  %1800 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1799, i32 0)
  %1801 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1785, i32 -2, i32 1)
  %1802 = and <16 x i32> %1801, %4
  %1803 = add <16 x i32> %1802, %52
  %1804 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1803, i32 0)
  %1805 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1804), !noalias !20
  %1806 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1805, i32 0)
  %1807 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1804), !noalias !20
  %1808 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1806, <8 x i32> %1807, i32 1)
  %1809 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1803, i32 1)
  %1810 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1809), !noalias !20
  %1811 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1810, i32 0)
  %1812 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1809), !noalias !20
  %1813 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1811, <8 x i32> %1812, i32 1)
  %1814 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1808, <16 x i32> %1813, i32 24)
  %1815 = bitcast <16 x i32> %1814 to <32 x bfloat>
  %1816 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1815, i32 0)
  %1817 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1755, i32 0)
  %1818 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1817, <16 x bfloat> %106, i32 1)
  %1819 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1771, i32 0)
  %1820 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1819, <16 x bfloat> %106, i32 1)
  %1821 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1818, <32 x bfloat> %1820, i32 60)
  %1822 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %1821)
  %1823 = tail call noundef <8 x i64> @llvm.aie2.add.accfloat(<8 x i64> %1778, <8 x i64> %1821, i32 28)
  %1824 = load <16 x bfloat>, ptr %1781, align 32, !tbaa !2
  %1825 = bitcast <8 x i32> %1784 to <16 x i16>
  %1826 = getelementptr bfloat, ptr %0, i20 672
  %1827 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %1824, i32 8)
  %1828 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1827, <16 x i32> %15, i32 2)
  %1829 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1828, i32 0)
  %1830 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %1825, i32 0, i32 0)
  %1831 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1830, i32 6, i32 1)
  %1832 = add <16 x i32> %1831, %31
  %1833 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1832, i32 0)
  %1834 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1833), !noalias !15
  %1835 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1834, i32 0)
  %1836 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1833), !noalias !15
  %1837 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1835, <8 x i32> %1836, i32 1)
  %1838 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1832, i32 1)
  %1839 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1838), !noalias !15
  %1840 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1839, i32 0)
  %1841 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1838), !noalias !15
  %1842 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1840, <8 x i32> %1841, i32 1)
  %1843 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1837, <16 x i32> %1842, i32 24)
  %1844 = bitcast <16 x i32> %1843 to <32 x bfloat>
  %1845 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1844, i32 0)
  %1846 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1830, i32 -2, i32 1)
  %1847 = and <16 x i32> %1846, %4
  %1848 = add <16 x i32> %1847, %52
  %1849 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1848, i32 0)
  %1850 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1849), !noalias !20
  %1851 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1850, i32 0)
  %1852 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1849), !noalias !20
  %1853 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1851, <8 x i32> %1852, i32 1)
  %1854 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1848, i32 1)
  %1855 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1854), !noalias !20
  %1856 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1855, i32 0)
  %1857 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1854), !noalias !20
  %1858 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1856, <8 x i32> %1857, i32 1)
  %1859 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1853, <16 x i32> %1858, i32 24)
  %1860 = bitcast <16 x i32> %1859 to <32 x bfloat>
  %1861 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1860, i32 0)
  %1862 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1800, i32 0)
  %1863 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1862, <16 x bfloat> %106, i32 1)
  %1864 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1816, i32 0)
  %1865 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1864, <16 x bfloat> %106, i32 1)
  %1866 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1863, <32 x bfloat> %1865, i32 60)
  %1867 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %1866)
  %1868 = tail call noundef <8 x i64> @llvm.aie2.add.accfloat(<8 x i64> %1823, <8 x i64> %1866, i32 28)
  %1869 = load <16 x bfloat>, ptr %1826, align 32, !tbaa !2
  %1870 = bitcast <8 x i32> %1829 to <16 x i16>
  %1871 = getelementptr bfloat, ptr %0, i20 688
  %1872 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %1869, i32 8)
  %1873 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1872, <16 x i32> %15, i32 2)
  %1874 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1873, i32 0)
  %1875 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %1870, i32 0, i32 0)
  %1876 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1875, i32 6, i32 1)
  %1877 = add <16 x i32> %1876, %31
  %1878 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1877, i32 0)
  %1879 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1878), !noalias !15
  %1880 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1879, i32 0)
  %1881 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1878), !noalias !15
  %1882 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1880, <8 x i32> %1881, i32 1)
  %1883 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1877, i32 1)
  %1884 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1883), !noalias !15
  %1885 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1884, i32 0)
  %1886 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1883), !noalias !15
  %1887 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1885, <8 x i32> %1886, i32 1)
  %1888 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1882, <16 x i32> %1887, i32 24)
  %1889 = bitcast <16 x i32> %1888 to <32 x bfloat>
  %1890 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1889, i32 0)
  %1891 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1875, i32 -2, i32 1)
  %1892 = and <16 x i32> %1891, %4
  %1893 = add <16 x i32> %1892, %52
  %1894 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1893, i32 0)
  %1895 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1894), !noalias !20
  %1896 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1895, i32 0)
  %1897 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1894), !noalias !20
  %1898 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1896, <8 x i32> %1897, i32 1)
  %1899 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1893, i32 1)
  %1900 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1899), !noalias !20
  %1901 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1900, i32 0)
  %1902 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1899), !noalias !20
  %1903 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1901, <8 x i32> %1902, i32 1)
  %1904 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1898, <16 x i32> %1903, i32 24)
  %1905 = bitcast <16 x i32> %1904 to <32 x bfloat>
  %1906 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1905, i32 0)
  %1907 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1845, i32 0)
  %1908 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1907, <16 x bfloat> %106, i32 1)
  %1909 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1861, i32 0)
  %1910 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1909, <16 x bfloat> %106, i32 1)
  %1911 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1908, <32 x bfloat> %1910, i32 60)
  %1912 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %1911)
  %1913 = tail call noundef <8 x i64> @llvm.aie2.add.accfloat(<8 x i64> %1868, <8 x i64> %1911, i32 28)
  %1914 = load <16 x bfloat>, ptr %1871, align 32, !tbaa !2
  %1915 = bitcast <8 x i32> %1874 to <16 x i16>
  %1916 = getelementptr bfloat, ptr %0, i20 704
  %1917 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %1914, i32 8)
  %1918 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1917, <16 x i32> %15, i32 2)
  %1919 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1918, i32 0)
  %1920 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %1915, i32 0, i32 0)
  %1921 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1920, i32 6, i32 1)
  %1922 = add <16 x i32> %1921, %31
  %1923 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1922, i32 0)
  %1924 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1923), !noalias !15
  %1925 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1924, i32 0)
  %1926 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1923), !noalias !15
  %1927 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1925, <8 x i32> %1926, i32 1)
  %1928 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1922, i32 1)
  %1929 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1928), !noalias !15
  %1930 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1929, i32 0)
  %1931 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1928), !noalias !15
  %1932 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1930, <8 x i32> %1931, i32 1)
  %1933 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1927, <16 x i32> %1932, i32 24)
  %1934 = bitcast <16 x i32> %1933 to <32 x bfloat>
  %1935 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1934, i32 0)
  %1936 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1920, i32 -2, i32 1)
  %1937 = and <16 x i32> %1936, %4
  %1938 = add <16 x i32> %1937, %52
  %1939 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1938, i32 0)
  %1940 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1939), !noalias !20
  %1941 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1940, i32 0)
  %1942 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1939), !noalias !20
  %1943 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1941, <8 x i32> %1942, i32 1)
  %1944 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1938, i32 1)
  %1945 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1944), !noalias !20
  %1946 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1945, i32 0)
  %1947 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1944), !noalias !20
  %1948 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1946, <8 x i32> %1947, i32 1)
  %1949 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1943, <16 x i32> %1948, i32 24)
  %1950 = bitcast <16 x i32> %1949 to <32 x bfloat>
  %1951 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1950, i32 0)
  %1952 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1890, i32 0)
  %1953 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1952, <16 x bfloat> %106, i32 1)
  %1954 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1906, i32 0)
  %1955 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1954, <16 x bfloat> %106, i32 1)
  %1956 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1953, <32 x bfloat> %1955, i32 60)
  %1957 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %1956)
  %1958 = tail call noundef <8 x i64> @llvm.aie2.add.accfloat(<8 x i64> %1913, <8 x i64> %1956, i32 28)
  %1959 = load <16 x bfloat>, ptr %1916, align 32, !tbaa !2
  %1960 = bitcast <8 x i32> %1919 to <16 x i16>
  %1961 = getelementptr bfloat, ptr %0, i20 720
  %1962 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %1959, i32 8)
  %1963 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1962, <16 x i32> %15, i32 2)
  %1964 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1963, i32 0)
  %1965 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %1960, i32 0, i32 0)
  %1966 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1965, i32 6, i32 1)
  %1967 = add <16 x i32> %1966, %31
  %1968 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1967, i32 0)
  %1969 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1968), !noalias !15
  %1970 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1969, i32 0)
  %1971 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1968), !noalias !15
  %1972 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1970, <8 x i32> %1971, i32 1)
  %1973 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1967, i32 1)
  %1974 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1973), !noalias !15
  %1975 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1974, i32 0)
  %1976 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1973), !noalias !15
  %1977 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1975, <8 x i32> %1976, i32 1)
  %1978 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1972, <16 x i32> %1977, i32 24)
  %1979 = bitcast <16 x i32> %1978 to <32 x bfloat>
  %1980 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1979, i32 0)
  %1981 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %1965, i32 -2, i32 1)
  %1982 = and <16 x i32> %1981, %4
  %1983 = add <16 x i32> %1982, %52
  %1984 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1983, i32 0)
  %1985 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1984), !noalias !20
  %1986 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1985, i32 0)
  %1987 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1984), !noalias !20
  %1988 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1986, <8 x i32> %1987, i32 1)
  %1989 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %1983, i32 1)
  %1990 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %1989), !noalias !20
  %1991 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %1990, i32 0)
  %1992 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %1989), !noalias !20
  %1993 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %1991, <8 x i32> %1992, i32 1)
  %1994 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %1988, <16 x i32> %1993, i32 24)
  %1995 = bitcast <16 x i32> %1994 to <32 x bfloat>
  %1996 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %1995, i32 0)
  %1997 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1935, i32 0)
  %1998 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1997, <16 x bfloat> %106, i32 1)
  %1999 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1951, i32 0)
  %2000 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %1999, <16 x bfloat> %106, i32 1)
  %2001 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %1998, <32 x bfloat> %2000, i32 60)
  %2002 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %2001)
  %2003 = tail call noundef <8 x i64> @llvm.aie2.add.accfloat(<8 x i64> %1958, <8 x i64> %2001, i32 28)
  %2004 = load <16 x bfloat>, ptr %1961, align 32, !tbaa !2
  %2005 = bitcast <8 x i32> %1964 to <16 x i16>
  %2006 = getelementptr bfloat, ptr %0, i20 736
  %2007 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %2004, i32 8)
  %2008 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2007, <16 x i32> %15, i32 2)
  %2009 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2008, i32 0)
  %2010 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %2005, i32 0, i32 0)
  %2011 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2010, i32 6, i32 1)
  %2012 = add <16 x i32> %2011, %31
  %2013 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2012, i32 0)
  %2014 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2013), !noalias !15
  %2015 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2014, i32 0)
  %2016 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2013), !noalias !15
  %2017 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2015, <8 x i32> %2016, i32 1)
  %2018 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2012, i32 1)
  %2019 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2018), !noalias !15
  %2020 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2019, i32 0)
  %2021 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2018), !noalias !15
  %2022 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2020, <8 x i32> %2021, i32 1)
  %2023 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2017, <16 x i32> %2022, i32 24)
  %2024 = bitcast <16 x i32> %2023 to <32 x bfloat>
  %2025 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2024, i32 0)
  %2026 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2010, i32 -2, i32 1)
  %2027 = and <16 x i32> %2026, %4
  %2028 = add <16 x i32> %2027, %52
  %2029 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2028, i32 0)
  %2030 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2029), !noalias !20
  %2031 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2030, i32 0)
  %2032 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2029), !noalias !20
  %2033 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2031, <8 x i32> %2032, i32 1)
  %2034 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2028, i32 1)
  %2035 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2034), !noalias !20
  %2036 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2035, i32 0)
  %2037 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2034), !noalias !20
  %2038 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2036, <8 x i32> %2037, i32 1)
  %2039 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2033, <16 x i32> %2038, i32 24)
  %2040 = bitcast <16 x i32> %2039 to <32 x bfloat>
  %2041 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2040, i32 0)
  %2042 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1980, i32 0)
  %2043 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2042, <16 x bfloat> %106, i32 1)
  %2044 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %1996, i32 0)
  %2045 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2044, <16 x bfloat> %106, i32 1)
  %2046 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %2043, <32 x bfloat> %2045, i32 60)
  %2047 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %2046)
  %2048 = tail call noundef <8 x i64> @llvm.aie2.add.accfloat(<8 x i64> %2003, <8 x i64> %2046, i32 28)
  %2049 = load <16 x bfloat>, ptr %2006, align 32, !tbaa !2
  %2050 = bitcast <8 x i32> %2009 to <16 x i16>
  %2051 = getelementptr bfloat, ptr %0, i20 752
  %2052 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %2049, i32 8)
  %2053 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2052, <16 x i32> %15, i32 2)
  %2054 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2053, i32 0)
  %2055 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %2050, i32 0, i32 0)
  %2056 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2055, i32 6, i32 1)
  %2057 = add <16 x i32> %2056, %31
  %2058 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2057, i32 0)
  %2059 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2058), !noalias !15
  %2060 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2059, i32 0)
  %2061 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2058), !noalias !15
  %2062 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2060, <8 x i32> %2061, i32 1)
  %2063 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2057, i32 1)
  %2064 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2063), !noalias !15
  %2065 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2064, i32 0)
  %2066 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2063), !noalias !15
  %2067 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2065, <8 x i32> %2066, i32 1)
  %2068 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2062, <16 x i32> %2067, i32 24)
  %2069 = bitcast <16 x i32> %2068 to <32 x bfloat>
  %2070 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2069, i32 0)
  %2071 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2055, i32 -2, i32 1)
  %2072 = and <16 x i32> %2071, %4
  %2073 = add <16 x i32> %2072, %52
  %2074 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2073, i32 0)
  %2075 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2074), !noalias !20
  %2076 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2075, i32 0)
  %2077 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2074), !noalias !20
  %2078 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2076, <8 x i32> %2077, i32 1)
  %2079 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2073, i32 1)
  %2080 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2079), !noalias !20
  %2081 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2080, i32 0)
  %2082 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2079), !noalias !20
  %2083 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2081, <8 x i32> %2082, i32 1)
  %2084 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2078, <16 x i32> %2083, i32 24)
  %2085 = bitcast <16 x i32> %2084 to <32 x bfloat>
  %2086 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2085, i32 0)
  %2087 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2025, i32 0)
  %2088 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2087, <16 x bfloat> %106, i32 1)
  %2089 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2041, i32 0)
  %2090 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2089, <16 x bfloat> %106, i32 1)
  %2091 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %2088, <32 x bfloat> %2090, i32 60)
  %2092 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %2091)
  %2093 = tail call noundef <8 x i64> @llvm.aie2.add.accfloat(<8 x i64> %2048, <8 x i64> %2091, i32 28)
  %2094 = load <16 x bfloat>, ptr %2051, align 32, !tbaa !2
  %2095 = bitcast <8 x i32> %2054 to <16 x i16>
  %2096 = getelementptr bfloat, ptr %0, i20 768
  %2097 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %2094, i32 8)
  %2098 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2097, <16 x i32> %15, i32 2)
  %2099 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2098, i32 0)
  %2100 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %2095, i32 0, i32 0)
  %2101 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2100, i32 6, i32 1)
  %2102 = add <16 x i32> %2101, %31
  %2103 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2102, i32 0)
  %2104 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2103), !noalias !15
  %2105 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2104, i32 0)
  %2106 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2103), !noalias !15
  %2107 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2105, <8 x i32> %2106, i32 1)
  %2108 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2102, i32 1)
  %2109 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2108), !noalias !15
  %2110 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2109, i32 0)
  %2111 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2108), !noalias !15
  %2112 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2110, <8 x i32> %2111, i32 1)
  %2113 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2107, <16 x i32> %2112, i32 24)
  %2114 = bitcast <16 x i32> %2113 to <32 x bfloat>
  %2115 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2114, i32 0)
  %2116 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2100, i32 -2, i32 1)
  %2117 = and <16 x i32> %2116, %4
  %2118 = add <16 x i32> %2117, %52
  %2119 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2118, i32 0)
  %2120 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2119), !noalias !20
  %2121 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2120, i32 0)
  %2122 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2119), !noalias !20
  %2123 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2121, <8 x i32> %2122, i32 1)
  %2124 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2118, i32 1)
  %2125 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2124), !noalias !20
  %2126 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2125, i32 0)
  %2127 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2124), !noalias !20
  %2128 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2126, <8 x i32> %2127, i32 1)
  %2129 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2123, <16 x i32> %2128, i32 24)
  %2130 = bitcast <16 x i32> %2129 to <32 x bfloat>
  %2131 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2130, i32 0)
  %2132 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2070, i32 0)
  %2133 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2132, <16 x bfloat> %106, i32 1)
  %2134 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2086, i32 0)
  %2135 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2134, <16 x bfloat> %106, i32 1)
  %2136 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %2133, <32 x bfloat> %2135, i32 60)
  %2137 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %2136)
  %2138 = tail call noundef <8 x i64> @llvm.aie2.add.accfloat(<8 x i64> %2093, <8 x i64> %2136, i32 28)
  %2139 = load <16 x bfloat>, ptr %2096, align 32, !tbaa !2
  %2140 = bitcast <8 x i32> %2099 to <16 x i16>
  %2141 = getelementptr bfloat, ptr %0, i20 784
  %2142 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %2139, i32 8)
  %2143 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2142, <16 x i32> %15, i32 2)
  %2144 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2143, i32 0)
  %2145 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %2140, i32 0, i32 0)
  %2146 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2145, i32 6, i32 1)
  %2147 = add <16 x i32> %2146, %31
  %2148 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2147, i32 0)
  %2149 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2148), !noalias !15
  %2150 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2149, i32 0)
  %2151 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2148), !noalias !15
  %2152 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2150, <8 x i32> %2151, i32 1)
  %2153 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2147, i32 1)
  %2154 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2153), !noalias !15
  %2155 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2154, i32 0)
  %2156 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2153), !noalias !15
  %2157 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2155, <8 x i32> %2156, i32 1)
  %2158 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2152, <16 x i32> %2157, i32 24)
  %2159 = bitcast <16 x i32> %2158 to <32 x bfloat>
  %2160 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2159, i32 0)
  %2161 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2145, i32 -2, i32 1)
  %2162 = and <16 x i32> %2161, %4
  %2163 = add <16 x i32> %2162, %52
  %2164 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2163, i32 0)
  %2165 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2164), !noalias !20
  %2166 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2165, i32 0)
  %2167 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2164), !noalias !20
  %2168 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2166, <8 x i32> %2167, i32 1)
  %2169 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2163, i32 1)
  %2170 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2169), !noalias !20
  %2171 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2170, i32 0)
  %2172 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2169), !noalias !20
  %2173 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2171, <8 x i32> %2172, i32 1)
  %2174 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2168, <16 x i32> %2173, i32 24)
  %2175 = bitcast <16 x i32> %2174 to <32 x bfloat>
  %2176 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2175, i32 0)
  %2177 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2115, i32 0)
  %2178 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2177, <16 x bfloat> %106, i32 1)
  %2179 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2131, i32 0)
  %2180 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2179, <16 x bfloat> %106, i32 1)
  %2181 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %2178, <32 x bfloat> %2180, i32 60)
  %2182 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %2181)
  %2183 = tail call noundef <8 x i64> @llvm.aie2.add.accfloat(<8 x i64> %2138, <8 x i64> %2181, i32 28)
  %2184 = load <16 x bfloat>, ptr %2141, align 32, !tbaa !2
  %2185 = bitcast <8 x i32> %2144 to <16 x i16>
  %2186 = getelementptr bfloat, ptr %0, i20 800
  %2187 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %2184, i32 8)
  %2188 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2187, <16 x i32> %15, i32 2)
  %2189 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2188, i32 0)
  %2190 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %2185, i32 0, i32 0)
  %2191 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2190, i32 6, i32 1)
  %2192 = add <16 x i32> %2191, %31
  %2193 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2192, i32 0)
  %2194 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2193), !noalias !15
  %2195 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2194, i32 0)
  %2196 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2193), !noalias !15
  %2197 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2195, <8 x i32> %2196, i32 1)
  %2198 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2192, i32 1)
  %2199 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2198), !noalias !15
  %2200 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2199, i32 0)
  %2201 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2198), !noalias !15
  %2202 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2200, <8 x i32> %2201, i32 1)
  %2203 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2197, <16 x i32> %2202, i32 24)
  %2204 = bitcast <16 x i32> %2203 to <32 x bfloat>
  %2205 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2204, i32 0)
  %2206 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2190, i32 -2, i32 1)
  %2207 = and <16 x i32> %2206, %4
  %2208 = add <16 x i32> %2207, %52
  %2209 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2208, i32 0)
  %2210 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2209), !noalias !20
  %2211 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2210, i32 0)
  %2212 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2209), !noalias !20
  %2213 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2211, <8 x i32> %2212, i32 1)
  %2214 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2208, i32 1)
  %2215 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2214), !noalias !20
  %2216 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2215, i32 0)
  %2217 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2214), !noalias !20
  %2218 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2216, <8 x i32> %2217, i32 1)
  %2219 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2213, <16 x i32> %2218, i32 24)
  %2220 = bitcast <16 x i32> %2219 to <32 x bfloat>
  %2221 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2220, i32 0)
  %2222 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2160, i32 0)
  %2223 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2222, <16 x bfloat> %106, i32 1)
  %2224 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2176, i32 0)
  %2225 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2224, <16 x bfloat> %106, i32 1)
  %2226 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %2223, <32 x bfloat> %2225, i32 60)
  %2227 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %2226)
  %2228 = tail call noundef <8 x i64> @llvm.aie2.add.accfloat(<8 x i64> %2183, <8 x i64> %2226, i32 28)
  %2229 = load <16 x bfloat>, ptr %2186, align 32, !tbaa !2
  %2230 = bitcast <8 x i32> %2189 to <16 x i16>
  %2231 = getelementptr bfloat, ptr %0, i20 816
  %2232 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %2229, i32 8)
  %2233 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2232, <16 x i32> %15, i32 2)
  %2234 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2233, i32 0)
  %2235 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %2230, i32 0, i32 0)
  %2236 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2235, i32 6, i32 1)
  %2237 = add <16 x i32> %2236, %31
  %2238 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2237, i32 0)
  %2239 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2238), !noalias !15
  %2240 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2239, i32 0)
  %2241 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2238), !noalias !15
  %2242 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2240, <8 x i32> %2241, i32 1)
  %2243 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2237, i32 1)
  %2244 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2243), !noalias !15
  %2245 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2244, i32 0)
  %2246 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2243), !noalias !15
  %2247 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2245, <8 x i32> %2246, i32 1)
  %2248 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2242, <16 x i32> %2247, i32 24)
  %2249 = bitcast <16 x i32> %2248 to <32 x bfloat>
  %2250 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2249, i32 0)
  %2251 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2235, i32 -2, i32 1)
  %2252 = and <16 x i32> %2251, %4
  %2253 = add <16 x i32> %2252, %52
  %2254 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2253, i32 0)
  %2255 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2254), !noalias !20
  %2256 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2255, i32 0)
  %2257 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2254), !noalias !20
  %2258 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2256, <8 x i32> %2257, i32 1)
  %2259 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2253, i32 1)
  %2260 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2259), !noalias !20
  %2261 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2260, i32 0)
  %2262 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2259), !noalias !20
  %2263 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2261, <8 x i32> %2262, i32 1)
  %2264 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2258, <16 x i32> %2263, i32 24)
  %2265 = bitcast <16 x i32> %2264 to <32 x bfloat>
  %2266 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2265, i32 0)
  %2267 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2205, i32 0)
  %2268 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2267, <16 x bfloat> %106, i32 1)
  %2269 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2221, i32 0)
  %2270 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2269, <16 x bfloat> %106, i32 1)
  %2271 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %2268, <32 x bfloat> %2270, i32 60)
  %2272 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %2271)
  %2273 = tail call noundef <8 x i64> @llvm.aie2.add.accfloat(<8 x i64> %2228, <8 x i64> %2271, i32 28)
  %2274 = load <16 x bfloat>, ptr %2231, align 32, !tbaa !2
  %2275 = bitcast <8 x i32> %2234 to <16 x i16>
  %2276 = getelementptr bfloat, ptr %0, i20 832
  %2277 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %2274, i32 8)
  %2278 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2277, <16 x i32> %15, i32 2)
  %2279 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2278, i32 0)
  %2280 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %2275, i32 0, i32 0)
  %2281 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2280, i32 6, i32 1)
  %2282 = add <16 x i32> %2281, %31
  %2283 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2282, i32 0)
  %2284 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2283), !noalias !15
  %2285 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2284, i32 0)
  %2286 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2283), !noalias !15
  %2287 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2285, <8 x i32> %2286, i32 1)
  %2288 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2282, i32 1)
  %2289 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2288), !noalias !15
  %2290 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2289, i32 0)
  %2291 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2288), !noalias !15
  %2292 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2290, <8 x i32> %2291, i32 1)
  %2293 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2287, <16 x i32> %2292, i32 24)
  %2294 = bitcast <16 x i32> %2293 to <32 x bfloat>
  %2295 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2294, i32 0)
  %2296 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2280, i32 -2, i32 1)
  %2297 = and <16 x i32> %2296, %4
  %2298 = add <16 x i32> %2297, %52
  %2299 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2298, i32 0)
  %2300 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2299), !noalias !20
  %2301 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2300, i32 0)
  %2302 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2299), !noalias !20
  %2303 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2301, <8 x i32> %2302, i32 1)
  %2304 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2298, i32 1)
  %2305 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2304), !noalias !20
  %2306 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2305, i32 0)
  %2307 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2304), !noalias !20
  %2308 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2306, <8 x i32> %2307, i32 1)
  %2309 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2303, <16 x i32> %2308, i32 24)
  %2310 = bitcast <16 x i32> %2309 to <32 x bfloat>
  %2311 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2310, i32 0)
  %2312 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2250, i32 0)
  %2313 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2312, <16 x bfloat> %106, i32 1)
  %2314 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2266, i32 0)
  %2315 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2314, <16 x bfloat> %106, i32 1)
  %2316 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %2313, <32 x bfloat> %2315, i32 60)
  %2317 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %2316)
  %2318 = tail call noundef <8 x i64> @llvm.aie2.add.accfloat(<8 x i64> %2273, <8 x i64> %2316, i32 28)
  %2319 = load <16 x bfloat>, ptr %2276, align 32, !tbaa !2
  %2320 = bitcast <8 x i32> %2279 to <16 x i16>
  %2321 = getelementptr bfloat, ptr %0, i20 848
  %2322 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %2319, i32 8)
  %2323 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2322, <16 x i32> %15, i32 2)
  %2324 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2323, i32 0)
  %2325 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %2320, i32 0, i32 0)
  %2326 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2325, i32 6, i32 1)
  %2327 = add <16 x i32> %2326, %31
  %2328 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2327, i32 0)
  %2329 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2328), !noalias !15
  %2330 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2329, i32 0)
  %2331 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2328), !noalias !15
  %2332 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2330, <8 x i32> %2331, i32 1)
  %2333 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2327, i32 1)
  %2334 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2333), !noalias !15
  %2335 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2334, i32 0)
  %2336 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2333), !noalias !15
  %2337 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2335, <8 x i32> %2336, i32 1)
  %2338 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2332, <16 x i32> %2337, i32 24)
  %2339 = bitcast <16 x i32> %2338 to <32 x bfloat>
  %2340 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2339, i32 0)
  %2341 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2325, i32 -2, i32 1)
  %2342 = and <16 x i32> %2341, %4
  %2343 = add <16 x i32> %2342, %52
  %2344 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2343, i32 0)
  %2345 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2344), !noalias !20
  %2346 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2345, i32 0)
  %2347 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2344), !noalias !20
  %2348 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2346, <8 x i32> %2347, i32 1)
  %2349 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2343, i32 1)
  %2350 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2349), !noalias !20
  %2351 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2350, i32 0)
  %2352 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2349), !noalias !20
  %2353 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2351, <8 x i32> %2352, i32 1)
  %2354 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2348, <16 x i32> %2353, i32 24)
  %2355 = bitcast <16 x i32> %2354 to <32 x bfloat>
  %2356 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2355, i32 0)
  %2357 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2295, i32 0)
  %2358 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2357, <16 x bfloat> %106, i32 1)
  %2359 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2311, i32 0)
  %2360 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2359, <16 x bfloat> %106, i32 1)
  %2361 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %2358, <32 x bfloat> %2360, i32 60)
  %2362 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %2361)
  %2363 = tail call noundef <8 x i64> @llvm.aie2.add.accfloat(<8 x i64> %2318, <8 x i64> %2361, i32 28)
  %2364 = load <16 x bfloat>, ptr %2321, align 32, !tbaa !2
  %2365 = bitcast <8 x i32> %2324 to <16 x i16>
  %2366 = getelementptr bfloat, ptr %0, i20 864
  %2367 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %2364, i32 8)
  %2368 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2367, <16 x i32> %15, i32 2)
  %2369 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2368, i32 0)
  %2370 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %2365, i32 0, i32 0)
  %2371 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2370, i32 6, i32 1)
  %2372 = add <16 x i32> %2371, %31
  %2373 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2372, i32 0)
  %2374 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2373), !noalias !15
  %2375 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2374, i32 0)
  %2376 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2373), !noalias !15
  %2377 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2375, <8 x i32> %2376, i32 1)
  %2378 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2372, i32 1)
  %2379 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2378), !noalias !15
  %2380 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2379, i32 0)
  %2381 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2378), !noalias !15
  %2382 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2380, <8 x i32> %2381, i32 1)
  %2383 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2377, <16 x i32> %2382, i32 24)
  %2384 = bitcast <16 x i32> %2383 to <32 x bfloat>
  %2385 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2384, i32 0)
  %2386 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2370, i32 -2, i32 1)
  %2387 = and <16 x i32> %2386, %4
  %2388 = add <16 x i32> %2387, %52
  %2389 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2388, i32 0)
  %2390 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2389), !noalias !20
  %2391 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2390, i32 0)
  %2392 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2389), !noalias !20
  %2393 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2391, <8 x i32> %2392, i32 1)
  %2394 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2388, i32 1)
  %2395 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2394), !noalias !20
  %2396 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2395, i32 0)
  %2397 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2394), !noalias !20
  %2398 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2396, <8 x i32> %2397, i32 1)
  %2399 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2393, <16 x i32> %2398, i32 24)
  %2400 = bitcast <16 x i32> %2399 to <32 x bfloat>
  %2401 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2400, i32 0)
  %2402 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2340, i32 0)
  %2403 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2402, <16 x bfloat> %106, i32 1)
  %2404 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2356, i32 0)
  %2405 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2404, <16 x bfloat> %106, i32 1)
  %2406 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %2403, <32 x bfloat> %2405, i32 60)
  %2407 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %2406)
  %2408 = tail call noundef <8 x i64> @llvm.aie2.add.accfloat(<8 x i64> %2363, <8 x i64> %2406, i32 28)
  %2409 = load <16 x bfloat>, ptr %2366, align 32, !tbaa !2
  %2410 = bitcast <8 x i32> %2369 to <16 x i16>
  %2411 = getelementptr bfloat, ptr %0, i20 880
  %2412 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %2409, i32 8)
  %2413 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2412, <16 x i32> %15, i32 2)
  %2414 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2413, i32 0)
  %2415 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %2410, i32 0, i32 0)
  %2416 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2415, i32 6, i32 1)
  %2417 = add <16 x i32> %2416, %31
  %2418 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2417, i32 0)
  %2419 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2418), !noalias !15
  %2420 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2419, i32 0)
  %2421 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2418), !noalias !15
  %2422 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2420, <8 x i32> %2421, i32 1)
  %2423 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2417, i32 1)
  %2424 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2423), !noalias !15
  %2425 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2424, i32 0)
  %2426 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2423), !noalias !15
  %2427 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2425, <8 x i32> %2426, i32 1)
  %2428 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2422, <16 x i32> %2427, i32 24)
  %2429 = bitcast <16 x i32> %2428 to <32 x bfloat>
  %2430 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2429, i32 0)
  %2431 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2415, i32 -2, i32 1)
  %2432 = and <16 x i32> %2431, %4
  %2433 = add <16 x i32> %2432, %52
  %2434 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2433, i32 0)
  %2435 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2434), !noalias !20
  %2436 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2435, i32 0)
  %2437 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2434), !noalias !20
  %2438 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2436, <8 x i32> %2437, i32 1)
  %2439 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2433, i32 1)
  %2440 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2439), !noalias !20
  %2441 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2440, i32 0)
  %2442 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2439), !noalias !20
  %2443 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2441, <8 x i32> %2442, i32 1)
  %2444 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2438, <16 x i32> %2443, i32 24)
  %2445 = bitcast <16 x i32> %2444 to <32 x bfloat>
  %2446 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2445, i32 0)
  %2447 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2385, i32 0)
  %2448 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2447, <16 x bfloat> %106, i32 1)
  %2449 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2401, i32 0)
  %2450 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2449, <16 x bfloat> %106, i32 1)
  %2451 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %2448, <32 x bfloat> %2450, i32 60)
  %2452 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %2451)
  %2453 = tail call noundef <8 x i64> @llvm.aie2.add.accfloat(<8 x i64> %2408, <8 x i64> %2451, i32 28)
  %2454 = load <16 x bfloat>, ptr %2411, align 32, !tbaa !2
  %2455 = bitcast <8 x i32> %2414 to <16 x i16>
  %2456 = getelementptr bfloat, ptr %0, i20 896
  %2457 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %2454, i32 8)
  %2458 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2457, <16 x i32> %15, i32 2)
  %2459 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2458, i32 0)
  %2460 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %2455, i32 0, i32 0)
  %2461 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2460, i32 6, i32 1)
  %2462 = add <16 x i32> %2461, %31
  %2463 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2462, i32 0)
  %2464 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2463), !noalias !15
  %2465 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2464, i32 0)
  %2466 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2463), !noalias !15
  %2467 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2465, <8 x i32> %2466, i32 1)
  %2468 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2462, i32 1)
  %2469 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2468), !noalias !15
  %2470 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2469, i32 0)
  %2471 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2468), !noalias !15
  %2472 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2470, <8 x i32> %2471, i32 1)
  %2473 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2467, <16 x i32> %2472, i32 24)
  %2474 = bitcast <16 x i32> %2473 to <32 x bfloat>
  %2475 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2474, i32 0)
  %2476 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2460, i32 -2, i32 1)
  %2477 = and <16 x i32> %2476, %4
  %2478 = add <16 x i32> %2477, %52
  %2479 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2478, i32 0)
  %2480 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2479), !noalias !20
  %2481 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2480, i32 0)
  %2482 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2479), !noalias !20
  %2483 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2481, <8 x i32> %2482, i32 1)
  %2484 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2478, i32 1)
  %2485 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2484), !noalias !20
  %2486 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2485, i32 0)
  %2487 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2484), !noalias !20
  %2488 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2486, <8 x i32> %2487, i32 1)
  %2489 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2483, <16 x i32> %2488, i32 24)
  %2490 = bitcast <16 x i32> %2489 to <32 x bfloat>
  %2491 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2490, i32 0)
  %2492 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2430, i32 0)
  %2493 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2492, <16 x bfloat> %106, i32 1)
  %2494 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2446, i32 0)
  %2495 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2494, <16 x bfloat> %106, i32 1)
  %2496 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %2493, <32 x bfloat> %2495, i32 60)
  %2497 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %2496)
  %2498 = tail call noundef <8 x i64> @llvm.aie2.add.accfloat(<8 x i64> %2453, <8 x i64> %2496, i32 28)
  %2499 = load <16 x bfloat>, ptr %2456, align 32, !tbaa !2
  %2500 = bitcast <8 x i32> %2459 to <16 x i16>
  %2501 = getelementptr bfloat, ptr %0, i20 912
  %2502 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %2499, i32 8)
  %2503 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2502, <16 x i32> %15, i32 2)
  %2504 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2503, i32 0)
  %2505 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %2500, i32 0, i32 0)
  %2506 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2505, i32 6, i32 1)
  %2507 = add <16 x i32> %2506, %31
  %2508 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2507, i32 0)
  %2509 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2508), !noalias !15
  %2510 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2509, i32 0)
  %2511 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2508), !noalias !15
  %2512 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2510, <8 x i32> %2511, i32 1)
  %2513 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2507, i32 1)
  %2514 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2513), !noalias !15
  %2515 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2514, i32 0)
  %2516 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2513), !noalias !15
  %2517 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2515, <8 x i32> %2516, i32 1)
  %2518 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2512, <16 x i32> %2517, i32 24)
  %2519 = bitcast <16 x i32> %2518 to <32 x bfloat>
  %2520 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2519, i32 0)
  %2521 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2505, i32 -2, i32 1)
  %2522 = and <16 x i32> %2521, %4
  %2523 = add <16 x i32> %2522, %52
  %2524 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2523, i32 0)
  %2525 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2524), !noalias !20
  %2526 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2525, i32 0)
  %2527 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2524), !noalias !20
  %2528 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2526, <8 x i32> %2527, i32 1)
  %2529 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2523, i32 1)
  %2530 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2529), !noalias !20
  %2531 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2530, i32 0)
  %2532 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2529), !noalias !20
  %2533 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2531, <8 x i32> %2532, i32 1)
  %2534 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2528, <16 x i32> %2533, i32 24)
  %2535 = bitcast <16 x i32> %2534 to <32 x bfloat>
  %2536 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2535, i32 0)
  %2537 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2475, i32 0)
  %2538 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2537, <16 x bfloat> %106, i32 1)
  %2539 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2491, i32 0)
  %2540 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2539, <16 x bfloat> %106, i32 1)
  %2541 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %2538, <32 x bfloat> %2540, i32 60)
  %2542 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %2541)
  %2543 = tail call noundef <8 x i64> @llvm.aie2.add.accfloat(<8 x i64> %2498, <8 x i64> %2541, i32 28)
  %2544 = load <16 x bfloat>, ptr %2501, align 32, !tbaa !2
  %2545 = bitcast <8 x i32> %2504 to <16 x i16>
  %2546 = getelementptr bfloat, ptr %0, i20 928
  %2547 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %2544, i32 8)
  %2548 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2547, <16 x i32> %15, i32 2)
  %2549 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2548, i32 0)
  %2550 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %2545, i32 0, i32 0)
  %2551 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2550, i32 6, i32 1)
  %2552 = add <16 x i32> %2551, %31
  %2553 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2552, i32 0)
  %2554 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2553), !noalias !15
  %2555 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2554, i32 0)
  %2556 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2553), !noalias !15
  %2557 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2555, <8 x i32> %2556, i32 1)
  %2558 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2552, i32 1)
  %2559 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2558), !noalias !15
  %2560 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2559, i32 0)
  %2561 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2558), !noalias !15
  %2562 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2560, <8 x i32> %2561, i32 1)
  %2563 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2557, <16 x i32> %2562, i32 24)
  %2564 = bitcast <16 x i32> %2563 to <32 x bfloat>
  %2565 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2564, i32 0)
  %2566 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2550, i32 -2, i32 1)
  %2567 = and <16 x i32> %2566, %4
  %2568 = add <16 x i32> %2567, %52
  %2569 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2568, i32 0)
  %2570 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2569), !noalias !20
  %2571 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2570, i32 0)
  %2572 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2569), !noalias !20
  %2573 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2571, <8 x i32> %2572, i32 1)
  %2574 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2568, i32 1)
  %2575 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2574), !noalias !20
  %2576 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2575, i32 0)
  %2577 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2574), !noalias !20
  %2578 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2576, <8 x i32> %2577, i32 1)
  %2579 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2573, <16 x i32> %2578, i32 24)
  %2580 = bitcast <16 x i32> %2579 to <32 x bfloat>
  %2581 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2580, i32 0)
  %2582 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2520, i32 0)
  %2583 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2582, <16 x bfloat> %106, i32 1)
  %2584 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2536, i32 0)
  %2585 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2584, <16 x bfloat> %106, i32 1)
  %2586 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %2583, <32 x bfloat> %2585, i32 60)
  %2587 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %2586)
  %2588 = tail call noundef <8 x i64> @llvm.aie2.add.accfloat(<8 x i64> %2543, <8 x i64> %2586, i32 28)
  %2589 = load <16 x bfloat>, ptr %2546, align 32, !tbaa !2
  %2590 = bitcast <8 x i32> %2549 to <16 x i16>
  %2591 = getelementptr bfloat, ptr %0, i20 944
  %2592 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %2589, i32 8)
  %2593 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2592, <16 x i32> %15, i32 2)
  %2594 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2593, i32 0)
  %2595 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %2590, i32 0, i32 0)
  %2596 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2595, i32 6, i32 1)
  %2597 = add <16 x i32> %2596, %31
  %2598 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2597, i32 0)
  %2599 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2598), !noalias !15
  %2600 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2599, i32 0)
  %2601 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2598), !noalias !15
  %2602 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2600, <8 x i32> %2601, i32 1)
  %2603 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2597, i32 1)
  %2604 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2603), !noalias !15
  %2605 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2604, i32 0)
  %2606 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2603), !noalias !15
  %2607 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2605, <8 x i32> %2606, i32 1)
  %2608 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2602, <16 x i32> %2607, i32 24)
  %2609 = bitcast <16 x i32> %2608 to <32 x bfloat>
  %2610 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2609, i32 0)
  %2611 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2595, i32 -2, i32 1)
  %2612 = and <16 x i32> %2611, %4
  %2613 = add <16 x i32> %2612, %52
  %2614 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2613, i32 0)
  %2615 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2614), !noalias !20
  %2616 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2615, i32 0)
  %2617 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2614), !noalias !20
  %2618 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2616, <8 x i32> %2617, i32 1)
  %2619 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2613, i32 1)
  %2620 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2619), !noalias !20
  %2621 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2620, i32 0)
  %2622 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2619), !noalias !20
  %2623 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2621, <8 x i32> %2622, i32 1)
  %2624 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2618, <16 x i32> %2623, i32 24)
  %2625 = bitcast <16 x i32> %2624 to <32 x bfloat>
  %2626 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2625, i32 0)
  %2627 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2565, i32 0)
  %2628 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2627, <16 x bfloat> %106, i32 1)
  %2629 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2581, i32 0)
  %2630 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2629, <16 x bfloat> %106, i32 1)
  %2631 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %2628, <32 x bfloat> %2630, i32 60)
  %2632 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %2631)
  %2633 = tail call noundef <8 x i64> @llvm.aie2.add.accfloat(<8 x i64> %2588, <8 x i64> %2631, i32 28)
  %2634 = load <16 x bfloat>, ptr %2591, align 32, !tbaa !2
  %2635 = bitcast <8 x i32> %2594 to <16 x i16>
  %2636 = getelementptr bfloat, ptr %0, i20 960
  %2637 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %2634, i32 8)
  %2638 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2637, <16 x i32> %15, i32 2)
  %2639 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2638, i32 0)
  %2640 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %2635, i32 0, i32 0)
  %2641 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2640, i32 6, i32 1)
  %2642 = add <16 x i32> %2641, %31
  %2643 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2642, i32 0)
  %2644 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2643), !noalias !15
  %2645 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2644, i32 0)
  %2646 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2643), !noalias !15
  %2647 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2645, <8 x i32> %2646, i32 1)
  %2648 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2642, i32 1)
  %2649 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2648), !noalias !15
  %2650 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2649, i32 0)
  %2651 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2648), !noalias !15
  %2652 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2650, <8 x i32> %2651, i32 1)
  %2653 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2647, <16 x i32> %2652, i32 24)
  %2654 = bitcast <16 x i32> %2653 to <32 x bfloat>
  %2655 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2654, i32 0)
  %2656 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2640, i32 -2, i32 1)
  %2657 = and <16 x i32> %2656, %4
  %2658 = add <16 x i32> %2657, %52
  %2659 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2658, i32 0)
  %2660 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2659), !noalias !20
  %2661 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2660, i32 0)
  %2662 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2659), !noalias !20
  %2663 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2661, <8 x i32> %2662, i32 1)
  %2664 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2658, i32 1)
  %2665 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2664), !noalias !20
  %2666 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2665, i32 0)
  %2667 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2664), !noalias !20
  %2668 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2666, <8 x i32> %2667, i32 1)
  %2669 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2663, <16 x i32> %2668, i32 24)
  %2670 = bitcast <16 x i32> %2669 to <32 x bfloat>
  %2671 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2670, i32 0)
  %2672 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2610, i32 0)
  %2673 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2672, <16 x bfloat> %106, i32 1)
  %2674 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2626, i32 0)
  %2675 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2674, <16 x bfloat> %106, i32 1)
  %2676 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %2673, <32 x bfloat> %2675, i32 60)
  %2677 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %2676)
  %2678 = tail call noundef <8 x i64> @llvm.aie2.add.accfloat(<8 x i64> %2633, <8 x i64> %2676, i32 28)
  %2679 = load <16 x bfloat>, ptr %2636, align 32, !tbaa !2
  %2680 = bitcast <8 x i32> %2639 to <16 x i16>
  %2681 = getelementptr bfloat, ptr %0, i20 976
  %2682 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %2679, i32 8)
  %2683 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2682, <16 x i32> %15, i32 2)
  %2684 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2683, i32 0)
  %2685 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %2680, i32 0, i32 0)
  %2686 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2685, i32 6, i32 1)
  %2687 = add <16 x i32> %2686, %31
  %2688 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2687, i32 0)
  %2689 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2688), !noalias !15
  %2690 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2689, i32 0)
  %2691 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2688), !noalias !15
  %2692 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2690, <8 x i32> %2691, i32 1)
  %2693 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2687, i32 1)
  %2694 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2693), !noalias !15
  %2695 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2694, i32 0)
  %2696 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2693), !noalias !15
  %2697 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2695, <8 x i32> %2696, i32 1)
  %2698 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2692, <16 x i32> %2697, i32 24)
  %2699 = bitcast <16 x i32> %2698 to <32 x bfloat>
  %2700 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2699, i32 0)
  %2701 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2685, i32 -2, i32 1)
  %2702 = and <16 x i32> %2701, %4
  %2703 = add <16 x i32> %2702, %52
  %2704 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2703, i32 0)
  %2705 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2704), !noalias !20
  %2706 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2705, i32 0)
  %2707 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2704), !noalias !20
  %2708 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2706, <8 x i32> %2707, i32 1)
  %2709 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2703, i32 1)
  %2710 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2709), !noalias !20
  %2711 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2710, i32 0)
  %2712 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2709), !noalias !20
  %2713 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2711, <8 x i32> %2712, i32 1)
  %2714 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2708, <16 x i32> %2713, i32 24)
  %2715 = bitcast <16 x i32> %2714 to <32 x bfloat>
  %2716 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2715, i32 0)
  %2717 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2655, i32 0)
  %2718 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2717, <16 x bfloat> %106, i32 1)
  %2719 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2671, i32 0)
  %2720 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2719, <16 x bfloat> %106, i32 1)
  %2721 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %2718, <32 x bfloat> %2720, i32 60)
  %2722 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %2721)
  %2723 = tail call noundef <8 x i64> @llvm.aie2.add.accfloat(<8 x i64> %2678, <8 x i64> %2721, i32 28)
  %2724 = load <16 x bfloat>, ptr %2681, align 32, !tbaa !2
  %2725 = bitcast <8 x i32> %2684 to <16 x i16>
  %2726 = getelementptr bfloat, ptr %0, i20 992
  %2727 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %2724, i32 8)
  %2728 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2727, <16 x i32> %15, i32 2)
  %2729 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2728, i32 0)
  %2730 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %2725, i32 0, i32 0)
  %2731 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2730, i32 6, i32 1)
  %2732 = add <16 x i32> %2731, %31
  %2733 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2732, i32 0)
  %2734 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2733), !noalias !15
  %2735 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2734, i32 0)
  %2736 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2733), !noalias !15
  %2737 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2735, <8 x i32> %2736, i32 1)
  %2738 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2732, i32 1)
  %2739 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2738), !noalias !15
  %2740 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2739, i32 0)
  %2741 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2738), !noalias !15
  %2742 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2740, <8 x i32> %2741, i32 1)
  %2743 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2737, <16 x i32> %2742, i32 24)
  %2744 = bitcast <16 x i32> %2743 to <32 x bfloat>
  %2745 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2744, i32 0)
  %2746 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2730, i32 -2, i32 1)
  %2747 = and <16 x i32> %2746, %4
  %2748 = add <16 x i32> %2747, %52
  %2749 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2748, i32 0)
  %2750 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2749), !noalias !20
  %2751 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2750, i32 0)
  %2752 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2749), !noalias !20
  %2753 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2751, <8 x i32> %2752, i32 1)
  %2754 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2748, i32 1)
  %2755 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2754), !noalias !20
  %2756 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2755, i32 0)
  %2757 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2754), !noalias !20
  %2758 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2756, <8 x i32> %2757, i32 1)
  %2759 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2753, <16 x i32> %2758, i32 24)
  %2760 = bitcast <16 x i32> %2759 to <32 x bfloat>
  %2761 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2760, i32 0)
  %2762 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2700, i32 0)
  %2763 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2762, <16 x bfloat> %106, i32 1)
  %2764 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2716, i32 0)
  %2765 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2764, <16 x bfloat> %106, i32 1)
  %2766 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %2763, <32 x bfloat> %2765, i32 60)
  %2767 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %2766)
  %2768 = tail call noundef <8 x i64> @llvm.aie2.add.accfloat(<8 x i64> %2723, <8 x i64> %2766, i32 28)
  %2769 = load <16 x bfloat>, ptr %2726, align 32, !tbaa !2
  %2770 = bitcast <8 x i32> %2729 to <16 x i16>
  %2771 = getelementptr bfloat, ptr %0, i20 1008
  %2772 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %2769, i32 8)
  %2773 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2772, <16 x i32> %15, i32 2)
  %2774 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2773, i32 0)
  %2775 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %2770, i32 0, i32 0)
  %2776 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2775, i32 6, i32 1)
  %2777 = add <16 x i32> %2776, %31
  %2778 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2777, i32 0)
  %2779 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2778), !noalias !15
  %2780 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2779, i32 0)
  %2781 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2778), !noalias !15
  %2782 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2780, <8 x i32> %2781, i32 1)
  %2783 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2777, i32 1)
  %2784 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2783), !noalias !15
  %2785 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2784, i32 0)
  %2786 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2783), !noalias !15
  %2787 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2785, <8 x i32> %2786, i32 1)
  %2788 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2782, <16 x i32> %2787, i32 24)
  %2789 = bitcast <16 x i32> %2788 to <32 x bfloat>
  %2790 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2789, i32 0)
  %2791 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2775, i32 -2, i32 1)
  %2792 = and <16 x i32> %2791, %4
  %2793 = add <16 x i32> %2792, %52
  %2794 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2793, i32 0)
  %2795 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2794), !noalias !20
  %2796 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2795, i32 0)
  %2797 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2794), !noalias !20
  %2798 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2796, <8 x i32> %2797, i32 1)
  %2799 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2793, i32 1)
  %2800 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2799), !noalias !20
  %2801 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2800, i32 0)
  %2802 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2799), !noalias !20
  %2803 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2801, <8 x i32> %2802, i32 1)
  %2804 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2798, <16 x i32> %2803, i32 24)
  %2805 = bitcast <16 x i32> %2804 to <32 x bfloat>
  %2806 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2805, i32 0)
  %2807 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2745, i32 0)
  %2808 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2807, <16 x bfloat> %106, i32 1)
  %2809 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2761, i32 0)
  %2810 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2809, <16 x bfloat> %106, i32 1)
  %2811 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %2808, <32 x bfloat> %2810, i32 60)
  %2812 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %2811)
  %2813 = tail call noundef <8 x i64> @llvm.aie2.add.accfloat(<8 x i64> %2768, <8 x i64> %2811, i32 28)
  %2814 = load <16 x bfloat>, ptr %2771, align 32, !tbaa !2
  %2815 = bitcast <8 x i32> %2774 to <16 x i16>
  %2816 = tail call noundef <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat> %2814, i32 8)
  %2817 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2816, <16 x i32> %15, i32 2)
  %2818 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2817, i32 0)
  %2819 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %2815, i32 0, i32 0)
  %2820 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2819, i32 6, i32 1)
  %2821 = add <16 x i32> %2820, %31
  %2822 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2821, i32 0)
  %2823 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2822), !noalias !25
  %2824 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2823, i32 0)
  %2825 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2822), !noalias !25
  %2826 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2824, <8 x i32> %2825, i32 1)
  %2827 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2821, i32 1)
  %2828 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2827), !noalias !25
  %2829 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2828, i32 0)
  %2830 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2827), !noalias !25
  %2831 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2829, <8 x i32> %2830, i32 1)
  %2832 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2826, <16 x i32> %2831, i32 24)
  %2833 = bitcast <16 x i32> %2832 to <32 x bfloat>
  %2834 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2833, i32 0)
  %2835 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2819, i32 -2, i32 1)
  %2836 = and <16 x i32> %2835, %4
  %2837 = add <16 x i32> %2836, %52
  %2838 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2837, i32 0)
  %2839 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2838), !noalias !30
  %2840 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2839, i32 0)
  %2841 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2838), !noalias !30
  %2842 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2840, <8 x i32> %2841, i32 1)
  %2843 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2837, i32 1)
  %2844 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2843), !noalias !30
  %2845 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2844, i32 0)
  %2846 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2843), !noalias !30
  %2847 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2845, <8 x i32> %2846, i32 1)
  %2848 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2842, <16 x i32> %2847, i32 24)
  %2849 = bitcast <16 x i32> %2848 to <32 x bfloat>
  %2850 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2849, i32 0)
  %2851 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2790, i32 0)
  %2852 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2851, <16 x bfloat> %106, i32 1)
  %2853 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2806, i32 0)
  %2854 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2853, <16 x bfloat> %106, i32 1)
  %2855 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %2852, <32 x bfloat> %2854, i32 60)
  %2856 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %2855)
  %2857 = getelementptr inbounds bfloat, ptr %1, i20 976
  store <16 x bfloat> %2856, ptr %2857, align 32, !tbaa !2
  %2858 = bitcast <8 x i32> %2818 to <16 x i16>
  %2859 = tail call noundef <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16> %2858, i32 0, i32 0)
  %2860 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2859, i32 6, i32 1)
  %2861 = add <16 x i32> %2860, %31
  %2862 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2861, i32 0)
  %2863 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2862), !noalias !35
  %2864 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2863, i32 0)
  %2865 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2862), !noalias !35
  %2866 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2864, <8 x i32> %2865, i32 1)
  %2867 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2861, i32 1)
  %2868 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2867), !noalias !35
  %2869 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2868, i32 0)
  %2870 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2867), !noalias !35
  %2871 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2869, <8 x i32> %2870, i32 1)
  %2872 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2866, <16 x i32> %2871, i32 24)
  %2873 = bitcast <16 x i32> %2872 to <32 x bfloat>
  %2874 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2873, i32 0)
  %2875 = tail call noundef <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64> %2859, i32 -2, i32 1)
  %2876 = and <16 x i32> %2875, %4
  %2877 = add <16 x i32> %2876, %52
  %2878 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2877, i32 0)
  %2879 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2878), !noalias !40
  %2880 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2879, i32 0)
  %2881 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2878), !noalias !40
  %2882 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2880, <8 x i32> %2881, i32 1)
  %2883 = tail call <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32> %2877, i32 1)
  %2884 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32> %2883), !noalias !40
  %2885 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> undef, <8 x i32> %2884, i32 0)
  %2886 = tail call noundef <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32> %2883), !noalias !40
  %2887 = tail call <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32> %2885, <8 x i32> %2886, i32 1)
  %2888 = tail call <16 x i32> @llvm.aie2.vshuffle(<16 x i32> %2882, <16 x i32> %2887, i32 24)
  %2889 = bitcast <16 x i32> %2888 to <32 x bfloat>
  %2890 = tail call <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat> %2889, i32 0)
  %2891 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2834, i32 0)
  %2892 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2891, <16 x bfloat> %106, i32 1)
  %2893 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2850, i32 0)
  %2894 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2893, <16 x bfloat> %106, i32 1)
  %2895 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %2892, <32 x bfloat> %2894, i32 60)
  %2896 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %2895)
  %2897 = getelementptr inbounds bfloat, ptr %1, i20 992
  store <16 x bfloat> %2896, ptr %2897, align 32, !tbaa !2
  %2898 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2874, i32 0)
  %2899 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2898, <16 x bfloat> %106, i32 1)
  %2900 = tail call <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat> %2890, i32 0)
  %2901 = tail call <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat> %2900, <16 x bfloat> %106, i32 1)
  %2902 = tail call noundef <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat> %2899, <32 x bfloat> %2901, i32 60)
  %2903 = tail call noundef <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64> %2813)
  %2904 = getelementptr inbounds bfloat, ptr %1, i20 1008
  store <16 x bfloat> %2903, ptr %2904, align 32, !tbaa !2
  ret void
}

; Function Attrs: nofree nosync nounwind memory(none)
declare <8 x i64> @llvm.aie2.v16accfloat() #1

; Function Attrs: nofree nounwind memory(inaccessiblemem: read)
declare <16 x i32> @llvm.aie2.v16bf16.to.v16i32(<16 x bfloat>, i32) #2

; Function Attrs: nofree nosync nounwind memory(none)
declare <32 x bfloat> @llvm.aie2.v32bfloat16() #1

; Function Attrs: nofree nosync nounwind memory(none)
declare <32 x bfloat> @llvm.aie2.vbroadcast16.bf512(bfloat) #1

; Function Attrs: nofree nosync nounwind memory(none)
declare <16 x bfloat> @llvm.aie2.ext.bf256.bf512(<32 x bfloat>, i32) #1

; Function Attrs: nofree nosync nounwind memory(none)
declare <32 x bfloat> @llvm.aie2.set.bf512.bf256(<16 x bfloat>, i32) #1

; Function Attrs: nofree nosync nounwind memory(none)
declare <32 x bfloat> @llvm.aie2.upd.bf512.bf256(<32 x bfloat>, <16 x bfloat>, i32) #1

; Function Attrs: nofree nounwind memory(inaccessiblemem: read)
declare <8 x i64> @llvm.aie2.bf.mul16.conf(<32 x bfloat>, <32 x bfloat>, i32) #2

; Function Attrs: nofree nounwind memory(inaccessiblemem: read)
declare <16 x bfloat> @llvm.aie2.v16accfloat.to.v16bf16(<8 x i64>) #2

; Function Attrs: nofree nosync nounwind memory(none)
declare <16 x i32> @llvm.aie2.v16int32() #1

; Function Attrs: nofree nosync nounwind memory(none)
declare <16 x i32> @llvm.aie2.vbroadcast32.I512(i32) #1

; Function Attrs: nofree nosync nounwind memory(none)
declare <16 x bfloat> @llvm.aie2.v16bfloat16() #1

; Function Attrs: nofree nounwind memory(inaccessiblemem: read)
declare <8 x i64> @llvm.aie2.clr16f.conf() #2

; Function Attrs: nofree nosync nounwind memory(none)
declare <16 x i16> @llvm.aie2.v16int16() #1

; Function Attrs: nofree nosync nounwind memory(none)
declare <16 x i32> @llvm.aie2.vshuffle(<16 x i32>, <16 x i32>, i32) #1

; Function Attrs: nofree nosync nounwind memory(none)
declare <32 x i16> @llvm.aie2.v32int16() #1

; Function Attrs: nofree nosync nounwind memory(none)
declare <8 x i32> @llvm.aie2.ext.I256.I512(<16 x i32>, i32) #1

; Function Attrs: nofree nosync nounwind memory(none)
declare <16 x i64> @llvm.aie2.v16acc64() #1

; Function Attrs: nofree nounwind memory(inaccessiblemem: read)
declare <16 x i64> @llvm.aie2.acc64.v16.I256.ups(<16 x i16>, i32, i32) #2

; Function Attrs: nofree nounwind memory(inaccessiblemem: read)
declare <16 x i32> @llvm.aie2.I512.v16.acc64.srs(<16 x i64>, i32, i32) #2

; Function Attrs: nofree nosync nounwind memory(none)
declare <16 x i32> @llvm.aie2.upd.I512.I256(<16 x i32>, <8 x i32>, i32) #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare <16 x i32> @llvm.aie2.vsel32(<16 x i32>, <16 x i32>, i32) #3

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(read)
declare <8 x i32> @llvm.aie2.load.4x16.lo(<8 x i32>) #4

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(read)
declare <8 x i32> @llvm.aie2.load.4x16.hi(<8 x i32>) #4

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(inaccessiblemem: read)
declare <8 x i64> @llvm.aie2.add.accfloat(<8 x i64>, <8 x i64>, i32) #5

attributes #0 = { mustprogress nofree nounwind memory(read, argmem: readwrite) "no-trapping-math"="true" "stack-protector-buffer-size"="8" }
attributes #1 = { nofree nosync nounwind memory(none) }
attributes #2 = { nofree nounwind memory(inaccessiblemem: read) }
attributes #3 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #4 = { mustprogress nocallback nofree nosync nounwind willreturn memory(read) }
attributes #5 = { mustprogress nocallback nofree nosync nounwind willreturn memory(inaccessiblemem: read) }

!llvm.linker.options = !{}
!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 18.0.0git"}
!2 = !{!3, !3, i64 0}
!3 = !{!"omnipotent char", !4, i64 0}
!4 = !{!"Simple C++ TBAA"}
!5 = !{!6, !8}
!6 = distinct !{!6, !7, !"_ZN3aie6detail15parallel_lookupItNS0_3lutILj4Eu6__bf16u6__bf16EELNS0_14lut_oor_policyE1EE5fetchINS_6vectorItLj16EEELj16EQaaaaleclsrTL0__4sizeELi32EleTL0_0_clsrS9_4sizeEleTL0_0_sr20native_vector_lengthIT0_EE5valueEENS7_Iu6__bf16XT0_EEERKT_: argument 0"}
!7 = distinct !{!7, !"_ZN3aie6detail15parallel_lookupItNS0_3lutILj4Eu6__bf16u6__bf16EELNS0_14lut_oor_policyE1EE5fetchINS_6vectorItLj16EEELj16EQaaaaleclsrTL0__4sizeELi32EleTL0_0_clsrS9_4sizeEleTL0_0_sr20native_vector_lengthIT0_EE5valueEENS7_Iu6__bf16XT0_EEERKT_"}
!8 = distinct !{!8, !9, !"_ZN3aie15parallel_lookupItNS_3lutILj4Eu6__bf16u6__bf16EELNS_6detail14lut_oor_policyE1EE5fetchITkNS_6VectorENS_6vectorItLj16EEELj16EEENS7_Iu6__bf16XT0_EEERKT_: argument 0"}
!9 = distinct !{!9, !"_ZN3aie15parallel_lookupItNS_3lutILj4Eu6__bf16u6__bf16EELNS_6detail14lut_oor_policyE1EE5fetchITkNS_6VectorENS_6vectorItLj16EEELj16EEENS7_Iu6__bf16XT0_EEERKT_"}
!10 = !{!11, !13}
!11 = distinct !{!11, !12, !"_ZN3aie6detail15parallel_lookupItNS0_3lutILj4Eu6__bf16u6__bf16EELNS0_14lut_oor_policyE1EE5fetchINS_6vectorItLj16EEELj16EQaaaaleclsrTL0__4sizeELi32EleTL0_0_clsrS9_4sizeEleTL0_0_sr20native_vector_lengthIT0_EE5valueEENS7_Iu6__bf16XT0_EEERKT_: argument 0"}
!12 = distinct !{!12, !"_ZN3aie6detail15parallel_lookupItNS0_3lutILj4Eu6__bf16u6__bf16EELNS0_14lut_oor_policyE1EE5fetchINS_6vectorItLj16EEELj16EQaaaaleclsrTL0__4sizeELi32EleTL0_0_clsrS9_4sizeEleTL0_0_sr20native_vector_lengthIT0_EE5valueEENS7_Iu6__bf16XT0_EEERKT_"}
!13 = distinct !{!13, !14, !"_ZN3aie15parallel_lookupItNS_3lutILj4Eu6__bf16u6__bf16EELNS_6detail14lut_oor_policyE1EE5fetchITkNS_6VectorENS_6vectorItLj16EEELj16EEENS7_Iu6__bf16XT0_EEERKT_: argument 0"}
!14 = distinct !{!14, !"_ZN3aie15parallel_lookupItNS_3lutILj4Eu6__bf16u6__bf16EELNS_6detail14lut_oor_policyE1EE5fetchITkNS_6VectorENS_6vectorItLj16EEELj16EEENS7_Iu6__bf16XT0_EEERKT_"}
!15 = !{!16, !18}
!16 = distinct !{!16, !17, !"_ZN3aie6detail15parallel_lookupItNS0_3lutILj4Eu6__bf16u6__bf16EELNS0_14lut_oor_policyE1EE5fetchINS_6vectorItLj16EEELj16EQaaaaleclsrTL0__4sizeELi32EleTL0_0_clsrS9_4sizeEleTL0_0_sr20native_vector_lengthIT0_EE5valueEENS7_Iu6__bf16XT0_EEERKT_: argument 0"}
!17 = distinct !{!17, !"_ZN3aie6detail15parallel_lookupItNS0_3lutILj4Eu6__bf16u6__bf16EELNS0_14lut_oor_policyE1EE5fetchINS_6vectorItLj16EEELj16EQaaaaleclsrTL0__4sizeELi32EleTL0_0_clsrS9_4sizeEleTL0_0_sr20native_vector_lengthIT0_EE5valueEENS7_Iu6__bf16XT0_EEERKT_"}
!18 = distinct !{!18, !19, !"_ZN3aie15parallel_lookupItNS_3lutILj4Eu6__bf16u6__bf16EELNS_6detail14lut_oor_policyE1EE5fetchITkNS_6VectorENS_6vectorItLj16EEELj16EEENS7_Iu6__bf16XT0_EEERKT_: argument 0"}
!19 = distinct !{!19, !"_ZN3aie15parallel_lookupItNS_3lutILj4Eu6__bf16u6__bf16EELNS_6detail14lut_oor_policyE1EE5fetchITkNS_6VectorENS_6vectorItLj16EEELj16EEENS7_Iu6__bf16XT0_EEERKT_"}
!20 = !{!21, !23}
!21 = distinct !{!21, !22, !"_ZN3aie6detail15parallel_lookupItNS0_3lutILj4Eu6__bf16u6__bf16EELNS0_14lut_oor_policyE1EE5fetchINS_6vectorItLj16EEELj16EQaaaaleclsrTL0__4sizeELi32EleTL0_0_clsrS9_4sizeEleTL0_0_sr20native_vector_lengthIT0_EE5valueEENS7_Iu6__bf16XT0_EEERKT_: argument 0"}
!22 = distinct !{!22, !"_ZN3aie6detail15parallel_lookupItNS0_3lutILj4Eu6__bf16u6__bf16EELNS0_14lut_oor_policyE1EE5fetchINS_6vectorItLj16EEELj16EQaaaaleclsrTL0__4sizeELi32EleTL0_0_clsrS9_4sizeEleTL0_0_sr20native_vector_lengthIT0_EE5valueEENS7_Iu6__bf16XT0_EEERKT_"}
!23 = distinct !{!23, !24, !"_ZN3aie15parallel_lookupItNS_3lutILj4Eu6__bf16u6__bf16EELNS_6detail14lut_oor_policyE1EE5fetchITkNS_6VectorENS_6vectorItLj16EEELj16EEENS7_Iu6__bf16XT0_EEERKT_: argument 0"}
!24 = distinct !{!24, !"_ZN3aie15parallel_lookupItNS_3lutILj4Eu6__bf16u6__bf16EELNS_6detail14lut_oor_policyE1EE5fetchITkNS_6VectorENS_6vectorItLj16EEELj16EEENS7_Iu6__bf16XT0_EEERKT_"}
!25 = !{!26, !28}
!26 = distinct !{!26, !27, !"_ZN3aie6detail15parallel_lookupItNS0_3lutILj4Eu6__bf16u6__bf16EELNS0_14lut_oor_policyE1EE5fetchINS_6vectorItLj16EEELj16EQaaaaleclsrTL0__4sizeELi32EleTL0_0_clsrS9_4sizeEleTL0_0_sr20native_vector_lengthIT0_EE5valueEENS7_Iu6__bf16XT0_EEERKT_: argument 0"}
!27 = distinct !{!27, !"_ZN3aie6detail15parallel_lookupItNS0_3lutILj4Eu6__bf16u6__bf16EELNS0_14lut_oor_policyE1EE5fetchINS_6vectorItLj16EEELj16EQaaaaleclsrTL0__4sizeELi32EleTL0_0_clsrS9_4sizeEleTL0_0_sr20native_vector_lengthIT0_EE5valueEENS7_Iu6__bf16XT0_EEERKT_"}
!28 = distinct !{!28, !29, !"_ZN3aie15parallel_lookupItNS_3lutILj4Eu6__bf16u6__bf16EELNS_6detail14lut_oor_policyE1EE5fetchITkNS_6VectorENS_6vectorItLj16EEELj16EEENS7_Iu6__bf16XT0_EEERKT_: argument 0"}
!29 = distinct !{!29, !"_ZN3aie15parallel_lookupItNS_3lutILj4Eu6__bf16u6__bf16EELNS_6detail14lut_oor_policyE1EE5fetchITkNS_6VectorENS_6vectorItLj16EEELj16EEENS7_Iu6__bf16XT0_EEERKT_"}
!30 = !{!31, !33}
!31 = distinct !{!31, !32, !"_ZN3aie6detail15parallel_lookupItNS0_3lutILj4Eu6__bf16u6__bf16EELNS0_14lut_oor_policyE1EE5fetchINS_6vectorItLj16EEELj16EQaaaaleclsrTL0__4sizeELi32EleTL0_0_clsrS9_4sizeEleTL0_0_sr20native_vector_lengthIT0_EE5valueEENS7_Iu6__bf16XT0_EEERKT_: argument 0"}
!32 = distinct !{!32, !"_ZN3aie6detail15parallel_lookupItNS0_3lutILj4Eu6__bf16u6__bf16EELNS0_14lut_oor_policyE1EE5fetchINS_6vectorItLj16EEELj16EQaaaaleclsrTL0__4sizeELi32EleTL0_0_clsrS9_4sizeEleTL0_0_sr20native_vector_lengthIT0_EE5valueEENS7_Iu6__bf16XT0_EEERKT_"}
!33 = distinct !{!33, !34, !"_ZN3aie15parallel_lookupItNS_3lutILj4Eu6__bf16u6__bf16EELNS_6detail14lut_oor_policyE1EE5fetchITkNS_6VectorENS_6vectorItLj16EEELj16EEENS7_Iu6__bf16XT0_EEERKT_: argument 0"}
!34 = distinct !{!34, !"_ZN3aie15parallel_lookupItNS_3lutILj4Eu6__bf16u6__bf16EELNS_6detail14lut_oor_policyE1EE5fetchITkNS_6VectorENS_6vectorItLj16EEELj16EEENS7_Iu6__bf16XT0_EEERKT_"}
!35 = !{!36, !38}
!36 = distinct !{!36, !37, !"_ZN3aie6detail15parallel_lookupItNS0_3lutILj4Eu6__bf16u6__bf16EELNS0_14lut_oor_policyE1EE5fetchINS_6vectorItLj16EEELj16EQaaaaleclsrTL0__4sizeELi32EleTL0_0_clsrS9_4sizeEleTL0_0_sr20native_vector_lengthIT0_EE5valueEENS7_Iu6__bf16XT0_EEERKT_: argument 0"}
!37 = distinct !{!37, !"_ZN3aie6detail15parallel_lookupItNS0_3lutILj4Eu6__bf16u6__bf16EELNS0_14lut_oor_policyE1EE5fetchINS_6vectorItLj16EEELj16EQaaaaleclsrTL0__4sizeELi32EleTL0_0_clsrS9_4sizeEleTL0_0_sr20native_vector_lengthIT0_EE5valueEENS7_Iu6__bf16XT0_EEERKT_"}
!38 = distinct !{!38, !39, !"_ZN3aie15parallel_lookupItNS_3lutILj4Eu6__bf16u6__bf16EELNS_6detail14lut_oor_policyE1EE5fetchITkNS_6VectorENS_6vectorItLj16EEELj16EEENS7_Iu6__bf16XT0_EEERKT_: argument 0"}
!39 = distinct !{!39, !"_ZN3aie15parallel_lookupItNS_3lutILj4Eu6__bf16u6__bf16EELNS_6detail14lut_oor_policyE1EE5fetchITkNS_6VectorENS_6vectorItLj16EEELj16EEENS7_Iu6__bf16XT0_EEERKT_"}
!40 = !{!41, !43}
!41 = distinct !{!41, !42, !"_ZN3aie6detail15parallel_lookupItNS0_3lutILj4Eu6__bf16u6__bf16EELNS0_14lut_oor_policyE1EE5fetchINS_6vectorItLj16EEELj16EQaaaaleclsrTL0__4sizeELi32EleTL0_0_clsrS9_4sizeEleTL0_0_sr20native_vector_lengthIT0_EE5valueEENS7_Iu6__bf16XT0_EEERKT_: argument 0"}
!42 = distinct !{!42, !"_ZN3aie6detail15parallel_lookupItNS0_3lutILj4Eu6__bf16u6__bf16EELNS0_14lut_oor_policyE1EE5fetchINS_6vectorItLj16EEELj16EQaaaaleclsrTL0__4sizeELi32EleTL0_0_clsrS9_4sizeEleTL0_0_sr20native_vector_lengthIT0_EE5valueEENS7_Iu6__bf16XT0_EEERKT_"}
!43 = distinct !{!43, !44, !"_ZN3aie15parallel_lookupItNS_3lutILj4Eu6__bf16u6__bf16EELNS_6detail14lut_oor_policyE1EE5fetchITkNS_6VectorENS_6vectorItLj16EEELj16EEENS7_Iu6__bf16XT0_EEERKT_: argument 0"}
!44 = distinct !{!44, !"_ZN3aie15parallel_lookupItNS_3lutILj4Eu6__bf16u6__bf16EELNS_6detail14lut_oor_policyE1EE5fetchITkNS_6VectorENS_6vectorItLj16EEELj16EEENS7_Iu6__bf16XT0_EEERKT_"}
